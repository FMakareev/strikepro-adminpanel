{"version":3,"sources":["config.js","store/reduxRestEasy/.helpers/networkHelpers.js","history.js","store/reduxRestEasy/.helpers/handleStatusCode.js","store/reduxRestEasy/.helpers/ResourceHelper.js","store/reduxRestEasy/.helpers/normalizerHelpers.js","components/TextField/TextField.js","helpers/normalizeSubmissionError.js","validation/required.js","components/Form/FormSelect.js","store/reduxRestEasy/Tiles/TilesResource.js","components/FormDateTimePicker/FormDateTimePicker.js","helpers/dateToFormat.js","components/Form/FormInputColor.js","views/Tile/TileEditor/Components/TileEditorForm/TileEditorForm.js","store/reduxRestEasy/TileTypes/TileTypesResource.js","views/Tile/TileEditor/index.js"],"names":["__webpack_exports__","base","api","login","logout","posts","post","categories","category","slides","tiles","tile_types","tile","nomenclature","nomenclatures","nomenclatureCharacteristic","typesOfNomenclature","fileupload","requestPOST","body","Object","C_nodeServer_strikepro_adminpanel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","method","credentials","headers","Accept","Content-type","JSON","stringify","requestGET","requestDELETE","requestPUT","history__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","BrowserHistory","createBrowserHistory","d","handleStatusCode","_history__WEBPACK_IMPORTED_MODULE_0__","response","status","history","push","NormalizationPayload","resourceName","_this","this","C_nodeServer_strikepro_adminpanel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","mergeResourceAndPayload","resources","payload","forEach","item","id","metadata","data","concat","C_nodeServer_strikepro_adminpanel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","removePayloadFromResources","payloadID","console","log","filter","warn","payloadToResource","_this$resourceName","arguments","length","undefined","entities","C_nodeServer_strikepro_adminpanel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","result","updateResource","normalizeError","errors","message","DeleteNormalizer","Normalizer","urlParams","TextField","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","_ref","input","label","type","placeholder","required","icon","_ref$meta","meta","touched","error","a","createElement","className","addonType","assign","valid","normalizeSubmissionError","_error","prop","Array","isArray","value","FormSelect","_Component","C_nodeServer_strikepro_adminpanel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","C_nodeServer_strikepro_adminpanel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_nodeServer_strikepro_adminpanel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","C_nodeServer_strikepro_adminpanel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_nodeServer_strikepro_adminpanel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","_this$props","props","_this$props$meta","valueKey","labelKey","react__WEBPACK_IMPORTED_MODULE_5___default","reactstrap__WEBPACK_IMPORTED_MODULE_8__","map","index","selected","reactstrap__WEBPACK_IMPORTED_MODULE_9__","color","Component","defaultProps","TILES_RESOURCE_NAME","CreateTileAction","DeleteTileAction","GetTileAction","GetTilesAction","UpdateTileAction","isRetrievingGetTile","isRetrievingGetTiles","GetTiles","GetTileById","isRetrievingUpdateTile","isRetrievingCreateTile","_brigad_redux_rest_easy__WEBPACK_IMPORTED_MODULE_0__","_helpers_ResourceHelper__WEBPACK_IMPORTED_MODULE_1__","_config__WEBPACK_IMPORTED_MODULE_2__","_helpers_handleStatusCode__WEBPACK_IMPORTED_MODULE_3__","_helpers_networkHelpers__WEBPACK_IMPORTED_MODULE_4__","_helpers_normalizerHelpers__WEBPACK_IMPORTED_MODULE_5__","TilesResource","createResource","createTile","url","config","normalizer","query","otherArgs","hasOwnProperty","networkHelpers","deleteTile","getTile","getTiles","updateTile","actions","perform","selectors","resource","getResource","getResourceById","request","isPerforming","FormDateTimePicker","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","inherits","createClass","date","onChange","format","react_default","FormGroup","Label","es","locale","minDate","Date","FormInputColor","Input","style","padding","height","TileEditorForm","_getPrototypeOf2","_len","args","_key","onSubmit","values","then","normalizedPayload","catch","SubmissionError","_ref2","handleSubmit","tileTypes","Row","Col","xs","md","lg","Field","name","component","validate","Alert","Button","reduxForm","form","connectRestEasy","state","ownProps","dispatch","options","withRouter","TileTypesResource","createTileType","deleteTileType","getTileType","getTileTypes","updateTileType","GetTileTypesAction","GetTileTypes","isRetrievingGetTileTypes","TileEditor","params","match","_this$props2","initialValues","TileEditorForm_TileEditorForm"],"mappings":"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","file":"static/js/30.6a275f15.chunk.js","sourcesContent":["export default {\r\n  //base: window.location.hostname === 'localhost' ? 'https://dev.strikepro.ru' : '',\r\n  base: 'https://dev.strikepro.ru',\r\n  api: {\r\n    login: '/dashboard/auth/login',\r\n    logout: '/dashboard/auth/logout',\r\n\r\n    posts: '/dashboard/blog/posts',\r\n    post: '/dashboard/blog/post',\r\n\r\n    categories: '/dashboard/blog/categories',\r\n    category: '/dashboard/blog/category',\r\n\r\n    slides: '/dashboard/slides',\r\n\r\n    tiles: '/dashboard/mainfeeds',\r\n\r\n    tile_types: '/dashboard/mainfeed/types',\r\n    tile: '/dashboard/mainfeed',\r\n\r\n    nomenclature: '/dashboard/nomenclature',\r\n    nomenclatures: '/dashboard/nomenclatures',\r\n\r\n    nomenclatureCharacteristic: '/dashboard/nomenclature/characteristic',\r\n    typesOfNomenclature: '/dashboard/nomenclature/characteristic',\r\n    fileupload: '/dashboard/fileupload',\r\n  }\r\n}\r\n","export const requestPOST = (body) => {\r\n  return {\r\n    method: 'POST',\r\n    credentials: 'include',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-type': 'application/json',\r\n    },\r\n    ...(body? {body: JSON.stringify(body)} : {})\r\n\r\n  }\r\n};\r\n\r\nexport const requestGET = () => {\r\n  return {\r\n    method: 'GET',\r\n    credentials: 'include',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-type': 'application/json',\r\n    }\r\n  }\r\n};\r\n\r\nexport const requestDELETE = () => {\r\n  return {\r\n    method: 'DELETE',\r\n    credentials: 'include',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-type': 'application/json',\r\n    }\r\n  }\r\n};\r\n\r\nexport const requestPUT = (body) => {\r\n  return {\r\n    method: 'PUT',\r\n    credentials: 'include',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-type': 'application/json',\r\n    },\r\n    body: JSON.stringify(body),\r\n  }\r\n};\r\n","import {createBrowserHistory} from 'history';\r\n\r\nexport const BrowserHistory = createBrowserHistory();\r\n\r\nexport default BrowserHistory;\r\n","import history from \"../../../history\";\r\n\r\n\r\nexport const handleStatusCode = (response) => {\r\n  const {status} = response;\r\n  if (status === 401) {\r\n    history.push('/login');\r\n    return response\r\n  }\r\n\r\n  if (status === 404) {\r\n    history.push('/404');\r\n    return response\r\n  }\r\n\r\n\r\n  return response\r\n};\r\n\r\nexport default handleStatusCode;\r\n","export class NormalizationPayload {\r\n\r\n  resourceName = null;\r\n\r\n  constructor(resourceName) {\r\n    this.resourceName = resourceName;\r\n  }\r\n\r\n  /**\r\n   * @param {object} resources - объект с исходными ресурсами\r\n   * @param {array} payload - массив с новыми ресурсами\r\n   * @desc метод для добавления в существующие ресурсы новых ресурсов\r\n   * */\r\n  mergeResourceAndPayload = (resources, payload) => {\r\n    payload.forEach((item) => {\r\n      resources[this.resourceName][this.resourceName][item.id] = item;\r\n      resources[this.resourceName].metadata = {\r\n        data: [...resources[this.resourceName].metadata.data, item.id],\r\n      };\r\n    });\r\n    return resources;\r\n  };\r\n\r\n  /**\r\n   * @param {array} resources\r\n   * @param {string} payloadID\r\n   * @desc\r\n   * */\r\n  removePayloadFromResources = (resources, payloadID) => {\r\n    if (!payloadID) {\r\n      console.warn('payloadID undefined');\r\n      return resources;\r\n    }\r\n    console.log('removePayloadFromResources: ', this, resources, payloadID);\r\n    delete resources[this.resourceName][this.resourceName][payloadID];\r\n    resources[this.resourceName].metadata.data = resources[this.resourceName]\r\n      .metadata.data.filter(item => item !== payloadID);\r\n    return resources;\r\n  };\r\n\r\n  /**\r\n   * @param {array} payload\r\n   * @param {object} metadata\r\n   * @desc\r\n   * */\r\n  payloadToResource = (payload, metadata = {}) => {\r\n    const data = {\r\n      entities: {\r\n        [this.resourceName]: {\r\n          [this.resourceName]: {},\r\n          metadata: {}\r\n        },\r\n      },\r\n      result: []\r\n    };\r\n    if (payload) {\r\n      payload.forEach((item) => {\r\n        data.result.push(item.id);\r\n        data.entities[this.resourceName][this.resourceName][item.id] = item;\r\n      });\r\n    }\r\n    data.entities[this.resourceName].metadata = {\r\n      ...metadata,\r\n      data: data.result,\r\n    };\r\n    return data;\r\n  };\r\n\r\n  /**\r\n   * @param {object} resources - объект с исходными ресурсами\r\n   * @param {object} payload - массив с новыми ресурсами\r\n   * @desc метод для добавления в существующие ресурсы новых ресурсов\r\n   * */\r\n  updateResource = (resources, payload) => {\r\n    resources[this.resourceName][this.resourceName][payload.id] = payload;\r\n    return resources;\r\n  };\r\n\r\n  /**\r\n   * @param {object} payload\r\n   * @param {object} payload.errors\r\n   * @param {array} payload.errors.propName\r\n   * @param {string} payload.message\r\n   * */\r\n  normalizeError = (payload) => {\r\n    if(!payload.errors){\r\n      payload.errors = {};\r\n    }\r\n    return {\r\n      entities: {\r\n        ...payload,\r\n        message: [payload.message]\r\n      },\r\n      result: {errors: payload}\r\n    };\r\n  }\r\n\r\n}\r\n","\r\n\r\nexport const DeleteNormalizer = (Normalizer)=> (payload, resources, urlParams,) => {\r\n  if (payload.errors) {\r\n    return Normalizer.normalizeError(payload);\r\n  }\r\n  if (payload) {\r\n    return Normalizer.removePayloadFromResources(resources, urlParams.id);\r\n  }\r\n  return resources;\r\n};\r\n\r\n\r\nexport const CreateNormalizer = (Normalizer) => (payload, resources, urlParams) => {\r\n  if (!payload ) {\r\n    return null\r\n  }\r\n  if (payload.errors || payload.message) {\r\n    return Normalizer.normalizeError(payload);\r\n  }\r\n\r\n  if (resources.hasOwnProperty(Normalizer.resourceName)) {\r\n    return Normalizer.mergeResourceAndPayload(resources, [payload])\r\n  } else {\r\n    return Normalizer.payloadToResource([payload]);\r\n  }\r\n};\r\n\r\nexport const UpdateNormalizer = (Normalizer) => (payload, resources) => {\r\n  if (payload.errors || payload.message) {\r\n    return Normalizer.normalizeError(payload);\r\n  }\r\n  if (payload) {\r\n    return Normalizer.updateResource(resources, payload);\r\n  }\r\n  return resources;\r\n};\r\n\r\nexport const GetListNormalizer = (Normalizer) => (payload) => {\r\n  if (!payload && payload.error) {\r\n    return null;\r\n  }\r\n  if (Array.isArray(payload)) {\r\n    return Normalizer.payloadToResource(payload);\r\n  } else {\r\n    return Normalizer.payloadToResource(payload.data, payload);\r\n  }\r\n};\r\n\r\nexport const GetByIdNormalizer = (Normalizer) => (payload) => Normalizer.payloadToResource([payload])\r\n","import React from \"react\";\r\nimport {FormFeedback, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, Label} from \"reactstrap\";\r\n\r\nexport const TextField = ({input, label, type, placeholder, required, icon, meta: {touched, error}}) => (\r\n  <FormGroup className={touched ? error ? '' : 'was-validated' : ''}>\r\n    {\r\n      label && <Label>{label}</Label>\r\n    }\r\n    <InputGroup className=\"mb-3\">\r\n      {\r\n        icon &&\r\n        <InputGroupAddon addonType=\"prepend\">\r\n          <InputGroupText>\r\n            <i className={icon}/>\r\n          </InputGroupText>\r\n        </InputGroupAddon>\r\n      }\r\n\r\n      <Input\r\n        {...input}\r\n        type={type}\r\n        valid={touched ? !error : false}\r\n        className={touched ? error ? 'form-control-warning is-invalid' : '' : ''}\r\n        placeholder={placeholder || label}\r\n        required={required}/>\r\n      <FormFeedback\r\n        valid={touched ? !error : false}\r\n        className=\"help-block\">\r\n        {error}\r\n      </FormFeedback>\r\n    </InputGroup>\r\n\r\n  </FormGroup>)\r\n\r\nexport default TextField;\r\n","\r\n/**\r\n * @param {object} error\r\n * @param {object} error.errors\r\n * @param {array} error.message\r\n * */\r\nexport const normalizeSubmissionError = (error) => {\r\n  const data = {\r\n    _error: error.message ? error.message[0] : null,\r\n  };\r\n  for (let prop in error.errors) {\r\n    if (Array.isArray(error.errors[prop])) {\r\n      data[prop] = error.errors[prop][0];\r\n    }\r\n  }\r\n  return data;\r\n}\r\n","export const required = value => {\r\n  return (value ? undefined : 'Обязательно для заполнения');\r\n};\r\n","import React, {Component} from 'react';\r\nimport {Alert, FormGroup, Input, Label} from \"reactstrap\";\r\n\r\n\r\nexport class FormSelect extends Component {\r\n\r\n  static defaultProps = {\r\n    valueKey: 'id',\r\n    labelKey: 'name',\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      input,\r\n      label,\r\n      type,\r\n      data,\r\n      meta: {touched, error},\r\n      valueKey,\r\n      labelKey,\r\n    } = this.props;\r\n    return (\r\n      <FormGroup>\r\n        <Label>{label}</Label>\r\n        <Input type={type} {...input} >\r\n          <option>выберите категорию...</option>\r\n          {\r\n            Array.isArray(data) && data.map((item, index) => (<option\r\n              key={index}\r\n              selected={item[valueKey] === input.value}\r\n              value={item[valueKey]}>\r\n              {item[labelKey]}\r\n            </option>))\r\n          }\r\n        </Input>\r\n        {\r\n          touched && error &&\r\n          <Alert color=\"danger\">\r\n            {error}\r\n          </Alert>\r\n\r\n        }\r\n      </FormGroup>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default FormSelect;\r\n","import {createResource} from '@brigad/redux-rest-easy';\r\nimport {NormalizationPayload} from \"../.helpers/ResourceHelper\";\r\nimport config from \"../../../config\";\r\nimport {handleStatusCode} from \"../.helpers/handleStatusCode\";\r\nimport {requestDELETE, requestGET, requestPOST, requestPUT} from \"../.helpers/networkHelpers\";\r\nimport {DeleteNormalizer} from \"../.helpers/normalizerHelpers\";\r\n\r\n\r\nexport const TILES_RESOURCE_NAME = 'tiles';\r\n\r\nconst Normalizer = new NormalizationPayload(TILES_RESOURCE_NAME);\r\n\r\n\r\nexport const TilesResource = createResource(TILES_RESOURCE_NAME)({\r\n  createTile: {\r\n    method: 'POST',\r\n    url: `${config.base}${config.api.tile}`,\r\n    normalizer: (payload, resources, urlParams, query, body, otherArgs) => {\r\n      console.log('createTile: ', payload, resources, urlParams,query, body, otherArgs);\r\n      if (!payload ) {\r\n        return null\r\n      }\r\n      if (payload.errors || payload.message) {\r\n        return Normalizer.normalizeError(payload);\r\n      }\r\n\r\n      if (resources.hasOwnProperty(TILES_RESOURCE_NAME)) {\r\n        return Normalizer.mergeResourceAndPayload(resources, [payload])\r\n      } else {\r\n        return Normalizer.payloadToResource([payload]);\r\n      }\r\n    },\r\n    networkHelpers: {\r\n      handleStatusCode:(response)=>{\r\n        handleStatusCode(response)\r\n      },\r\n      requestPOST: requestPOST\r\n    },\r\n  },\r\n  deleteTile: {\r\n    method: 'DELETE',\r\n    url: `${config.base}${config.api.tile}/::id`,\r\n    normalizer: DeleteNormalizer(Normalizer),\r\n    networkHelpers: {\r\n      handleStatusCode,\r\n      requestDELETE: requestDELETE,\r\n    },\r\n  },\r\n  getTile: {\r\n    method: 'GET',\r\n    url: `${config.base}${config.api.tile}/::id`,\r\n    normalizer: (payload) => Normalizer.payloadToResource([payload]),\r\n    networkHelpers: {\r\n      handleStatusCode,\r\n      requestGET: requestGET,\r\n    },\r\n  },\r\n  getTiles: {\r\n    method: 'GET',\r\n    url: `${config.base}${config.api.tiles}`,\r\n    normalizer: (payload) => {\r\n      if (!payload && payload.error) {\r\n        return null;\r\n      }\r\n      if (Array.isArray(payload)) {\r\n        return Normalizer.payloadToResource(payload);\r\n      } else {\r\n        return Normalizer.payloadToResource(payload.data, payload);\r\n      }\r\n    },\r\n    networkHelpers: {\r\n      handleStatusCode,\r\n      requestGET: requestGET,\r\n    },\r\n  },\r\n  updateTile: {\r\n    method: 'PUT',\r\n    url: `${config.base}${config.api.tile}/::id`,\r\n    normalizer: (payload, resources) => {\r\n      if (payload.errors) {\r\n        return Normalizer.normalizeError(payload);\r\n      }\r\n      if (payload) {\r\n        return Normalizer.updateResource(resources, payload);\r\n      }\r\n      return resources;\r\n    },\r\n    networkHelpers: {\r\n      handleStatusCode,\r\n      requestPUT: requestPUT,\r\n    },\r\n  },\r\n});\r\n\r\n\r\nconst {\r\n  actions: {\r\n    createTile: {\r\n      perform: CreateTileAction,\r\n    },\r\n    deleteTile: {\r\n      perform: DeleteTileAction,\r\n    },\r\n    getTile: {\r\n      perform: GetTileAction,\r\n    },\r\n    getTiles: {\r\n      perform: GetTilesAction,\r\n    },\r\n    updateTile: {\r\n      perform: UpdateTileAction,\r\n    },\r\n  },\r\n  selectors: {\r\n    resource: {\r\n      getResource: GetTiles,\r\n      getResourceById: GetTileById,\r\n    },\r\n    createTile: {\r\n      request: {\r\n        getResource: CreateTileGetResource,\r\n        isPerforming: isRetrievingCreateTile,\r\n      }\r\n    },\r\n    deleteTile: {\r\n      request: {\r\n        getResource: DeleteTileGetResource,\r\n      }\r\n    },\r\n    getTile: {\r\n      request: {\r\n        getResource: GetTileGetResource,\r\n        isPerforming: isRetrievingGetTile,\r\n      }\r\n    },\r\n    getTiles: {\r\n      request: {\r\n        getResource: GetTilesGetResource,\r\n        isPerforming: isRetrievingGetTiles,\r\n      }\r\n    },\r\n    updateTile: {\r\n      request: {\r\n        getResource: UpdateTileGetResource,\r\n        isPerforming: isRetrievingUpdateTile,\r\n      }\r\n    },\r\n  }\r\n} = TilesResource;\r\n\r\nexport {\r\n  CreateTileAction,\r\n  DeleteTileAction,\r\n  GetTileAction,\r\n  GetTilesAction,\r\n  UpdateTileAction,\r\n\r\n  CreateTileGetResource,\r\n  DeleteTileGetResource,\r\n  GetTileGetResource,\r\n  GetTilesGetResource,\r\n  UpdateTileGetResource,\r\n  isRetrievingGetTile,\r\n  isRetrievingGetTiles,\r\n  GetTiles,\r\n  GetTileById,\r\n\r\n  isRetrievingUpdateTile,\r\n  isRetrievingCreateTile,\r\n}\r\n","import React, {Component} from 'react';\r\nimport {FormGroup, Label} from \"reactstrap\";\r\nimport DatePicker  from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {dateToFormat} from \"../../helpers/dateToFormat\";\r\n\r\n\r\n\r\n\r\nexport class FormDateTimePicker extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n\r\n  handleChange(value) {\r\n    const {input: {onChange}} = this.props;\r\n    return onChange(dateToFormat(value));\r\n  }\r\n\r\n  render() {\r\n    const {label, input: {value}} = this.props;\r\n\r\n    return (\r\n      <div className=\"controls\">\r\n        <FormGroup>\r\n          <Label>{label}</Label>\r\n          <DatePicker\r\n            locale={'ru'}\r\n            minDate={new Date()}\r\n            selected={new Date(value || new Date() )}\r\n            onChange={this.handleChange}\r\n            className={'form-control full-width'}\r\n          />\r\n        </FormGroup>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default FormDateTimePicker;\r\n","import {format} from 'date-fns/esm'\r\n\r\nexport const DEFAULT_DATE_FORMAT = \"yyyy-MM-d h:mm:ss\";\r\n\r\nexport const dateToFormat = (date) => {\r\n  return format(date, DEFAULT_DATE_FORMAT);\r\n};\r\n","import React from 'react';\r\nimport {FormGroup, Input, Label} from \"reactstrap\";\r\n\r\nexport const FormInputColor = ({input, label, type, meta: {touched, error}}) => {\r\n    return (\r\n        <div className=\"controls\">\r\n            <FormGroup>\r\n                <Label>{label}</Label>\r\n                <Input style={{    padding: 'inherit',\r\n                    height: '35px'}} type={type} {...input}/>\r\n            </FormGroup>\r\n            <p className=\"help-block\">{touched && error && <span>{error}</span>}</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default FormInputColor;\r\n","import React, {Component} from 'react';\r\nimport {Col, FormGroup, Row, Button, Alert} from \"reactstrap\";\r\nimport {Field, reduxForm, SubmissionError} from \"redux-form\";\r\nimport FormSelect from \"../../../../../components/Form/FormSelect\";\r\nimport FormDateTimePicker from \"../../../../../components/FormDateTimePicker/FormDateTimePicker\";\r\nimport FormInputColor from \"../../../../../components/Form/FormInputColor\";\r\nimport {TextField} from \"../../../../../components/TextField/TextField\";\r\nimport {connect as connectRestEasy} from \"@brigad/redux-rest-easy\";\r\n\r\nimport {\r\n  CreateTileAction,\r\n  isRetrievingCreateTile, isRetrievingUpdateTile,\r\n  UpdateTileAction\r\n} from \"../../../../../store/reduxRestEasy/Tiles/TilesResource\";\r\nimport {normalizeSubmissionError} from \"../../../../../helpers/normalizeSubmissionError\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {required} from \"../../../../../validation/required\";\r\n\r\n\r\nexport class TileEditorForm extends Component {\r\n\r\n  onSubmit = (values) => {\r\n    const {history} = this.props;\r\n    if (values.hasOwnProperty('id')) {\r\n      return this.props.UpdateTileAction({\r\n        body: values,\r\n        urlParams: {\r\n          id: values.id,\r\n        }\r\n      })\r\n        .then(({normalizedPayload}) => {\r\n          if (normalizedPayload && normalizedPayload.errors) {\r\n            throw normalizedPayload;\r\n          }\r\n          history.push('/tile-list');\r\n        })\r\n        .catch(error => {\r\n          throw new SubmissionError(normalizeSubmissionError(error));\r\n        })\r\n    } else {\r\n      return this.props.CreateTileAction({\r\n        body: values,\r\n      })\r\n        .then(({normalizedPayload}) => {\r\n          if (normalizedPayload && normalizedPayload.errors) {\r\n            throw normalizedPayload;\r\n          }\r\n          history.push('/tile-list');\r\n        })\r\n        .catch(error => {\r\n          throw new SubmissionError(normalizeSubmissionError(error));\r\n        })\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {error, handleSubmit, tileTypes} = this.props;\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit(this.onSubmit)}>\r\n        <Row>\r\n          <Col xs=\"12\" md=\"6\" lg=\"4\">\r\n            <Field\r\n              name=\"resource_id\"\r\n              component={TextField}\r\n              label=\"resource_id\"\r\n              type=\"text\"\r\n              validate={[required]}\r\n            />\r\n          </Col>\r\n          {\r\n            tileTypes &&\r\n            <Col xs=\"12\" md=\"6\" lg=\"4\">\r\n              <Field\r\n                name=\"resource_type\"\r\n                component={FormSelect}\r\n                valueKey={'name'}\r\n                label=\"resource_type\"\r\n                type=\"select\"\r\n                data={tileTypes}\r\n              />\r\n            </Col>\r\n          }\r\n          <Col xs=\"12\" md=\"6\" lg=\"4\">\r\n            <Field\r\n              name=\"cols\"\r\n              component={TextField}\r\n              label=\"cols\"\r\n              type=\"text\"\r\n            />\r\n          </Col>\r\n          <Col xs=\"12\" md=\"6\" lg=\"4\">\r\n            <Field\r\n              name=\"background_color\"\r\n              component={FormInputColor}\r\n              label=\"background_color\"\r\n              type=\"color\"\r\n            />\r\n          </Col>\r\n          <Col xs=\"12\" md=\"6\" lg=\"4\">\r\n            <Field\r\n              name=\"public_at\"\r\n              label=\"public_at\"\r\n              component={FormDateTimePicker}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        {\r\n          error &&\r\n          <Row>\r\n            <Col xs=\"12\">\r\n              <Alert color=\"danger\">\r\n                {error}\r\n              </Alert>\r\n            </Col>\r\n          </Row>\r\n\r\n        }\r\n\r\n        <Row>\r\n          <Col xs=\"6\">\r\n            <div className=\"controls\">\r\n              <FormGroup>\r\n                <Button\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"px-4\"\r\n                  // disabled={pristine || submitting}\r\n                >Сохранить</Button>\r\n              </FormGroup>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </form>\r\n    )\r\n  }\r\n};\r\n\r\nTileEditorForm.propTypes = {};\r\n\r\nTileEditorForm.defaultProps = {};\r\n\r\n\r\nTileEditorForm = reduxForm({\r\n  form: 'TileEditorForm'\r\n})(TileEditorForm);\r\n\r\nTileEditorForm = connectRestEasy(\r\n  (state, ownProps) => ({\r\n    isRetrievingCreateTile: isRetrievingCreateTile(state, ownProps),\r\n    isRetrievingUpdateTile: isRetrievingUpdateTile(state, ownProps),\r\n  }),\r\n  dispatch => ({\r\n    CreateTileAction: (options) => dispatch(CreateTileAction(options)),\r\n    UpdateTileAction: (options) => dispatch(UpdateTileAction(options)),\r\n  })\r\n)(TileEditorForm);\r\n\r\nTileEditorForm = withRouter(TileEditorForm);\r\n\r\n\r\nexport default TileEditorForm;\r\n","import {createResource} from '@brigad/redux-rest-easy';\r\nimport {NormalizationPayload} from \"../.helpers/ResourceHelper\";\r\nimport config from \"../../../config\";\r\nimport {handleStatusCode} from \"../.helpers/handleStatusCode\";\r\nimport {requestDELETE, requestGET, requestPOST, requestPUT} from \"../.helpers/networkHelpers\";\r\nimport {DeleteNormalizer} from \"../.helpers/normalizerHelpers\";\r\n\r\n\r\nexport const TILE_TYPES_RESOURCE_NAME = 'tileTypes';\r\n\r\nconst Normalizer = new NormalizationPayload(TILE_TYPES_RESOURCE_NAME);\r\n\r\n\r\nexport const TileTypesResource = createResource(TILE_TYPES_RESOURCE_NAME)({\r\n  createTileType: {\r\n    method: 'POST',\r\n    url: `${config.base}${config.api.tile_types}`,\r\n    normalizer: (payload, resources, urlParams) => {\r\n      if (!payload) {\r\n        return null\r\n      }\r\n      if (payload.errors) {\r\n        return Normalizer.normalizeError(payload);\r\n      }\r\n\r\n      if (resources.hasOwnProperty(TILE_TYPES_RESOURCE_NAME)) {\r\n        return Normalizer.mergeResourceAndPayload(resources, [payload])\r\n      } else {\r\n        return Normalizer.payloadToResource([payload]);\r\n      }\r\n    },\r\n    networkHelpers: {\r\n      handleStatusCode,\r\n      requestPOST: requestPOST\r\n    },\r\n  },\r\n  deleteTileType: {\r\n    method: 'DELETE',\r\n    url: `${config.base}${config.api.tile_types}/::id`,\r\n    normalizer: DeleteNormalizer(Normalizer),\r\n\r\n    networkHelpers: {\r\n      handleStatusCode,\r\n      requestDELETE: requestDELETE,\r\n    },\r\n  },\r\n  getTileType: {\r\n    method: 'GET',\r\n    url: `${config.base}${config.api.tile_types}/::id`,\r\n    normalizer: (payload) => Normalizer.payloadToResource([payload]),\r\n    networkHelpers: {\r\n      handleStatusCode,\r\n      requestGET: requestGET,\r\n    },\r\n  },\r\n  getTileTypes: {\r\n    method: 'GET',\r\n    url: `${config.base}${config.api.tile_types}`,\r\n    normalizer: (payload) => {\r\n      if (!payload && payload.error) {\r\n        return null;\r\n      }\r\n      if (Array.isArray(payload)) {\r\n        return Normalizer.payloadToResource(payload.map((item,index) => ({id: index, name: item})));\r\n      } else {\r\n        return Normalizer.payloadToResource(payload.data, payload);\r\n      }\r\n    },\r\n    networkHelpers: {\r\n      handleStatusCode,\r\n      requestGET: requestGET,\r\n    },\r\n  },\r\n  updateTileType: {\r\n    method: 'PUT',\r\n    url: `${config.base}${config.api.tile_types}/::id`,\r\n    normalizer: (payload, resources) => {\r\n      if (payload.errors) {\r\n        return Normalizer.normalizeError(payload);\r\n      }\r\n      if (payload) {\r\n        return Normalizer.updateResource(resources, payload);\r\n      }\r\n      return resources;\r\n    },\r\n    networkHelpers: {\r\n      handleStatusCode,\r\n      requestPUT: requestPUT,\r\n    },\r\n  },\r\n});\r\n\r\n\r\nconst {\r\n  actions: {\r\n    createTileType: {\r\n      perform: CreateTileTypeAction,\r\n    },\r\n    deleteTileType: {\r\n      perform: DeleteTileTypeAction,\r\n    },\r\n    getTileType: {\r\n      perform: GetTileTypeAction,\r\n    },\r\n    getTileTypes: {\r\n      perform: GetTileTypesAction,\r\n    },\r\n    updateTileType: {\r\n      perform: UpdateTileTypeAction,\r\n    },\r\n  },\r\n  selectors: {\r\n    resource: {\r\n      getResource: GetTileTypes,\r\n      getResourceById: GetTileTypeById,\r\n    },\r\n    createTileType: {\r\n      request: {\r\n        getResource: CreateTileTypeGetResource,\r\n        isPerforming: isRetrievingCreateTileType,\r\n      }\r\n    },\r\n    deleteTileType: {\r\n      request: {\r\n        getResource: DeleteTileTypeGetResource,\r\n      }\r\n    },\r\n    getTileType: {\r\n      request: {\r\n        getResource: GetTileTypeGetResource,\r\n        isPerforming: isRetrievingGetTileType,\r\n      }\r\n    },\r\n    getTileTypes: {\r\n      request: {\r\n        getResource: GetTileTypesGetResource,\r\n        isPerforming: isRetrievingGetTileTypes,\r\n      }\r\n    },\r\n    updateTileType: {\r\n      request: {\r\n        getResource: UpdateTileTypeGetResource,\r\n        isPerforming: isRetrievingUpdateTileType,\r\n      }\r\n    },\r\n  }\r\n} = TileTypesResource;\r\n\r\nexport {\r\n  CreateTileTypeAction,\r\n  DeleteTileTypeAction,\r\n  GetTileTypeAction,\r\n  GetTileTypesAction,\r\n  UpdateTileTypeAction,\r\n\r\n  CreateTileTypeGetResource,\r\n  DeleteTileTypeGetResource,\r\n  GetTileTypeGetResource,\r\n  GetTileTypesGetResource,\r\n  UpdateTileTypeGetResource,\r\n  isRetrievingGetTileType,\r\n  isRetrievingGetTileTypes,\r\n  GetTileTypes,\r\n  GetTileTypeById,\r\n\r\n  isRetrievingUpdateTileType,\r\n  isRetrievingCreateTileType,\r\n}\r\n","import React, {Component} from 'react';\r\nimport {TileEditorForm} from \"./Components/TileEditorForm/TileEditorForm\";\r\nimport {connect as connectRestEasy} from \"@brigad/redux-rest-easy\";\r\nimport {\r\n  GetTileAction,\r\n  GetTileById,\r\n  isRetrievingGetTile,\r\n  TILES_RESOURCE_NAME\r\n} from \"../../../store/reduxRestEasy/Tiles/TilesResource\";\r\nimport {\r\n  GetTileTypes,\r\n  GetTileTypesAction,\r\n  isRetrievingGetTileTypes\r\n} from \"../../../store/reduxRestEasy/TileTypes/TileTypesResource\";\r\n\r\nexport class TileEditor extends Component {\r\n\r\n  componentWillMount() {\r\n    const {match: {params}, GetTileAction, GetTileTypesAction} = this.props;\r\n    if (params && params.id) {\r\n      GetTileAction({\r\n        urlParams: {\r\n          id: params.id,\r\n        }\r\n      });\r\n    }\r\n    GetTileTypesAction();\r\n  }\r\n\r\n\r\n  render() {\r\n    const {\r\n      tile,\r\n      tileTypes,\r\n      match: {params},\r\n      isRetrievingGetTile,\r\n      isRetrievingGetTileTypes\r\n    } = this.props;\r\n    if (isRetrievingGetTile || isRetrievingGetTileTypes) {\r\n      return <div>Loading....</div>\r\n    }\r\n    if (!tileTypes.length) {\r\n      return null;\r\n    }\r\n    let initialValues = {\r\n      initialValues: params && params.id && tile(params.id)\r\n    };\r\n    const data = tileTypes && Object.values(tileTypes[0]);\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <TileEditorForm tileTypes={data} {...initialValues}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nTileEditor = connectRestEasy(\r\n  (state, ownProps) => ({\r\n    tileTypes: GetTileTypes(state, ownProps),\r\n    tile: (id) => {\r\n      const data = GetTileById(state, TILES_RESOURCE_NAME, id);\r\n      console.log(data);\r\n      if (data) {\r\n        return data[id];\r\n      }\r\n      return null;\r\n    },\r\n    isRetrievingGetTileTypes: isRetrievingGetTileTypes(state, ownProps),\r\n    isRetrievingGetTile: isRetrievingGetTile(state, ownProps),\r\n  }),\r\n  dispatch => ({\r\n    GetTileAction: (options) => dispatch(GetTileAction(options)),\r\n    GetTileTypesAction: (options) => dispatch(GetTileTypesAction(options)),\r\n  })\r\n)(TileEditor);\r\n\r\nexport default TileEditor;\r\n"],"sourceRoot":""}