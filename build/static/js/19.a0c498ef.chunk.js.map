{"version":3,"sources":["views/Blog/View/PostEdit/Components/MetaFields/MetaFields.js","views/Blog/View/PostEdit/Components/OGMetaFields/OGMetaFields.js","views/Blog/View/PostEdit/PostEditForm.js","views/Blog/View/PostEdit/index.js","helpers/hasOwnProperty.js","config.js","store/reduxRestEasy/.helpers/networkHelpers.js","store/reduxRestEasy/.helpers/handleStatusCode.js","store/reduxRestEasy/.helpers/ResourceHelper.js","store/reduxRestEasy/.helpers/normalizerHelpers.js","components/TextField/TextField.js","helpers/normalizeSubmissionError.js","helpers/createSubmitHandler.js","validation/required.js","components/Form/FormSelect.js","helpers/dateToFormat.js","store/reduxRestEasy/UrlAlias/UrlAliasResource.js","store/reduxRestEasy/Blog/BlogCategoryResource.js","components/FormDateTimePicker/FormDateTimePicker.js","components/Form/form_ckeditor.js","validation/maxLength.js","validation/URIValidation.js","store/reduxRestEasy/Blog/BlogPostResource.js","components/Form/FormTagInput.js","../node_modules/reactstrap/es/CardBlock.js","components/URLAliaseField/URLAliaseField.js"],"names":["maxLength255","maxLength","injectIntl","_ref","intl","react_default","a","createElement","react","Col","xs","index_es","id","defaultMessage","Field","name","component","TextField","placeholder","messages","label","type","validate","FormTagInput","md","lg","PostEditForm","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSubmit","asyncToGenerator","regenerator_default","mark","_callee","values","_this$props","history","UpdatePostAction","CreatePostAction","wrap","_context","prev","next","console","log","hasOwnProperty","createSubmitHandler","body","urlParams","push","stop","_x","apply","arguments","state","initialState","inherits","createClass","key","value","_this$props2","error","handleSubmit","categories","reset","pristine","submitting","Row","Card","CardHeader","CardBlock","className","required","isAutoGenTransliteration","URLAliasField","subscribeField","formValues","URIValidation","FormSelect","defaultValue","data","FormDateTimePicker","FormCKEditor","ref","Components_MetaFields_MetaFields","Components_OGMetaFields_OGMetaFields","Alert","color","CardFooter","Button","disabled","onClick","get","Component","connect","getFormValues","reduxForm","form","_ref2","errors","status","category_id","title","alias_url","res","connectRestEasy","ownProps","isRetrievingCreatePost","dispatch","options","CreateUrlAliasAction","UpdateUrlAliasAction","withRouter","PostEditor","params","match","GetPostAction","GetCategoriesAction","query","without_pagination","post","isRetrievingGetPost","isRetrievingCategories","Preloader","length","initialValues","PostEdit_PostEditForm","assign","GetPostById","GetCategories","__webpack_require__","d","__webpack_exports__","obj","prop","prototype","base","window","location","hostname","api","login","logout","posts","category","slides","tiles","tile_types","tile","nomenclature","nomenclatures","nomenclatureCharacteristic","typesOfNomenclature","fileupload","static_pages","url_alias","feedback","requestPOST","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","method","credentials","headers","Accept","Content-type","JSON","stringify","requestGET","requestDELETE","requestPUT","handleStatusCode","_history__WEBPACK_IMPORTED_MODULE_0__","response","reload","NormalizationPayload","resourceName","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","mergeResourceAndPayload","resources","payload","forEach","item","metadata","concat","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","removePayloadFromResources","payloadID","filter","warn","payloadToResource","_this$resourceName","undefined","entities","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","result","updateResource","normalizeError","message","DeleteNormalizer","Normalizer","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","input","icon","_ref$meta","meta","touched","addonType","valid","normalizeSubmissionError","_error","Array","isArray","fetchAction","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","normalizedPayload","sent","SubmissionError","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","onChange","_this$props2$meta","valueKey","labelKey","react__WEBPACK_IMPORTED_MODULE_5___default","reactstrap__WEBPACK_IMPORTED_MODULE_8__","map","index","selected","reactstrap__WEBPACK_IMPORTED_MODULE_9__","defaultProps","dateToFormat","date_fns_esm__WEBPACK_IMPORTED_MODULE_0__","date","format","URL_ALIAS_RESOURCE_NAME","DeleteUrlAliasAction","GetUrlAliasAction","GetUrlAliasesAction","isRetrievingGetUrlAlias","isRetrievingGetUrlAliases","GetUrlAliases","GetUrlAliasById","isRetrievingUpdateUrlAlias","isRetrievingCreateUrlAlias","_brigad_redux_rest_easy__WEBPACK_IMPORTED_MODULE_0__","_config__WEBPACK_IMPORTED_MODULE_1__","_helpers_handleStatusCode__WEBPACK_IMPORTED_MODULE_2__","_helpers_networkHelpers__WEBPACK_IMPORTED_MODULE_3__","_helpers_ResourceHelper__WEBPACK_IMPORTED_MODULE_4__","_helpers_normalizerHelpers__WEBPACK_IMPORTED_MODULE_5__","_helpers_hasOwnProperty__WEBPACK_IMPORTED_MODULE_6__","UrlAliasResource","createResource","createUrlAlias","url","config","normalizer","networkHelpers","deleteUrlAlias","getUrlAlias","getUrlAliases","updateUrlAlias","actions","perform","selectors","resource","getResource","getResourceById","request","isPerforming","CreateCategoryAction","DeleteCategoryAction","GetCategoryAction","UpdateCategoryAction","GetCategoryById","isRetrievingGetCategory","isRetrievingCreateCategory","isRetrievingUpdateCategory","BlogCategoryResource","createCategory","deleteCategory","getCategory","getCategories","updateCategory","handleChange","bind","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__","react__WEBPACK_IMPORTED_MODULE_6___default","react_datepicker__WEBPACK_IMPORTED_MODULE_9__","locale","minDate","Date","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","_this$props$meta","react_ckeditor_component__WEBPACK_IMPORTED_MODULE_7___default","activeClass","language","filebrowserBrowseUrl","filebrowserImageBrowseUrl","filebrowserUploadUrl","filebrowserImageUploadUrl","imageUploadUrl","scriptUrl","content","events","change","evt","editor","getData","onSelect","cancel","paste","afterPaste","fileUploadRequest","xhr","fileLoader","setRequestHeader","withCredentials","fileUploadResponse","reactstrap__WEBPACK_IMPORTED_MODULE_10__","isInit","maxLen","replace","DeletePostAction","GetPostsAction","isRetrievingGetPosts","GetPosts","BlogPostResource","createPost","deletePost","getPost","getPosts","updatePost","tags","newArr","returnUnique","join","setState","arr","i","i_max","keys","react_tagsinput__WEBPACK_IMPORTED_MODULE_11___default","split","_CardBody__WEBPACK_IMPORTED_MODULE_1__","_utils__WEBPACK_IMPORTED_MODULE_2__","clearString","word","e","transformString","cyrillicToTransliteration","transform","prevProps","prevState","prevContext","newInput","newMeta","prevInput","visited","active","autoGen","nextProps","nextState","shallowEqual","_TextField_TextField__WEBPACK_IMPORTED_MODULE_7__","prevValue"],"mappings":"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","file":"static/js/19.a0c498ef.chunk.js","sourcesContent":["import React, {Fragment} from 'react';\nimport {Col} from \"reactstrap\";\nimport {Field} from \"redux-form\";\nimport {TextField} from \"../../../../../../components/TextField/TextField\";\nimport {maxLength} from \"../../../../../../validation/maxLength\";\nimport {FormTagInput} from \"../../../../../../components/Form/FormTagInput\";\nimport {FormattedMessage, injectIntl} from \"react-intl\";\n\nconst maxLength255 = maxLength(255);\n\nexport const MetaFields = ({intl}) => (<Fragment>\n  <Col xs=\"12\">\n    <h4>\n      <FormattedMessage\n        id=\"form.title.meta\"\n        defaultMessage=\"form.title.meta\"\n      />    </h4>\n  </Col>\n  <Col xs=\"12\">\n    <Field\n      name=\"meta_description\"\n      component={TextField}\n      placeholder={intl && intl.messages[\"form.label.metaDescription\"]}\n      label={<FormattedMessage\n        id=\"form.label.metaDescription\"\n        defaultMessage=\"form.label.metaDescription\"\n      />}\n      type=\"text\"\n      validate={[maxLength255]}\n    />\n  </Col>\n  <Col xs=\"12\">\n    <Field\n      name=\"meta_keywords\"\n      component={FormTagInput}\n      placeholder={intl && intl.messages[\"form.label.metaKeywords\"]}\n      label={<FormattedMessage\n        id=\"form.label.metaKeywords\"\n        defaultMessage=\"form.label.metaKeywords\"\n      />}\n      type=\"text\"\n      validate={[maxLength255]}\n    />\n  </Col>\n</Fragment>);\n\nexport default injectIntl(MetaFields);\n","import React, {Fragment} from 'react';\nimport {Col, Row} from \"reactstrap\";\nimport {Field} from \"redux-form\";\nimport {TextField} from \"../../../../../../components/TextField/TextField\";\nimport {maxLength} from \"../../../../../../validation/maxLength\";\nimport {FormattedMessage, injectIntl} from \"react-intl\";\n\nconst maxLength255 = maxLength(255);\n\nexport const OGMetaFields = ({intl}) => (<Fragment>\n  <Col xs=\"12\">\n    <h4>\n      <FormattedMessage\n        id=\"form.title.ogMeta\"\n        defaultMessage=\"form.title.ogMeta\"\n      />\n    </h4>\n  </Col>\n  <Col xs=\"12\" md=\"6\" lg=\"4\">\n    <Field\n      name=\"og_url\"\n      component={TextField}\n      placeholder={intl && intl.messages[\"form.label.ogUrl\"]}\n      label={ <FormattedMessage\n        id=\"form.label.ogUrl\"\n        defaultMessage=\"form.label.ogUrl\"\n      />}\n      type=\"text\"\n      validate={[maxLength255]}\n    />\n  </Col>\n  <Col xs=\"12\" md=\"6\" lg=\"4\">\n    <Field\n      name=\"og_image\"\n      component={TextField}\n      placeholder={intl && intl.messages[\"form.label.ogImage\"]}\n      label={ <FormattedMessage\n        id=\"form.label.ogImage\"\n        defaultMessage=\"form.label.ogImage\"\n      />}\n      type=\"text\"\n      validate={[maxLength255]}\n    />\n  </Col>\n  <Col xs=\"12\" md=\"6\" lg=\"4\">\n    <Field\n      name=\"og_type\"\n      component={TextField}\n      placeholder={intl && intl.messages[\"form.label.ogType\"]}\n      label={ <FormattedMessage\n        id=\"form.label.ogType\"\n        defaultMessage=\"form.label.ogType\"\n      />}\n      type=\"text\"\n      validate={[maxLength255]}\n    />\n  </Col>\n  <Col xs=\"12\" md=\"6\" lg=\"4\">\n    <Field\n      name=\"og_title\"\n      component={TextField}\n      placeholder={intl && intl.messages[\"form.label.ogTitle\"]}\n      label={ <FormattedMessage\n        id=\"form.label.ogTitle\"\n        defaultMessage=\"form.label.ogTitle\"\n      />}\n      type=\"text\"\n      validate={[maxLength255]}\n    />\n  </Col>\n</Fragment>);\n\nexport default injectIntl(OGMetaFields);\n","import React, {Component} from 'react';\nimport {Alert, Button, Card, CardBlock, CardFooter, CardHeader, Col, FormGroup, Row} from \"reactstrap\";\nimport {Field, getFormValues, reduxForm} from \"redux-form\";\nimport PropTypes from 'prop-types';\nimport FormSelect from \"../../../../components/Form/FormSelect\";\nimport FormDateTimePicker from \"../../../../components/FormDateTimePicker/FormDateTimePicker\";\nimport FormCKEditor from \"../../../../components/Form/form_ckeditor\";\nimport {FormTagInput} from \"../../../../components/Form/FormTagInput\";\nimport {TextField} from \"../../../../components/TextField/TextField\";\nimport {connect as connectRestEasy} from \"@brigad/redux-rest-easy\";\nimport {\n  CreatePostAction,\n  isRetrievingCreatePost,\n  isRetrievingGetPost,\n  UpdatePostAction,\n} from \"../../../../store/reduxRestEasy/Blog/BlogPostResource\";\nimport {withRouter} from \"react-router-dom\";\nimport {required} from \"../../../../validation/required\";\nimport MetaFields from \"./Components/MetaFields/MetaFields\";\nimport OGMetaFields from \"./Components/OGMetaFields/OGMetaFields\";\nimport {URLAliasField} from \"../../../../components/URLAliaseField/URLAliaseField\";\nimport {connect} from \"react-redux\";\nimport {URIValidation} from \"../../../../validation/URIValidation\";\nimport {CreateUrlAliasAction, UpdateUrlAliasAction} from \"../../../../store/reduxRestEasy/UrlAlias/UrlAliasResource\";\nimport {createSubmitHandler} from \"../../../../helpers/createSubmitHandler\";\nimport {hasOwnProperty} from \"../../../../helpers/hasOwnProperty\";\nimport {FormattedMessage, injectIntl} from \"react-intl\";\n\n\nexport class PostEditForm extends Component {\n\n  static propTypes = {\n    CreatePostAction: PropTypes.func,\n    UpdatePostAction: PropTypes.func,\n    CreateUrlAliasAction: PropTypes.func,\n    UpdateUrlAliasAction: PropTypes.func,\n    URLAlias: PropTypes.shape({\n      id: PropTypes.number,\n      url: PropTypes.string,\n      alias_url: PropTypes.string,\n    })\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = this.initialState;\n  }\n\n  get initialState() {\n    return {}\n  }\n\n\n  onSubmit = async (values) => {\n    console.log('values: ', values);\n    const {history, UpdatePostAction, CreatePostAction} = this.props;\n    if (hasOwnProperty(values, 'id')) {\n      await createSubmitHandler(UpdatePostAction)({\n        body: values,\n        urlParams: {\n          id: values.id,\n        }\n      })\n    } else {\n      await createSubmitHandler(CreatePostAction)({body: values})\n    }\n    history.push('/posts');\n  };\n\n\n  render() {\n    const {error, handleSubmit, categories, values, reset, pristine, intl, submitting} = this.props;\n    return (\n      <form onSubmit={handleSubmit(this.onSubmit)}>\n        <Row>\n          <Col xs=\"12\">\n            <Card>\n              <CardHeader>\n                <strong>\n                  <FormattedMessage\n                    id={values && values.id ? \"blog.post.editor.title\" : \"blog.post.create.title\"}\n                  />\n                </strong>\n              </CardHeader>\n              <CardBlock className=\"card-body\">\n                <Row>\n                  <Col xs=\"12\">\n                    <Field\n                      name=\"title\"\n                      component={TextField}\n                      placeholder={intl && intl.messages[\"form.label.title\"]}\n                      label={<FormattedMessage\n                        id=\"form.label.title\"\n                        defaultMessage=\"form.label.title\"\n                      />}\n                      validate={[required]}\n                      type=\"text\"\n                    />\n                  </Col>\n                  <Col xs=\"12\">\n                    <Field\n                      name=\"excerpt\"\n                      component={TextField}\n                      placeholder={intl && intl.messages[\"form.label.introductory\"]}\n                      label={<FormattedMessage\n                        id=\"form.label.introductory\"\n                        defaultMessage=\"form.label.description\"\n                      />}\n                      type=\"textarea\"\n                    />\n                  </Col>\n                  <Col xs=\"12\">\n                    <Field\n                      /** если есть id в состоянии формы значит мы редактируем статью, в таком случае автогенерация отключается */\n                      isAutoGenTransliteration={!(values && values.id)}\n                      name=\"alias_url\"\n                      component={URLAliasField}\n                      placeholder={intl && intl.messages[\"form.label.urlAlias\"]}\n                      label={<FormattedMessage\n                        id=\"form.label.urlAlias\"\n                        defaultMessage=\"form.label.urlAlias\"\n                      />}\n                      type=\"text\"\n                      subscribeField={'title'}\n                      formValues={values}\n                      validate={[URIValidation]}\n                    />\n                  </Col>\n                  <Col xs=\"12\" md=\"6\">\n                    <Field\n                      name=\"category_id\"\n                      component={FormSelect}\n                      placeholder={intl && intl.messages[\"form.label.category\"]}\n                      label={<FormattedMessage\n                        id=\"form.label.category\"\n                        defaultMessage=\"form.label.category\"\n                      />}\n                      validate={[required]}\n                      type=\"select\"\n                      defaultValue={''}\n                      data={categories}\n                    />\n                  </Col>\n                  <Col xs=\"12\" md=\"6\">\n                    <Field\n                      name=\"status\"\n                      component={FormSelect}\n                      placeholder={intl && intl.messages[\"form.label.publishStatus\"]}\n                      label={<FormattedMessage\n                        id=\"form.label.publishStatus\"\n                        defaultMessage=\"form.label.publishStatus\"\n                      />}\n                      type=\"select\"\n                      defaultValue={'DRAFT'}\n                      validate={[required]}\n                      data={[\n                        {\n                          id: \"PUBLISHED\",\n                          name: intl && intl.messages[`publishStatus.PUBLISHED`]\n                        }, {\n                          id: \"DRAFT\",\n                          name: intl && intl.messages[`publishStatus.DRAFT`]\n                        }, {\n                          id: \"PENDING\",\n                          name: intl && intl.messages[`publishStatus.PENDING`]\n                        }\n                      ]}\n                    />\n                  </Col>\n                  <Col xs=\"12\" md=\"6\">\n                    <Field\n                      name=\"public_at\"\n                      component={FormDateTimePicker}\n                      placeholder={intl && intl.messages[\"form.label.publishStatus\"]}\n                      label={<FormattedMessage\n                        id=\"form.label.publishStatus\"\n                        defaultMessage=\"form.label.publishTime\"\n                      />}\n                    />\n                  </Col>\n                  <Col xs=\"12\">\n                    <Field\n                      name=\"body\"\n                      component={FormCKEditor}\n                      placeholder={intl && intl.messages[\"form.label.content\"]}\n                      label={<FormattedMessage\n                        id=\"form.label.content\"\n                        defaultMessage=\"form.label.content\"\n                      />}\n                      validate={[required]}\n                      type=\"text\"\n                      ref=\"CKEDITOR\"\n                    />\n                  </Col>\n                  <Col xs=\"12\">\n                    <Field\n                      name=\"tags\"\n                      component={FormTagInput}\n                      placeholder={intl && intl.messages[\"form.placeholder.tags\"]}\n                      label={<FormattedMessage\n                        id=\"form.label.tags\"\n                        defaultMessage=\"form.label.tags\"\n                      />}\n                    />\n                  </Col>\n\n                  <MetaFields/>\n\n                  <OGMetaFields/>\n\n                </Row>\n\n                {\n                  error &&\n                  <Row>\n                    <Col xs=\"12\">\n                      <Alert color=\"danger\">\n                        {error}\n                      </Alert>\n                    </Col>\n                  </Row>\n\n                }\n              </CardBlock>\n              <CardFooter>\n                <Button\n                  color=\"primary\"\n                  type=\"submit\"\n                  className=\"px-4\"\n                  disabled={pristine || submitting}\n                >\n                  <FormattedMessage\n                    id=\"button.save\"\n                    defaultMessage=\"button.save\"\n                  />\n                </Button>\n                <Button\n                  type=\"reset\"\n                  onClick={reset}\n                  color=\"danger\"\n                >\n                  <i className=\"fa fa-ban\"/>\n                  <FormattedMessage\n                    id=\"button.reset\"\n                    defaultMessage=\"button.reset\"\n                  />\n                </Button>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n\n      </form>\n    )\n  }\n}\n\nconst validate = (values, {intl}) => {\n\n  console.log('validate: ', values, intl);\n  const errors = {};\n\n  if (!values.status) {\n    errors.status = intl.messages ? intl.messages['validation.required'] : \"Обязательно для заполнения\";\n  }\n\n  if (!values.body) {\n    errors.body = intl.messages ? intl.messages['validation.required'] : \"Обязательно для заполнения\";\n  }\n\n  if (!values.category_id) {\n    errors.category_id = intl.messages ? intl.messages['validation.required'] : \"Обязательно для заполнения\";\n  }\n  if (!values.title) {\n    errors.title = intl.messages ? intl.messages['validation.required'] : \"Обязательно для заполнения\";\n  }\n\n  if (values.alias_url) {\n    let res = URIValidation('validation.URIValidation')(values.alias_url);\n    errors.alias_url = res && intl.messages ? intl.messages[res] : res;\n  }\n\n  return errors\n};\n\nPostEditForm = connect(state => ({\n  values: getFormValues('PostEditForm')(state),\n}))(PostEditForm);\n\nPostEditForm = reduxForm({\n  form: 'PostEditForm',\n  validate,\n})(PostEditForm);\n\n\nPostEditForm = connectRestEasy(\n  (state, ownProps) => ({\n    isRetrievingCreatePost: isRetrievingCreatePost(state, ownProps),\n  }),\n  dispatch => ({\n    CreatePostAction: (options) => dispatch(CreatePostAction(options)),\n    UpdatePostAction: (options) => dispatch(UpdatePostAction(options)),\n\n    CreateUrlAliasAction: (options) => dispatch(CreateUrlAliasAction(options)),\n    UpdateUrlAliasAction: (options) => dispatch(UpdateUrlAliasAction(options)),\n\n  })\n)(PostEditForm);\n\nPostEditForm = withRouter(PostEditForm);\nPostEditForm = injectIntl(PostEditForm);\n\nexport default PostEditForm;\n","import React, {Component} from 'react';\nimport PostEditForm from \"./PostEditForm\";\nimport {connect as connectRestEasy} from \"@brigad/redux-rest-easy\";\nimport {\n  GetPostAction,\n  GetPostById,\n  isRetrievingGetPost\n} from \"../../../../store/reduxRestEasy/Blog/BlogPostResource\";\nimport {\n  GetCategories,\n  GetCategoriesAction,\n  isRetrievingCategories\n} from \"../../../../store/reduxRestEasy/Blog/BlogCategoryResource\";\nimport Preloader from \"../../../../components/Preloader/Preloader\";\n\nexport class PostEditor extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = this.initialState;\n  }\n\n  get initialState() {\n    return {}\n  }\n\n  componentWillMount() {\n    const {match: {params}} = this.props;\n    if (params && params.id) {\n      this.props.GetPostAction(params.id);\n    }\n    this.props.GetCategoriesAction({\n      query: {\n        without_pagination: 1,\n      }\n    });\n  }\n\n  render() {\n    const {\n      categories,\n      post,\n      match: {params},\n      isRetrievingGetPost,\n      isRetrievingCategories\n    } = this.props;\n    console.log(this.props);\n\n    if ((isRetrievingGetPost || isRetrievingCategories) && !categories) {\n      return (<Preloader/>)\n    }\n    if (!categories.length) {\n      return null;\n    }\n    let initialValues = {\n      initialValues: post(params && params.id)\n    };\n    return (\n      <div className=\"animated fadeIn\">\n        <PostEditForm\n          categories={Object.values(categories[0])}\n          {...initialValues}\n        />\n      </div>\n    )\n  }\n}\n\n\nPostEditor = connectRestEasy(\n  (state, ownProps) => ({\n    post: (id) => {\n      if(id){\n        const data = GetPostById(state, 'posts', id, ownProps);\n        if(data){\n          return data[id];\n        }\n      }\n      return null;\n    },\n    categories: GetCategories(state, ownProps),\n    isRetrievingGetPost: isRetrievingGetPost(state, ownProps),\n    isRetrievingCategories: isRetrievingCategories(state, ownProps),\n  }),\n  dispatch => ({\n    GetPostAction: id => dispatch(GetPostAction({\n      urlParams: {\n        id\n      }\n    })),\n    GetCategoriesAction: (options) => dispatch(GetCategoriesAction(options)),\n  })\n)(PostEditor);\n\n\nexport default PostEditor;\n","export const hasOwnProperty = (obj, prop) => {\n  if (!obj || !prop) {\n    return false\n  }\n  return Object.prototype.hasOwnProperty.call(obj, prop)\n};\n","\n\nlet base = '';\n\nswitch (window.location.hostname) {\n  case ('localhost'):{\n    base = 'https://dev.strikepro.ru';\n    break;\n  }\n  case ('admin.strikepro.ru'):{\n    base = 'https://dev.strikepro.ru';\n    break;\n  }\n  case ('strike.localhost'):{\n    base = 'http://strike.localhost';\n    break;\n  }\n}\n\n\n\nexport default {\n  base,\n  api: {\n    login: '/dashboard/auth/login',\n    logout: '/dashboard/auth/logout',\n\n    posts: '/dashboard/blog/posts',\n    post: '/dashboard/blog/post',\n\n    categories: '/dashboard/blog/categories',\n    category: '/dashboard/blog/category',\n\n    slides: '/dashboard/slides',\n\n    tiles: '/dashboard/mainfeeds',\n\n    tile_types: '/dashboard/mainfeed/types',\n    tile: '/dashboard/mainfeed',\n\n    nomenclature: '/dashboard/nomenclature',\n    nomenclatures: '/dashboard/nomenclatures',\n\n    nomenclatureCharacteristic: '/dashboard/nomenclature/characteristic',\n    typesOfNomenclature: '/dashboard/nomenclature/characteristic',\n    fileupload: '/dashboard/fileupload',\n\n    static_pages: '/dashboard/pages',\n    url_alias: '/dashboard/url_alias',\n    feedback: '/dashboard/feedback',\n  }\n}\n","export const requestPOST = (body) => {\n  return {\n    method: 'POST',\n    credentials: 'include',\n    headers: {\n      Accept: 'application/json',\n      'Content-type': 'application/json',\n    },\n    ...(body? {body: JSON.stringify(body)} : {})\n\n  }\n};\n\nexport const requestGET = () => {\n  return {\n    method: 'GET',\n    credentials: 'include',\n    headers: {\n      Accept: 'application/json',\n      'Content-type': 'application/json',\n    }\n  }\n};\n\nexport const requestDELETE = () => {\n  return {\n    method: 'DELETE',\n    credentials: 'include',\n    headers: {\n      Accept: 'application/json',\n      'Content-type': 'application/json',\n    }\n  }\n};\n\nexport const requestPUT = (body) => {\n  return {\n    method: 'PUT',\n    credentials: 'include',\n    headers: {\n      Accept: 'application/json',\n      'Content-type': 'application/json',\n    },\n    body: JSON.stringify(body),\n  }\n};\n","import history from \"../../../history\";\n\n\nexport const handleStatusCode = (response) => {\n  const {status} = response;\n  if (status === 401) {\n    history.push('#/login');\n    window.location.reload();\n    return response\n  }\n\n  if (status === 404) {\n    history.push('#/404');\n    window.location.reload();\n    return response\n  }\n\n\n  return response\n};\n\nexport default handleStatusCode;\n","export class NormalizationPayload {\n\n  resourceName = null;\n\n  constructor(resourceName) {\n    this.resourceName = resourceName;\n  }\n\n  /**\n   * @param {object} resources - объект с исходными ресурсами\n   * @param {array} payload - массив с новыми ресурсами\n   * @desc метод для добавления в существующие ресурсы новых ресурсов\n   * */\n  mergeResourceAndPayload = (resources, payload) => {\n    payload.forEach((item) => {\n      resources[this.resourceName][this.resourceName][item.id] = item;\n      resources[this.resourceName].metadata = {\n        data: [...resources[this.resourceName].metadata.data, item.id],\n      };\n    });\n    return resources;\n  };\n\n  /**\n   * @param {array} resources\n   * @param {string} payloadID\n   * @desc\n   * */\n  removePayloadFromResources = (resources, payloadID) => {\n    if (!payloadID) {\n      console.warn('payloadID undefined');\n      return resources;\n    }\n    console.log('removePayloadFromResources: ', this, resources, payloadID);\n    delete resources[this.resourceName][this.resourceName][payloadID];\n    resources[this.resourceName].metadata.data = resources[this.resourceName]\n      .metadata.data.filter(item => item !== payloadID);\n    return resources;\n  };\n\n  /**\n   * @param {array} payload\n   * @param {object} metadata\n   * @desc\n   * */\n  payloadToResource = (payload, metadata = {}) => {\n    const data = {\n      entities: {\n        [this.resourceName]: {\n          [this.resourceName]: {},\n          metadata: {}\n        },\n      },\n      result: []\n    };\n    if (payload) {\n      payload.forEach((item) => {\n        data.result.push(item.id);\n        data.entities[this.resourceName][this.resourceName][item.id] = item;\n      });\n    }\n    data.entities[this.resourceName].metadata = {\n      ...metadata,\n      data: data.result,\n    };\n    return data;\n  };\n\n  /**\n   * @param {object} resources - объект с исходными ресурсами\n   * @param {object} payload - массив с новыми ресурсами\n   * @desc метод для добавления в существующие ресурсы новых ресурсов\n   * */\n  updateResource = (resources, payload) => {\n    resources[this.resourceName][this.resourceName][payload.id] = payload;\n    return resources;\n  };\n\n  /**\n   * @param {object} payload\n   * @param {object} payload.errors\n   * @param {array} payload.errors.propName\n   * @param {string} payload.message\n   * */\n  normalizeError = (payload) => {\n    if(!payload.errors){\n      payload.errors = {};\n    }\n    return {\n      entities: {\n        ...payload,\n        message: [payload.message]\n      },\n      result: {errors: payload}\n    };\n  }\n\n}\n","import {hasOwnProperty} from \"../../../helpers/hasOwnProperty\";\n\n\nexport const DeleteNormalizer = (Normalizer)=> (payload, resources, urlParams,) => {\n  if (payload.errors) {\n    return Normalizer.normalizeError(payload);\n  }\n  if (payload) {\n    return Normalizer.removePayloadFromResources(resources, urlParams.id);\n  }\n  return resources;\n};\n\n\nexport const CreateNormalizer = (Normalizer) => (payload, resources, urlParams) => {\n  if (!payload ) {\n    return null\n  }\n  if (payload.errors || payload.message) {\n    return Normalizer.normalizeError(payload);\n  }\n\n  if (hasOwnProperty(resources,Normalizer.resourceName)) {\n    return Normalizer.mergeResourceAndPayload(resources, [payload])\n  } else {\n    return Normalizer.payloadToResource([payload]);\n  }\n};\n\nexport const UpdateNormalizer = (Normalizer) => (payload, resources) => {\n  if (payload.errors || payload.message) {\n    return Normalizer.normalizeError(payload);\n  }\n  if (payload) {\n    return Normalizer.updateResource(resources, payload);\n  }\n  return resources;\n};\n\nexport const GetListNormalizer = (Normalizer) => (payload) => {\n  if (!payload && payload.error) {\n    return null;\n  }\n  if (Array.isArray(payload)) {\n    return Normalizer.payloadToResource(payload);\n  } else {\n    return Normalizer.payloadToResource(payload.data, payload);\n  }\n};\n\nexport const GetByIdNormalizer = (Normalizer) => (payload) => Normalizer.payloadToResource([payload])\n","import React from \"react\";\nimport {FormFeedback, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, Label} from \"reactstrap\";\n\nexport const TextField = ({input, label, type, placeholder, required, icon, meta: {touched, error}}) => (\n  <FormGroup className={touched ? error ? '' : 'was-validated' : ''}>\n    {\n      label && <Label>{label}</Label>\n    }\n    <InputGroup className=\"mb-3\">\n      {\n        icon &&\n        <InputGroupAddon addonType=\"prepend\">\n          <InputGroupText>\n            <i className={icon}/>\n          </InputGroupText>\n        </InputGroupAddon>\n      }\n\n      <Input\n        {...input}\n        type={type}\n        valid={touched ? !error : false}\n        className={touched ? error ? 'form-control-warning is-invalid' : '' : ''}\n        placeholder={placeholder}\n        required={required}/>\n      <FormFeedback\n        valid={touched ? !error : false}\n        className=\"help-block\"\n      >\n        {error}\n      </FormFeedback>\n    </InputGroup>\n\n  </FormGroup>)\n\nexport default TextField;\n","\n/**\n * @param {object} error\n * @param {object} error.errors\n * @param {array} error.message\n * */\nexport const normalizeSubmissionError = (error) => {\n  const data = {\n    _error: error.message ? error.message[0] : null,\n  };\n  for (let prop in error.errors) {\n    if (Array.isArray(error.errors[prop])) {\n      data[prop] = error.errors[prop][0];\n    }\n  }\n  return data;\n}\n","import {SubmissionError} from \"redux-form\";\nimport {normalizeSubmissionError} from \"./normalizeSubmissionError\";\n\nexport const createSubmitHandler = (fetchAction) => async (options) => {\n  const {normalizedPayload, error,} = await fetchAction(options);\n  if (normalizedPayload && normalizedPayload.errors || error) {\n    throw new SubmissionError(normalizeSubmissionError(normalizedPayload ||\n      {\n        message: [error.message],\n        errors: {}\n      }));\n  }\n};\n\nexport default createSubmitHandler;\n","export const required = (message = 'Обязательно для заполнения') => (value) => {\n  return (value ? undefined : message);\n};\n","import React, {Component} from 'react';\nimport {Alert, FormGroup, Input, Label} from \"reactstrap\";\n\n\nexport class FormSelect extends Component {\n\n  static defaultProps = {\n    valueKey: 'id',\n    labelKey: 'name',\n  };\n\n  componentDidMount() {\n    const {\n      input,\n      defaultValue,\n    } = this.props;\n\n    if(!input.value && defaultValue){\n      input.onChange(defaultValue);\n    }\n\n  }\n\n  render() {\n    const {\n      input,\n      label,\n      type,\n      data,\n      meta: {touched, error},\n      valueKey,\n      labelKey,\n    } = this.props;\n    return (\n      <FormGroup>\n        <Label>{label}</Label>\n        <Input type={type} {...input} >\n          <option>выберите категорию...</option>\n          {\n            Array.isArray(data) && data.map((item, index) => (<option\n              key={index}\n              selected={item[valueKey] === input.value}\n              value={item[valueKey]}>\n              {item[labelKey]}\n            </option>))\n          }\n        </Input>\n        {\n          touched && error &&\n          <Alert color=\"danger\">\n            {error}\n          </Alert>\n\n        }\n      </FormGroup>\n    );\n  }\n}\n\n\nexport default FormSelect;\n","import {format} from 'date-fns/esm'\n\nexport const DEFAULT_DATE_FORMAT = \"yyyy-MM-d h:mm:ss\";\n\nexport const dateToFormat = (date) => {\n  return format(date, DEFAULT_DATE_FORMAT);\n};\n","import {createResource} from '@brigad/redux-rest-easy';\nimport config from '../../../config';\nimport {handleStatusCode} from \"../.helpers/handleStatusCode\";\nimport {requestDELETE, requestGET, requestPOST, requestPUT} from \"../.helpers/networkHelpers\";\nimport {NormalizationPayload} from \"../.helpers/ResourceHelper\";\nimport {DeleteNormalizer} from \"../.helpers/normalizerHelpers\";\nimport {hasOwnProperty} from \"../../../helpers/hasOwnProperty\";\n\nexport const URL_ALIAS_RESOURCE_NAME = 'UrlAlias';\n\nconst Normalizer = new NormalizationPayload(URL_ALIAS_RESOURCE_NAME);\n\n\nexport const UrlAliasResource = createResource(URL_ALIAS_RESOURCE_NAME)({\n\n  createUrlAlias: {\n    method: 'POST',\n    url: `${config.base}${config.api.url_alias}`,\n    normalizer: (payload, resources, urlParams) => {\n      console.log('createUrlAlias: ', payload, resources, urlParams);\n      if (!payload ) {\n        return null\n      }\n      if (payload.errors) {\n        return Normalizer.normalizeError(payload);\n      }\n\n      if (hasOwnProperty(resources,URL_ALIAS_RESOURCE_NAME)) {\n        return Normalizer.mergeResourceAndPayload(resources, [payload])\n      } else {\n        return Normalizer.payloadToResource([payload]);\n      }\n    },\n    networkHelpers: {\n      handleStatusCode,\n      requestPOST: requestPOST\n    },\n  },\n  deleteUrlAlias: {\n    method: 'DELETE',\n    url: `${config.base}${config.api.url_alias}/::id`,\n    normalizer: DeleteNormalizer(Normalizer),\n    networkHelpers: {\n      handleStatusCode,\n      requestDELETE: requestDELETE,\n    },\n  },\n  getUrlAlias: {\n    method: 'GET',\n    url: `${config.base}${config.api.url_alias}/::id`,\n    normalizer: (payload) => Normalizer.payloadToResource([payload]),\n    networkHelpers: {\n      handleStatusCode,\n      requestGET: requestGET,\n    },\n  },\n  getUrlAliases: {\n    method: 'GET',\n    url: `${config.base}${config.api.url_alias}`,\n    normalizer: (payload) => {\n      if (!payload && payload.error) {\n        return null;\n      }\n      if (Array.isArray(payload)) {\n        return Normalizer.payloadToResource(payload);\n      } else {\n        return Normalizer.payloadToResource(payload.data, payload);\n      }\n    },\n    networkHelpers: {\n      handleStatusCode,\n      requestGET: requestGET,\n    },\n  },\n  updateUrlAlias: {\n    method: 'PUT',\n    url: `${config.base}${config.api.url_alias}/::id`,\n    normalizer: (payload, resources) => {\n      if (payload.errors) {\n        return Normalizer.normalizeError(payload);\n      }\n      if (payload) {\n        return Normalizer.updateResource(resources, payload);\n      }\n      return resources;\n    },\n    networkHelpers: {\n      handleStatusCode,\n      requestPUT: requestPUT,\n    },\n  },\n});\n\n\nconst {\n  actions: {\n    createUrlAlias: {\n      perform: CreateUrlAliasAction,\n    },\n    deleteUrlAlias: {\n      perform: DeleteUrlAliasAction,\n    },\n    getUrlAlias: {\n      perform: GetUrlAliasAction,\n    },\n    getUrlAliases: {\n      perform: GetUrlAliasesAction,\n    },\n    updateUrlAlias: {\n      perform: UpdateUrlAliasAction,\n    },\n  },\n  selectors: {\n    resource: {\n      getResource: GetUrlAliases,\n      getResourceById: GetUrlAliasById,\n    },\n    createUrlAlias: {\n      request: {\n        getResource: CreateUrlAliasGetResource,\n        isPerforming: isRetrievingCreateUrlAlias,\n      }\n    },\n    deleteUrlAlias: {\n      request: {\n        getResource: DeleteUrlAliasGetResource,\n      }\n    },\n    getUrlAlias: {\n      request: {\n        getResource: GetUrlAliasGetResource,\n        isPerforming: isRetrievingGetUrlAlias,\n      }\n    },\n    getUrlAliases: {\n      request: {\n        getResource: GetUrlAliassGetResource,\n        isPerforming: isRetrievingGetUrlAliases,\n\n      }\n    },\n    updateUrlAlias: {\n      request: {\n        getResource: UpdateUrlAliasGetResource,\n        isPerforming: isRetrievingUpdateUrlAlias,\n      }\n    },\n  }\n} = UrlAliasResource;\n\nexport {\n  CreateUrlAliasAction,\n  DeleteUrlAliasAction,\n  GetUrlAliasAction,\n  GetUrlAliasesAction,\n  UpdateUrlAliasAction,\n\n  CreateUrlAliasGetResource,\n  DeleteUrlAliasGetResource,\n  GetUrlAliasGetResource,\n  GetUrlAliassGetResource,\n  UpdateUrlAliasGetResource,\n  isRetrievingGetUrlAlias,\n  isRetrievingGetUrlAliases,\n  GetUrlAliases,\n  GetUrlAliasById,\n\n  isRetrievingUpdateUrlAlias,\n  isRetrievingCreateUrlAlias,\n}\n","import {createResource} from '@brigad/redux-rest-easy';\nimport config from '../../../config';\nimport {handleStatusCode} from \"../.helpers/handleStatusCode\";\nimport {requestDELETE, requestGET, requestPOST, requestPUT} from \"../.helpers/networkHelpers\";\nimport {\n  NormalizationPayload,\n} from \"../.helpers/ResourceHelper\";\nimport {DeleteNormalizer} from \"../.helpers/normalizerHelpers\";\nimport {hasOwnProperty} from \"../../../helpers/hasOwnProperty\";\n\nconst RESOURCE_NAME = 'categories';\n\nconst Normalizer = new NormalizationPayload(RESOURCE_NAME);\n\nexport const BlogCategoryResource = createResource(RESOURCE_NAME)({\n  createCategory: {\n    method: 'POST',\n    url: `${config.base}${config.api.category}`,\n    normalizer: (payload, resources) => {\n      if (!payload && payload.error) {\n        return null;\n      }\n      if (hasOwnProperty(resources,RESOURCE_NAME)) {\n        return Normalizer.mergeResourceAndPayload(resources, [payload])\n      } else {\n        return Normalizer.payloadToResource([payload]);\n      }\n    },\n    networkHelpers: {\n      handleStatusCode,\n      requestPOST: requestPOST\n    },\n  },\n  deleteCategory: {\n    method: 'DELETE',\n    url: `${config.base}${config.api.category}/::id`,\n    normalizer: DeleteNormalizer(Normalizer),\n    networkHelpers: {\n      handleStatusCode,\n      requestDELETE: requestDELETE,\n    },\n  },\n  getCategory: {\n    method: 'GET',\n    url: `${config.base}${config.api.category}/::id`,\n    normalizer: (payload) => Normalizer.payloadToResource([payload]),\n    networkHelpers: {\n      handleStatusCode,\n      requestGET: requestGET,\n    },\n  },\n  getCategories: {\n    method: 'GET',\n    url: `${config.base}${config.api.categories}`,\n    normalizer: (payload) => {\n      if (!payload && payload.error) {\n        return null;\n      }\n      if (Array.isArray(payload)) {\n        return Normalizer.payloadToResource(payload);\n      } else {\n        return Normalizer.payloadToResource(payload.data, payload);\n      }\n    },\n    networkHelpers: {\n      handleStatusCode,\n      requestGET: requestGET\n    },\n  },\n  updateCategory: {\n    method: 'PUT',\n    url: `${config.base}${config.api.category}/::id`,\n    normalizer: (payload, resources) => {\n      if (payload) {\n        return Normalizer.updateResource(resources, payload);\n      }\n      return resources;\n    },\n    networkHelpers: {\n      handleStatusCode,\n      requestPUT: requestPUT,\n    },\n  },\n});\n\nconst {\n  actions: {\n    createCategory: {\n      perform: CreateCategoryAction,\n    },\n    deleteCategory: {\n      perform: DeleteCategoryAction,\n    },\n    getCategory: {\n      perform: GetCategoryAction,\n    },\n    getCategories: {\n      perform: GetCategoriesAction,\n    },\n    updateCategory: {\n      perform: UpdateCategoryAction,\n    },\n  },\n  selectors: {\n    resource: {\n      getResource: GetCategories,\n      getResourceById: GetCategoryById,\n    },\n    createCategory: {\n      request: {\n        getResource: CreateCategoryGetResource,\n        isPerforming: isRetrievingCreateCategory,\n      }\n    },\n    deleteCategory: {\n      request: {\n        getResource: DeleteCategoryGetResource,\n      }\n    },\n    getCategory: {\n      request: {\n        getResource: GetCategoryGetResource,\n        isPerforming: isRetrievingGetCategory,\n\n      }\n    },\n    getCategories: {\n      request: {\n        getResource: GetCategoriesGetResource,\n        isPerforming: isRetrievingCategories,\n\n      }\n    },\n    updateCategory: {\n      request: {\n        getResource: UpdateCategoryGetResource,\n        isPerforming: isRetrievingUpdateCategory,\n\n      }\n    },\n  }\n} = BlogCategoryResource;\n\nexport {\n  CreateCategoryAction,\n  DeleteCategoryAction,\n  GetCategoryAction,\n  GetCategoriesAction,\n  UpdateCategoryAction,\n\n  CreateCategoryGetResource,\n  DeleteCategoryGetResource,\n  GetCategoryGetResource,\n  GetCategoriesGetResource,\n  UpdateCategoryGetResource,\n  GetCategories,\n  GetCategoryById,\n  isRetrievingCategories,\n\n  isRetrievingGetCategory,\n  isRetrievingCreateCategory,\n  isRetrievingUpdateCategory,\n}\n","import React, {Component} from 'react';\nimport {FormGroup, Label} from \"reactstrap\";\nimport DatePicker  from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {dateToFormat} from \"../../helpers/dateToFormat\";\n\n\n\n\nexport class FormDateTimePicker extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n\n  handleChange(value) {\n    const {input: {onChange}} = this.props;\n    return onChange(dateToFormat(value));\n  }\n\n  render() {\n    const {label, input: {value}} = this.props;\n\n    return (\n      <div className=\"controls\">\n        <FormGroup>\n          <Label>{label}</Label>\n          <DatePicker\n            locale={'ru'}\n            minDate={new Date()}\n            selected={new Date(value || new Date() )}\n            onChange={this.handleChange}\n            className={'form-control full-width'}\n          />\n        </FormGroup>\n      </div>\n    );\n  }\n\n}\n\n\nexport default FormDateTimePicker;\n","import React, {Component} from 'react';\nimport CKEditor from \"react-ckeditor-component\";\nimport {Alert, FormGroup, Label} from \"reactstrap\";\n\nclass FormCKEditor extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = this.initialState;\n  }\n\n  get initialState() {\n    return {\n      isInit: false,\n      editor: null\n    }\n  }\n\n  componentWillMount() {}\n\n\n  componentDidUpdate() {}\n\n\n  render() {\n    const {input, label, meta: {touched, error}, config} = this.props;\n\n    return (\n      <FormGroup>\n        <Label>{label}</Label>\n\n        <CKEditor\n          activeClass=\"p10\"\n          config={{\n            language: 'ru',\n\n            filebrowserBrowseUrl: 'http://new.strikepro.ru/ckfinder/browser',\n            filebrowserImageBrowseUrl: 'http://new.strikepro.ru/ckfinder/browser',\n\n            filebrowserUploadUrl:\n              'http://new.strikepro.ru/ckfinder/connector',\n            filebrowserImageUploadUrl:\n              'http://new.strikepro.ru/ckfinder/connector',\n            imageUploadUrl: '',\n            ...config,\n          }}\n          scriptUrl=\"//cdn.ckeditor.com/4.7.3/full/ckeditor.js\"\n          content={input.value}\n          events={{\n            \"change\": (evt) => {\n              return input.onChange(evt.editor.getData())\n            },\n            \"onSelect\": (evt) => {\n              console.log('onSelect:', evt);\n              evt.cancel();\n            },\n            \"paste\": (evt) => {\n              console.log('paste:', evt);\n              // evt.stop();\n            },\n            \"afterPaste\": (evt) => {\n              console.log('afterPaste:', evt);\n              // evt.stop();\n            },\n            \"fileUploadRequest\": (evt) => {\n              console.log('fileUploadRequest:', evt);\n              let xhr = evt.data.fileLoader.xhr;\n\n              xhr.setRequestHeader(\"Access-Control-Allow-Origin\", \"http://localhost:8080\");\n              xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n              xhr.setRequestHeader(\"Accept\", \"application/json\");\n\n              xhr.withCredentials = true;\n              // evt.stop();\n            },\n            \"fileUploadResponse\": (evt) => {\n              console.log('fileUploadResponse:', evt);\n              // evt.stop();\n            },\n          }}\n        />\n        {\n          touched && error &&\n          <Alert color=\"danger\">\n            {error}\n          </Alert>\n\n        }\n      </FormGroup>\n    )\n  }\n}\n\n\nexport default FormCKEditor;\n","export const maxLength = (maxLen) => (value) => value && value.length > maxLen ? `Максимальное количество символов ${maxLen}`:null;\n","export const URIValidation = (message)=>(value) => value && value.replace(/[a-zA-Zа-яА-Я0-9 -]/gi, '') ? message : null;\n","import {createResource} from '@brigad/redux-rest-easy';\nimport config from '../../../config';\nimport {handleStatusCode} from \"../.helpers/handleStatusCode\";\nimport {requestDELETE, requestGET, requestPOST, requestPUT} from \"../.helpers/networkHelpers\";\nimport {NormalizationPayload} from \"../.helpers/ResourceHelper\";\nimport {DeleteNormalizer} from \"../.helpers/normalizerHelpers\";\nimport {hasOwnProperty} from \"../../../helpers/hasOwnProperty\";\n\nconst RESOURCE_NAME = 'posts';\n\nconst Normalizer = new NormalizationPayload(RESOURCE_NAME);\n\n\nexport const BlogPostResource = createResource(RESOURCE_NAME)({\n\n  createPost: {\n    method: 'POST',\n    url: `${config.base}${config.api.post}`,\n    normalizer: (payload, resources, urlParams) => {\n      console.log('createPost: ', payload, resources, urlParams);\n      if (!payload ) {\n        return null\n      }\n      if (payload.errors || payload.message) {\n        return Normalizer.normalizeError(payload);\n      }\n\n      if (hasOwnProperty(resources,RESOURCE_NAME)) {\n        return Normalizer.mergeResourceAndPayload(resources, [payload])\n      } else {\n        return Normalizer.payloadToResource([payload]);\n      }\n    },\n    networkHelpers: {\n      handleStatusCode,\n      requestPOST: requestPOST\n    },\n  },\n  deletePost: {\n    method: 'DELETE',\n    url: `${config.base}${config.api.post}/::id`,\n    normalizer: DeleteNormalizer(Normalizer),\n    networkHelpers: {\n      handleStatusCode,\n      requestDELETE: requestDELETE,\n    },\n  },\n  getPost: {\n    method: 'GET',\n    url: `${config.base}${config.api.post}/::id`,\n    normalizer: (payload) => Normalizer.payloadToResource([payload]),\n    networkHelpers: {\n      handleStatusCode,\n      requestGET: requestGET,\n    },\n  },\n  getPosts: {\n    method: 'GET',\n    url: `${config.base}${config.api.posts}`,\n    normalizer: (payload) => {\n      if (!payload && payload.error) {\n        return null;\n      }\n      if (Array.isArray(payload)) {\n        return Normalizer.payloadToResource(payload);\n      } else {\n        return Normalizer.payloadToResource(payload.data, payload);\n      }\n    },\n    networkHelpers: {\n      handleStatusCode,\n      requestGET: requestGET,\n    },\n  },\n  updatePost: {\n    method: 'PUT',\n    url: `${config.base}${config.api.post}/::id`,\n    normalizer: (payload, resources) => {\n      if (payload.errors) {\n        return Normalizer.normalizeError(payload);\n      }\n      if (payload) {\n        return Normalizer.updateResource(resources, payload);\n      }\n      return resources;\n    },\n    networkHelpers: {\n      handleStatusCode,\n      requestPUT: requestPUT,\n    },\n  },\n});\n\n\nconst {\n  actions: {\n    createPost: {\n      perform: CreatePostAction,\n    },\n    deletePost: {\n      perform: DeletePostAction,\n    },\n    getPost: {\n      perform: GetPostAction,\n    },\n    getPosts: {\n      perform: GetPostsAction,\n    },\n    updatePost: {\n      perform: UpdatePostAction,\n    },\n  },\n  selectors: {\n    resource: {\n      getResource: GetPosts,\n      getResourceById: GetPostById,\n    },\n    createPost: {\n      request: {\n        getResource: CreatePostGetResource,\n        isPerforming: isRetrievingCreatePost,\n      }\n    },\n    deletePost: {\n      request: {\n        getResource: DeletePostGetResource,\n      }\n    },\n    getPost: {\n      request: {\n        getResource: GetPostGetResource,\n        isPerforming: isRetrievingGetPost,\n      }\n    },\n    getPosts: {\n      request: {\n        getResource: GetPostsGetResource,\n        isPerforming: isRetrievingGetPosts,\n\n      }\n    },\n    updatePost: {\n      request: {\n        getResource: UpdatePostGetResource,\n        isPerforming: isRetrievingUpdatePost,\n      }\n    },\n  }\n} = BlogPostResource;\n\nexport {\n  CreatePostAction,\n  DeletePostAction,\n  GetPostAction,\n  GetPostsAction,\n  UpdatePostAction,\n\n  CreatePostGetResource,\n  DeletePostGetResource,\n  GetPostGetResource,\n  GetPostsGetResource,\n  UpdatePostGetResource,\n  isRetrievingGetPost,\n  isRetrievingGetPosts,\n  GetPosts,\n  GetPostById,\n\n  isRetrievingUpdatePost,\n  isRetrievingCreatePost,\n}\n","import React, {Component} from 'react';\n\nimport {FormFeedback, FormGroup, InputGroup, Label} from \"reactstrap\";\nimport TagsInput from 'react-tagsinput';\n\nimport 'react-tagsinput/react-tagsinput.css';\n\nexport class FormTagInput extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = this.initialState;\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  get initialState() {\n    return {tags: []}\n  }\n\n  handleChange(tags) {\n    const {input: {onChange}} = this.props;\n    let newArr = this.returnUnique(tags);\n    onChange(newArr.join(', '));\n    this.setState({tags: newArr})\n  }\n\n  returnUnique(arr) {\n    let obj = {};\n    for (let i = 0, i_max = arr.length; i < i_max; i++) {\n      obj[arr[i]] = ''; // запоминаем элемент как свойство объекта\n    }\n    return Object.keys(obj);\n  }\n\n  render() {\n    const {input: {value}, label, meta: {touched, error}} = this.props;\n    return (<FormGroup className={touched ? error ? '' : 'was-validated' : ''}>\n      <Label>{label}</Label>\n      <InputGroup className=\"mb-3\">\n\n        <TagsInput\n          className={`react-tagsinput form-control ${touched && error ? 'form-control-warning is-invalid' : ''}`}\n          value={value ? value.split(', ') : []}\n          onChange={this.handleChange}\n        />\n        {\n          touched && error &&\n          <FormFeedback\n            valid={touched ? !error : false}\n            className=\"help-block\">\n            {error}\n          </FormFeedback>\n        }\n      </InputGroup>\n    </FormGroup>)\n  }\n}\n","import React from 'react';\nimport CardBody from './CardBody';\nimport { warnOnce } from './utils';\nexport default function CardBlock(props) {\n  warnOnce('The \"CardBlock\" component has been deprecated.\\nPlease use component \"CardBody\".');\n  return React.createElement(CardBody, props);\n}","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport cyrillicToTransliteration from 'cyrillic-to-translit-js';\nimport {TextField} from \"../TextField/TextField\";\nimport {shallowEqual} from \"react-redux\";\n\n/**\n * Создание\n * 1. поле автоматически заполняется при заполнении поля title\n * 2. если пользователь то-то поменял в этом поле авто заполнение прекращается и поле остается как есть\n *\n * Обновление\n * 1. если поле сгенерировано автоматиески то эта генераия продолжается\n * */\n\n/**\n * @desc компонент для автоматической генерации валидного url псевдонима\n * */\nexport class URLAliasField extends Component {\n\n  static propTypes = {\n    /** активна ли автогенерация транслита */\n    isAutoGenTransliteration: PropTypes.bool,\n    /** value формы */\n    formValues: PropTypes.bool,\n    /** название поля на основе которого будет создаватся транслит */\n    subscribeField: PropTypes.string,\n  };\n  static defaultProps = {\n    isAutoGenTransliteration: true,\n  };\n\n\n  constructor(props){\n    super(props);\n    this.state = this.initialValues;\n  }\n\n  get initialValues(){\n    return {\n      prevValue: null,\n      autoGen: this.props.isAutoGenTransliteration,\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, prevContext) {\n    const {input: newInput, meta: newMeta} = this.props;\n    const {input: prevInput} = prevProps;\n\n    if (newMeta.visited && newMeta.active) {\n      if (newInput.value !== prevInput.value) {\n        this.setState({\n          autoGen: false\n        })\n      }\n    }\n  }\n\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const {input, formValues, subscribeField} = nextProps;\n    if (this.state.autoGen) {\n      if (\n        (this.props.formValues && nextProps.formValues)\n        && (this.props.formValues[subscribeField] !== formValues[subscribeField])\n      ) {\n        const value = this.transformString(formValues[subscribeField]);\n        input.onChange(value);\n        return true;\n      }\n      if (\n        nextProps.formValues\n        && (formValues[subscribeField] || !formValues[subscribeField])\n      ) {\n        const value = this.transformString(formValues[subscribeField]);\n        input.onChange(value);\n        return true;\n      }\n    }\n    return !shallowEqual(nextProps, this.props)\n  }\n\n\n  /**\n   * @param {string} word\n   * @return {string}\n   * @desc чистка строки от спец символов\n   * */\n  clearString = (word) => {\n    try {\n      return word && word.replace(/[^a-zA-Zа-яА-Я0-9 ]/gi, '')\n        .replace(/\\s\\s+/g, ' ');\n    } catch (e) {\n      console.log(e);\n      return word;\n    }\n  };\n\n  /**\n   * @param {string} word\n   * @return {string}\n   * @desc чистка строки от спец символов\n   * */\n  transformString = (word) => {\n    return cyrillicToTransliteration().transform(this.clearString(word), '-');\n  };\n\n  render() {\n    return (<TextField\n      {...this.props}\n    />)\n  }\n}\n\nexport default URLAliasField;\n"],"sourceRoot":""}