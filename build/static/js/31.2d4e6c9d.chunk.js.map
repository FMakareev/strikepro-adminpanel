{"version":3,"sources":["helpers/hasOwnProperty.js","config.js","store/reduxRestEasy/.helpers/networkHelpers.js","history.js","store/reduxRestEasy/.helpers/handleStatusCode.js","store/reduxRestEasy/.helpers/ResourceHelper.js","store/reduxRestEasy/.helpers/normalizerHelpers.js","components/TextField/TextField.js","helpers/normalizeSubmissionError.js","validation/required.js","helpers/createSubmitHandler.js","components/Form/FormSelect.js","store/reduxRestEasy/Tiles/TilesResource.js","components/FormDateTimePicker/FormDateTimePicker.js","helpers/dateToFormat.js","components/Form/FormInputColor.js","views/Tile/View/TileEditor/Components/TileEditorForm/TileEditorForm.js","store/reduxRestEasy/TileTypes/TileTypesResource.js","views/Tile/View/TileEditor/index.js"],"names":["__webpack_require__","d","__webpack_exports__","hasOwnProperty","obj","prop","Object","prototype","call","base","window","location","hostname","api","login","logout","posts","post","categories","category","slides","tiles","tile_types","tile","nomenclature","nomenclatures","nomenclatureCharacteristic","typesOfNomenclature","fileupload","static_pages","url_alias","requestPOST","body","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","method","credentials","headers","Accept","Content-type","JSON","stringify","requestGET","requestDELETE","requestPUT","history__WEBPACK_IMPORTED_MODULE_0__","BrowserHistory","createBrowserHistory","handleStatusCode","_history__WEBPACK_IMPORTED_MODULE_0__","response","status","history","push","reload","NormalizationPayload","resourceName","_this","this","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","mergeResourceAndPayload","resources","payload","forEach","item","id","metadata","data","concat","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","removePayloadFromResources","payloadID","console","log","filter","warn","payloadToResource","_this$resourceName","arguments","length","undefined","entities","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","result","updateResource","normalizeError","errors","message","DeleteNormalizer","Normalizer","urlParams","TextField","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","_ref","input","label","type","placeholder","required","icon","_ref$meta","meta","touched","error","a","createElement","className","addonType","assign","valid","normalizeSubmissionError","_error","Array","isArray","value","createSubmitHandler","fetchAction","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","options","_ref2","normalizedPayload","wrap","_context","prev","next","sent","SubmissionError","stop","_x","apply","FormSelect","_Component","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","_this$props","props","defaultValue","onChange","_this$props2","_this$props2$meta","valueKey","labelKey","react__WEBPACK_IMPORTED_MODULE_5___default","reactstrap__WEBPACK_IMPORTED_MODULE_8__","map","index","selected","reactstrap__WEBPACK_IMPORTED_MODULE_9__","color","Component","defaultProps","TILES_RESOURCE_NAME","CreateTileAction","DeleteTileAction","GetTileAction","GetTilesAction","UpdateTileAction","isRetrievingGetTile","isRetrievingGetTiles","GetTiles","GetTileById","isRetrievingUpdateTile","isRetrievingCreateTile","_brigad_redux_rest_easy__WEBPACK_IMPORTED_MODULE_0__","_helpers_ResourceHelper__WEBPACK_IMPORTED_MODULE_1__","_config__WEBPACK_IMPORTED_MODULE_2__","_helpers_handleStatusCode__WEBPACK_IMPORTED_MODULE_3__","_helpers_networkHelpers__WEBPACK_IMPORTED_MODULE_4__","_helpers_normalizerHelpers__WEBPACK_IMPORTED_MODULE_5__","_helpers_hasOwnProperty__WEBPACK_IMPORTED_MODULE_6__","TilesResource","createResource","createTile","url","config","normalizer","query","otherArgs","networkHelpers","deleteTile","getTile","getTiles","updateTile","actions","perform","selectors","resource","getResource","getResourceById","request","isPerforming","FormDateTimePicker","classCallCheck","possibleConstructorReturn","getPrototypeOf","handleChange","bind","assertThisInitialized","inherits","createClass","date","format","react_default","FormGroup","Label","es","locale","minDate","Date","FormInputColor","Input","style","padding","height","TileEditorForm","_getPrototypeOf2","_len","args","_key","onSubmit","asyncToGenerator","regenerator_default","values","handleSubmit","tileTypes","pristine","submitting","Row","Col","xs","md","lg","Field","name","component","validate","Alert","Button","disabled","reduxForm","form","connectRestEasy","state","ownProps","dispatch","withRouter","TileTypesResource","createTileType","deleteTileType","getTileType","getTileTypes","updateTileType","GetTileTypesAction","GetTileTypes","isRetrievingGetTileTypes","TileEditor","params","match","initialValues","TileEditorForm_TileEditorForm"],"mappings":"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","file":"static/js/31.2d4e6c9d.chunk.js","sourcesContent":["export const hasOwnProperty = (obj, prop) => {\n  if (!obj || !prop) {\n    return false\n  }\n  return Object.prototype.hasOwnProperty.call(obj, prop)\n};\n","\n\nlet base = '';\n\nswitch (window.location.hostname) {\n  case ('localhost'):{\n    base = 'https://dev.strikepro.ru';\n    break;\n  }\n  case ('admin.strikepro.ru'):{\n    base = 'https://dev.strikepro.ru';\n    break;\n  }\n  case ('strike.localhost'):{\n    base = 'http://strike.localhost';\n    break;\n  }\n}\n\n\n\nexport default {\n  base,\n  api: {\n    login: '/dashboard/auth/login',\n    logout: '/dashboard/auth/logout',\n\n    posts: '/dashboard/blog/posts',\n    post: '/dashboard/blog/post',\n\n    categories: '/dashboard/blog/categories',\n    category: '/dashboard/blog/category',\n\n    slides: '/dashboard/slides',\n\n    tiles: '/dashboard/mainfeeds',\n\n    tile_types: '/dashboard/mainfeed/types',\n    tile: '/dashboard/mainfeed',\n\n    nomenclature: '/dashboard/nomenclature',\n    nomenclatures: '/dashboard/nomenclatures',\n\n    nomenclatureCharacteristic: '/dashboard/nomenclature/characteristic',\n    typesOfNomenclature: '/dashboard/nomenclature/characteristic',\n    fileupload: '/dashboard/fileupload',\n\n    static_pages: '/dashboard/pages',\n    url_alias: '/dashboard/url_alias',\n  }\n}\n","export const requestPOST = (body) => {\n  return {\n    method: 'POST',\n    credentials: 'include',\n    headers: {\n      Accept: 'application/json',\n      'Content-type': 'application/json',\n    },\n    ...(body? {body: JSON.stringify(body)} : {})\n\n  }\n};\n\nexport const requestGET = () => {\n  return {\n    method: 'GET',\n    credentials: 'include',\n    headers: {\n      Accept: 'application/json',\n      'Content-type': 'application/json',\n    }\n  }\n};\n\nexport const requestDELETE = () => {\n  return {\n    method: 'DELETE',\n    credentials: 'include',\n    headers: {\n      Accept: 'application/json',\n      'Content-type': 'application/json',\n    }\n  }\n};\n\nexport const requestPUT = (body) => {\n  return {\n    method: 'PUT',\n    credentials: 'include',\n    headers: {\n      Accept: 'application/json',\n      'Content-type': 'application/json',\n    },\n    body: JSON.stringify(body),\n  }\n};\n","import {createBrowserHistory} from 'history';\n\nexport const BrowserHistory = createBrowserHistory();\n\nexport default BrowserHistory;\n","import history from \"../../../history\";\n\n\nexport const handleStatusCode = (response) => {\n  const {status} = response;\n  if (status === 401) {\n    history.push('#/login');\n    window.location.reload();\n    return response\n  }\n\n  if (status === 404) {\n    history.push('#/404');\n    window.location.reload();\n    return response\n  }\n\n\n  return response\n};\n\nexport default handleStatusCode;\n","export class NormalizationPayload {\n\n  resourceName = null;\n\n  constructor(resourceName) {\n    this.resourceName = resourceName;\n  }\n\n  /**\n   * @param {object} resources - объект с исходными ресурсами\n   * @param {array} payload - массив с новыми ресурсами\n   * @desc метод для добавления в существующие ресурсы новых ресурсов\n   * */\n  mergeResourceAndPayload = (resources, payload) => {\n    payload.forEach((item) => {\n      resources[this.resourceName][this.resourceName][item.id] = item;\n      resources[this.resourceName].metadata = {\n        data: [...resources[this.resourceName].metadata.data, item.id],\n      };\n    });\n    return resources;\n  };\n\n  /**\n   * @param {array} resources\n   * @param {string} payloadID\n   * @desc\n   * */\n  removePayloadFromResources = (resources, payloadID) => {\n    if (!payloadID) {\n      console.warn('payloadID undefined');\n      return resources;\n    }\n    console.log('removePayloadFromResources: ', this, resources, payloadID);\n    delete resources[this.resourceName][this.resourceName][payloadID];\n    resources[this.resourceName].metadata.data = resources[this.resourceName]\n      .metadata.data.filter(item => item !== payloadID);\n    return resources;\n  };\n\n  /**\n   * @param {array} payload\n   * @param {object} metadata\n   * @desc\n   * */\n  payloadToResource = (payload, metadata = {}) => {\n    const data = {\n      entities: {\n        [this.resourceName]: {\n          [this.resourceName]: {},\n          metadata: {}\n        },\n      },\n      result: []\n    };\n    if (payload) {\n      payload.forEach((item) => {\n        data.result.push(item.id);\n        data.entities[this.resourceName][this.resourceName][item.id] = item;\n      });\n    }\n    data.entities[this.resourceName].metadata = {\n      ...metadata,\n      data: data.result,\n    };\n    return data;\n  };\n\n  /**\n   * @param {object} resources - объект с исходными ресурсами\n   * @param {object} payload - массив с новыми ресурсами\n   * @desc метод для добавления в существующие ресурсы новых ресурсов\n   * */\n  updateResource = (resources, payload) => {\n    resources[this.resourceName][this.resourceName][payload.id] = payload;\n    return resources;\n  };\n\n  /**\n   * @param {object} payload\n   * @param {object} payload.errors\n   * @param {array} payload.errors.propName\n   * @param {string} payload.message\n   * */\n  normalizeError = (payload) => {\n    if(!payload.errors){\n      payload.errors = {};\n    }\n    return {\n      entities: {\n        ...payload,\n        message: [payload.message]\n      },\n      result: {errors: payload}\n    };\n  }\n\n}\n","import {hasOwnProperty} from \"../../../helpers/hasOwnProperty\";\n\n\nexport const DeleteNormalizer = (Normalizer)=> (payload, resources, urlParams,) => {\n  if (payload.errors) {\n    return Normalizer.normalizeError(payload);\n  }\n  if (payload) {\n    return Normalizer.removePayloadFromResources(resources, urlParams.id);\n  }\n  return resources;\n};\n\n\nexport const CreateNormalizer = (Normalizer) => (payload, resources, urlParams) => {\n  if (!payload ) {\n    return null\n  }\n  if (payload.errors || payload.message) {\n    return Normalizer.normalizeError(payload);\n  }\n\n  if (hasOwnProperty(resources,Normalizer.resourceName)) {\n    return Normalizer.mergeResourceAndPayload(resources, [payload])\n  } else {\n    return Normalizer.payloadToResource([payload]);\n  }\n};\n\nexport const UpdateNormalizer = (Normalizer) => (payload, resources) => {\n  if (payload.errors || payload.message) {\n    return Normalizer.normalizeError(payload);\n  }\n  if (payload) {\n    return Normalizer.updateResource(resources, payload);\n  }\n  return resources;\n};\n\nexport const GetListNormalizer = (Normalizer) => (payload) => {\n  if (!payload && payload.error) {\n    return null;\n  }\n  if (Array.isArray(payload)) {\n    return Normalizer.payloadToResource(payload);\n  } else {\n    return Normalizer.payloadToResource(payload.data, payload);\n  }\n};\n\nexport const GetByIdNormalizer = (Normalizer) => (payload) => Normalizer.payloadToResource([payload])\n","import React from \"react\";\nimport {FormFeedback, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, Label} from \"reactstrap\";\n\nexport const TextField = ({input, label, type, placeholder, required, icon, meta: {touched, error}}) => (\n  <FormGroup className={touched ? error ? '' : 'was-validated' : ''}>\n    {\n      label && <Label>{label}</Label>\n    }\n    <InputGroup className=\"mb-3\">\n      {\n        icon &&\n        <InputGroupAddon addonType=\"prepend\">\n          <InputGroupText>\n            <i className={icon}/>\n          </InputGroupText>\n        </InputGroupAddon>\n      }\n\n      <Input\n        {...input}\n        type={type}\n        valid={touched ? !error : false}\n        className={touched ? error ? 'form-control-warning is-invalid' : '' : ''}\n        placeholder={placeholder || label}\n        required={required}/>\n      <FormFeedback\n        valid={touched ? !error : false}\n        className=\"help-block\"\n      >\n        {error}\n      </FormFeedback>\n    </InputGroup>\n\n  </FormGroup>)\n\nexport default TextField;\n","\n/**\n * @param {object} error\n * @param {object} error.errors\n * @param {array} error.message\n * */\nexport const normalizeSubmissionError = (error) => {\n  const data = {\n    _error: error.message ? error.message[0] : null,\n  };\n  for (let prop in error.errors) {\n    if (Array.isArray(error.errors[prop])) {\n      data[prop] = error.errors[prop][0];\n    }\n  }\n  return data;\n}\n","export const required = value => {\n  return (value ? undefined : 'Обязательно для заполнения');\n};\n","import {SubmissionError} from \"redux-form\";\nimport {normalizeSubmissionError} from \"./normalizeSubmissionError\";\n\nexport const createSubmitHandler = (fetchAction) => async (options) => {\n  const {normalizedPayload, error,} = await fetchAction(options);\n  if (normalizedPayload && normalizedPayload.errors || error) {\n    throw new SubmissionError(normalizeSubmissionError(normalizedPayload ||\n      {\n        message: [error.message],\n        errors: {}\n      }));\n  }\n};\n\nexport default createSubmitHandler;\n","import React, {Component} from 'react';\nimport {Alert, FormGroup, Input, Label} from \"reactstrap\";\n\n\nexport class FormSelect extends Component {\n\n  static defaultProps = {\n    valueKey: 'id',\n    labelKey: 'name',\n  };\n\n  componentDidMount() {\n    const {\n      input,\n      defaultValue,\n    } = this.props;\n\n    if(!input.value && defaultValue){\n      input.onChange(defaultValue);\n    }\n\n  }\n\n  render() {\n    const {\n      input,\n      label,\n      type,\n      data,\n      meta: {touched, error},\n      valueKey,\n      labelKey,\n    } = this.props;\n    return (\n      <FormGroup>\n        <Label>{label}</Label>\n        <Input type={type} {...input} >\n          <option>выберите категорию...</option>\n          {\n            Array.isArray(data) && data.map((item, index) => (<option\n              key={index}\n              selected={item[valueKey] === input.value}\n              value={item[valueKey]}>\n              {item[labelKey]}\n            </option>))\n          }\n        </Input>\n        {\n          touched && error &&\n          <Alert color=\"danger\">\n            {error}\n          </Alert>\n\n        }\n      </FormGroup>\n    );\n  }\n}\n\n\nexport default FormSelect;\n","import {createResource} from '@brigad/redux-rest-easy';\nimport {NormalizationPayload} from \"../.helpers/ResourceHelper\";\nimport config from \"../../../config\";\nimport {handleStatusCode} from \"../.helpers/handleStatusCode\";\nimport {requestDELETE, requestGET, requestPOST, requestPUT} from \"../.helpers/networkHelpers\";\nimport {DeleteNormalizer} from \"../.helpers/normalizerHelpers\";\nimport {hasOwnProperty} from \"../../../helpers/hasOwnProperty\";\n\n\nexport const TILES_RESOURCE_NAME = 'tiles';\n\nconst Normalizer = new NormalizationPayload(TILES_RESOURCE_NAME);\n\n\nexport const TilesResource = createResource(TILES_RESOURCE_NAME)({\n  createTile: {\n    method: 'POST',\n    url: `${config.base}${config.api.tile}`,\n    normalizer: (payload, resources, urlParams, query, body, otherArgs) => {\n      console.log('createTile: ', payload, resources, urlParams,query, body, otherArgs);\n      if (!payload ) {\n        return null\n      }\n      if (payload.errors || payload.message) {\n        return Normalizer.normalizeError(payload);\n      }\n\n      if (hasOwnProperty(resources,TILES_RESOURCE_NAME)) {\n        return Normalizer.mergeResourceAndPayload(resources, [payload])\n      } else {\n        return Normalizer.payloadToResource([payload]);\n      }\n    },\n    networkHelpers: {\n      handleStatusCode:(response)=>{\n        handleStatusCode(response)\n      },\n      requestPOST: requestPOST\n    },\n  },\n  deleteTile: {\n    method: 'DELETE',\n    url: `${config.base}${config.api.tile}/::id`,\n    normalizer: DeleteNormalizer(Normalizer),\n    networkHelpers: {\n      handleStatusCode,\n      requestDELETE: requestDELETE,\n    },\n  },\n  getTile: {\n    method: 'GET',\n    url: `${config.base}${config.api.tile}/::id`,\n    normalizer: (payload) => Normalizer.payloadToResource([payload]),\n    networkHelpers: {\n      handleStatusCode,\n      requestGET: requestGET,\n    },\n  },\n  getTiles: {\n    method: 'GET',\n    url: `${config.base}${config.api.tiles}`,\n    normalizer: (payload) => {\n      if (!payload && payload.error) {\n        return null;\n      }\n      if (Array.isArray(payload)) {\n        return Normalizer.payloadToResource(payload);\n      } else {\n        return Normalizer.payloadToResource(payload.data, payload);\n      }\n    },\n    networkHelpers: {\n      handleStatusCode,\n      requestGET: requestGET,\n    },\n  },\n  updateTile: {\n    method: 'PUT',\n    url: `${config.base}${config.api.tile}/::id`,\n    normalizer: (payload, resources) => {\n      if (payload.errors) {\n        return Normalizer.normalizeError(payload);\n      }\n      if (payload) {\n        return Normalizer.updateResource(resources, payload);\n      }\n      return resources;\n    },\n    networkHelpers: {\n      handleStatusCode,\n      requestPUT: requestPUT,\n    },\n  },\n});\n\n\nconst {\n  actions: {\n    createTile: {\n      perform: CreateTileAction,\n    },\n    deleteTile: {\n      perform: DeleteTileAction,\n    },\n    getTile: {\n      perform: GetTileAction,\n    },\n    getTiles: {\n      perform: GetTilesAction,\n    },\n    updateTile: {\n      perform: UpdateTileAction,\n    },\n  },\n  selectors: {\n    resource: {\n      getResource: GetTiles,\n      getResourceById: GetTileById,\n    },\n    createTile: {\n      request: {\n        getResource: CreateTileGetResource,\n        isPerforming: isRetrievingCreateTile,\n      }\n    },\n    deleteTile: {\n      request: {\n        getResource: DeleteTileGetResource,\n      }\n    },\n    getTile: {\n      request: {\n        getResource: GetTileGetResource,\n        isPerforming: isRetrievingGetTile,\n      }\n    },\n    getTiles: {\n      request: {\n        getResource: GetTilesGetResource,\n        isPerforming: isRetrievingGetTiles,\n      }\n    },\n    updateTile: {\n      request: {\n        getResource: UpdateTileGetResource,\n        isPerforming: isRetrievingUpdateTile,\n      }\n    },\n  }\n} = TilesResource;\n\nexport {\n  CreateTileAction,\n  DeleteTileAction,\n  GetTileAction,\n  GetTilesAction,\n  UpdateTileAction,\n\n  CreateTileGetResource,\n  DeleteTileGetResource,\n  GetTileGetResource,\n  GetTilesGetResource,\n  UpdateTileGetResource,\n  isRetrievingGetTile,\n  isRetrievingGetTiles,\n  GetTiles,\n  GetTileById,\n\n  isRetrievingUpdateTile,\n  isRetrievingCreateTile,\n}\n","import React, {Component} from 'react';\nimport {FormGroup, Label} from \"reactstrap\";\nimport DatePicker  from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {dateToFormat} from \"../../helpers/dateToFormat\";\n\n\n\n\nexport class FormDateTimePicker extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n\n  handleChange(value) {\n    const {input: {onChange}} = this.props;\n    return onChange(dateToFormat(value));\n  }\n\n  render() {\n    const {label, input: {value}} = this.props;\n\n    return (\n      <div className=\"controls\">\n        <FormGroup>\n          <Label>{label}</Label>\n          <DatePicker\n            locale={'ru'}\n            minDate={new Date()}\n            selected={new Date(value || new Date() )}\n            onChange={this.handleChange}\n            className={'form-control full-width'}\n          />\n        </FormGroup>\n      </div>\n    );\n  }\n\n}\n\n\nexport default FormDateTimePicker;\n","import {format} from 'date-fns/esm'\n\nexport const DEFAULT_DATE_FORMAT = \"yyyy-MM-d h:mm:ss\";\n\nexport const dateToFormat = (date) => {\n  return format(date, DEFAULT_DATE_FORMAT);\n};\n","import React from 'react';\nimport {FormGroup, Input, Label} from \"reactstrap\";\n\nexport const FormInputColor = ({input, label, type, meta: {touched, error}}) => {\n    return (\n        <div className=\"controls\">\n            <FormGroup>\n                <Label>{label}</Label>\n                <Input style={{    padding: 'inherit',\n                    height: '35px'}} type={type} {...input}/>\n            </FormGroup>\n            <p className=\"help-block\">{touched && error && <span>{error}</span>}</p>\n        </div>\n    )\n};\n\nexport default FormInputColor;\n","import React, {Component} from 'react';\nimport {Col, FormGroup, Row, Button, Alert} from \"reactstrap\";\nimport {Field, reduxForm, SubmissionError} from \"redux-form\";\nimport FormSelect from \"../../../../../../components/Form/FormSelect\";\nimport FormDateTimePicker from \"../../../../../../components/FormDateTimePicker/FormDateTimePicker\";\nimport FormInputColor from \"../../../../../../components/Form/FormInputColor\";\nimport {TextField} from \"../../../../../../components/TextField/TextField\";\nimport {connect as connectRestEasy} from \"@brigad/redux-rest-easy\";\n\nimport {\n  CreateTileAction,\n  isRetrievingCreateTile, isRetrievingUpdateTile,\n  UpdateTileAction\n} from \"../../../../../../store/reduxRestEasy/Tiles/TilesResource\";\nimport {normalizeSubmissionError} from \"../../../../../../helpers/normalizeSubmissionError\";\nimport {withRouter} from \"react-router-dom\";\nimport {required} from \"../../../../../../validation/required\";\nimport {hasOwnProperty} from \"../../../../../../helpers/hasOwnProperty\";\nimport {createSubmitHandler} from \"../../../../../../helpers/createSubmitHandler\";\n\n\nexport class TileEditorForm extends Component {\n\n\n  onSubmit = async (values) => {\n    console.log('values: ', values);\n    const {history, UpdateTileAction, CreateTileAction} = this.props;\n    if (hasOwnProperty(values, 'id')) {\n      await createSubmitHandler(UpdateTileAction)({\n        body: values,\n        urlParams: {\n          id: values.id,\n        }\n      })\n    } else {\n      await createSubmitHandler(CreateTileAction)({body: values})\n    }\n    history.push('/tile-list');\n  };\n\n\n  render() {\n    const {error, handleSubmit, tileTypes, pristine, submitting} = this.props;\n\n    return (\n      <form onSubmit={handleSubmit(this.onSubmit)}>\n        <Row>\n          <Col xs=\"12\" md=\"6\" lg=\"4\">\n            <Field\n              name=\"resource_id\"\n              component={TextField}\n              label=\"resource_id\"\n              type=\"text\"\n              validate={[required]}\n            />\n          </Col>\n          {\n            tileTypes &&\n            <Col xs=\"12\" md=\"6\" lg=\"4\">\n              <Field\n                name=\"resource_type\"\n                component={FormSelect}\n                valueKey={'name'}\n                label=\"resource_type\"\n                type=\"select\"\n                data={tileTypes}\n              />\n            </Col>\n          }\n          <Col xs=\"12\" md=\"6\" lg=\"4\">\n            <Field\n              name=\"cols\"\n              component={TextField}\n              label=\"cols\"\n              type=\"text\"\n            />\n          </Col>\n          <Col xs=\"12\" md=\"6\" lg=\"4\">\n            <Field\n              name=\"background_color\"\n              component={FormInputColor}\n              label=\"background_color\"\n              type=\"color\"\n            />\n          </Col>\n          <Col xs=\"12\" md=\"6\" lg=\"4\">\n            <Field\n              name=\"public_at\"\n              label=\"public_at\"\n              component={FormDateTimePicker}\n            />\n          </Col>\n        </Row>\n\n        {\n          error &&\n          <Row>\n            <Col xs=\"12\">\n              <Alert color=\"danger\">\n                {error}\n              </Alert>\n            </Col>\n          </Row>\n\n        }\n\n        <Row>\n          <Col xs=\"6\">\n            <div className=\"controls\">\n              <FormGroup>\n                <Button\n                  color=\"primary\"\n                  type=\"submit\"\n                  className=\"px-4\"\n                  disabled={pristine || submitting}\n                >Сохранить</Button>\n              </FormGroup>\n            </div>\n          </Col>\n        </Row>\n      </form>\n    )\n  }\n};\n\nTileEditorForm.propTypes = {};\n\nTileEditorForm.defaultProps = {};\n\n\nTileEditorForm = reduxForm({\n  form: 'TileEditorForm'\n})(TileEditorForm);\n\nTileEditorForm = connectRestEasy(\n  (state, ownProps) => ({\n    isRetrievingCreateTile: isRetrievingCreateTile(state, ownProps),\n    isRetrievingUpdateTile: isRetrievingUpdateTile(state, ownProps),\n  }),\n  dispatch => ({\n    CreateTileAction: (options) => dispatch(CreateTileAction(options)),\n    UpdateTileAction: (options) => dispatch(UpdateTileAction(options)),\n  })\n)(TileEditorForm);\n\nTileEditorForm = withRouter(TileEditorForm);\n\n\nexport default TileEditorForm;\n","import {createResource} from '@brigad/redux-rest-easy';\nimport {NormalizationPayload} from \"../.helpers/ResourceHelper\";\nimport config from \"../../../config\";\nimport {handleStatusCode} from \"../.helpers/handleStatusCode\";\nimport {requestDELETE, requestGET, requestPOST, requestPUT} from \"../.helpers/networkHelpers\";\nimport {DeleteNormalizer} from \"../.helpers/normalizerHelpers\";\nimport {hasOwnProperty} from \"../../../helpers/hasOwnProperty\";\n\n\nexport const TILE_TYPES_RESOURCE_NAME = 'tileTypes';\n\nconst Normalizer = new NormalizationPayload(TILE_TYPES_RESOURCE_NAME);\n\n\nexport const TileTypesResource = createResource(TILE_TYPES_RESOURCE_NAME)({\n  createTileType: {\n    method: 'POST',\n    url: `${config.base}${config.api.tile_types}`,\n    normalizer: (payload, resources) => {\n      if (!payload) {\n        return null\n      }\n      if (payload.errors) {\n        return Normalizer.normalizeError(payload);\n      }\n\n      if (hasOwnProperty(resources,TILE_TYPES_RESOURCE_NAME)) {\n        return Normalizer.mergeResourceAndPayload(resources, [payload])\n      } else {\n        return Normalizer.payloadToResource([payload]);\n      }\n    },\n    networkHelpers: {\n      handleStatusCode,\n      requestPOST: requestPOST\n    },\n  },\n  deleteTileType: {\n    method: 'DELETE',\n    url: `${config.base}${config.api.tile_types}/::id`,\n    normalizer: DeleteNormalizer(Normalizer),\n\n    networkHelpers: {\n      handleStatusCode,\n      requestDELETE: requestDELETE,\n    },\n  },\n  getTileType: {\n    method: 'GET',\n    url: `${config.base}${config.api.tile_types}/::id`,\n    normalizer: (payload) => Normalizer.payloadToResource([payload]),\n    networkHelpers: {\n      handleStatusCode,\n      requestGET: requestGET,\n    },\n  },\n  getTileTypes: {\n    method: 'GET',\n    url: `${config.base}${config.api.tile_types}`,\n    normalizer: (payload) => {\n      if (!payload && payload.error) {\n        return null;\n      }\n      if (Array.isArray(payload)) {\n        return Normalizer.payloadToResource(payload.map((item,index) => ({id: index, name: item})));\n      } else {\n        return Normalizer.payloadToResource(payload.data, payload);\n      }\n    },\n    networkHelpers: {\n      handleStatusCode,\n      requestGET: requestGET,\n    },\n  },\n  updateTileType: {\n    method: 'PUT',\n    url: `${config.base}${config.api.tile_types}/::id`,\n    normalizer: (payload, resources) => {\n      if (payload.errors) {\n        return Normalizer.normalizeError(payload);\n      }\n      if (payload) {\n        return Normalizer.updateResource(resources, payload);\n      }\n      return resources;\n    },\n    networkHelpers: {\n      handleStatusCode,\n      requestPUT: requestPUT,\n    },\n  },\n});\n\n\nconst {\n  actions: {\n    createTileType: {\n      perform: CreateTileTypeAction,\n    },\n    deleteTileType: {\n      perform: DeleteTileTypeAction,\n    },\n    getTileType: {\n      perform: GetTileTypeAction,\n    },\n    getTileTypes: {\n      perform: GetTileTypesAction,\n    },\n    updateTileType: {\n      perform: UpdateTileTypeAction,\n    },\n  },\n  selectors: {\n    resource: {\n      getResource: GetTileTypes,\n      getResourceById: GetTileTypeById,\n    },\n    createTileType: {\n      request: {\n        getResource: CreateTileTypeGetResource,\n        isPerforming: isRetrievingCreateTileType,\n      }\n    },\n    deleteTileType: {\n      request: {\n        getResource: DeleteTileTypeGetResource,\n      }\n    },\n    getTileType: {\n      request: {\n        getResource: GetTileTypeGetResource,\n        isPerforming: isRetrievingGetTileType,\n      }\n    },\n    getTileTypes: {\n      request: {\n        getResource: GetTileTypesGetResource,\n        isPerforming: isRetrievingGetTileTypes,\n      }\n    },\n    updateTileType: {\n      request: {\n        getResource: UpdateTileTypeGetResource,\n        isPerforming: isRetrievingUpdateTileType,\n      }\n    },\n  }\n} = TileTypesResource;\n\nexport {\n  CreateTileTypeAction,\n  DeleteTileTypeAction,\n  GetTileTypeAction,\n  GetTileTypesAction,\n  UpdateTileTypeAction,\n\n  CreateTileTypeGetResource,\n  DeleteTileTypeGetResource,\n  GetTileTypeGetResource,\n  GetTileTypesGetResource,\n  UpdateTileTypeGetResource,\n  isRetrievingGetTileType,\n  isRetrievingGetTileTypes,\n  GetTileTypes,\n  GetTileTypeById,\n\n  isRetrievingUpdateTileType,\n  isRetrievingCreateTileType,\n}\n","import React, {Component} from 'react';\nimport {TileEditorForm} from \"./Components/TileEditorForm/TileEditorForm\";\nimport {connect as connectRestEasy} from \"@brigad/redux-rest-easy\";\nimport {\n  GetTileAction,\n  GetTileById,\n  isRetrievingGetTile,\n  TILES_RESOURCE_NAME\n} from \"../../../../store/reduxRestEasy/Tiles/TilesResource\";\nimport {\n  GetTileTypes,\n  GetTileTypesAction,\n  isRetrievingGetTileTypes\n} from \"../../../../store/reduxRestEasy/TileTypes/TileTypesResource\";\n\nexport class TileEditor extends Component {\n\n  componentWillMount() {\n    const {match: {params}, GetTileAction, GetTileTypesAction} = this.props;\n    if (params && params.id) {\n      GetTileAction({\n        urlParams: {\n          id: params.id,\n        }\n      });\n    }\n    GetTileTypesAction();\n  }\n\n\n  render() {\n    const {\n      tile,\n      tileTypes,\n      match: {params},\n      isRetrievingGetTile,\n      isRetrievingGetTileTypes\n    } = this.props;\n    if (isRetrievingGetTile || isRetrievingGetTileTypes) {\n      return <div>Loading....</div>\n    }\n    if (!tileTypes.length) {\n      return null;\n    }\n    let initialValues = {\n      initialValues: params && params.id && tile(params.id)\n    };\n    const data = tileTypes && Object.values(tileTypes[0]);\n    return (\n      <div className=\"animated fadeIn\">\n        <TileEditorForm tileTypes={data} {...initialValues}/>\n      </div>\n    )\n  }\n}\n\nTileEditor = connectRestEasy(\n  (state, ownProps) => ({\n    tileTypes: GetTileTypes(state, ownProps),\n    tile: (id) => {\n      const data = GetTileById(state, TILES_RESOURCE_NAME, id);\n      console.log(data);\n      if (data) {\n        return data[id];\n      }\n      return null;\n    },\n    isRetrievingGetTileTypes: isRetrievingGetTileTypes(state, ownProps),\n    isRetrievingGetTile: isRetrievingGetTile(state, ownProps),\n  }),\n  dispatch => ({\n    GetTileAction: (options) => dispatch(GetTileAction(options)),\n    GetTileTypesAction: (options) => dispatch(GetTileTypesAction(options)),\n  })\n)(TileEditor);\n\nexport default TileEditor;\n"],"sourceRoot":""}