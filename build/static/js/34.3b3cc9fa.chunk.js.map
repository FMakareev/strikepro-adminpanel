{"version":3,"sources":["config.js","store/reduxRestEasy/.helpers/networkHelpers.js","history.js","store/reduxRestEasy/.helpers/handleStatusCode.js","store/reduxRestEasy/.helpers/ResourceHelper.js","store/reduxRestEasy/.helpers/normalizerHelpers.js","components/RestPagination/RestPagination.js","store/reduxRestEasy/Slides/SlidesResource.js","components/SlideItem/SlideItem.js","views/Slides/Slides/index.js"],"names":["__webpack_exports__","base","api","login","logout","posts","post","categories","category","slides","tiles","tile_types","tile","nomenclature","nomenclatures","nomenclatureCharacteristic","typesOfNomenclature","fileupload","requestPOST","body","Object","C_nodeServer_strikepro_adminpanel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","method","credentials","headers","Accept","Content-type","JSON","stringify","requestGET","requestDELETE","requestPUT","history__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","BrowserHistory","createBrowserHistory","d","handleStatusCode","_history__WEBPACK_IMPORTED_MODULE_0__","response","status","history","push","NormalizationPayload","resourceName","_this","this","C_nodeServer_strikepro_adminpanel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","mergeResourceAndPayload","resources","payload","forEach","item","id","metadata","data","concat","C_nodeServer_strikepro_adminpanel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","removePayloadFromResources","payloadID","console","log","filter","warn","payloadToResource","_this$resourceName","arguments","length","undefined","entities","C_nodeServer_strikepro_adminpanel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","result","updateResource","normalizeError","errors","message","DeleteNormalizer","Normalizer","urlParams","RestPagination","_Component","props","C_nodeServer_strikepro_adminpanel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","C_nodeServer_strikepro_adminpanel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_nodeServer_strikepro_adminpanel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","onMovePageHistory","count","_this$props","match","path","onMovePage","event","preventDefault","_this$props2","metaData","current_page","state","initialState","C_nodeServer_strikepro_adminpanel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_nodeServer_strikepro_adminpanel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","_ref","_this2","last_page","array","_this$state","page_min","page_max","setState","_loop","i","pageNum","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_6__","active","reactstrap__WEBPACK_IMPORTED_MODULE_7__","href","onClick","_this3","reactstrap__WEBPACK_IMPORTED_MODULE_8__","xs","reactstrap__WEBPACK_IMPORTED_MODULE_9__","className","previous","onPagination","next","get","Component","withRouter","CreateSlideAction","DeleteSlideAction","GetSlideAction","GetSlidesAction","UpdateSlideAction","isRetrievingGetSlide","isRetrievingGetSlides","GetSlides","GetSlideById","isRetrievingUpdateSlide","isRetrievingCreateSlide","_brigad_redux_rest_easy__WEBPACK_IMPORTED_MODULE_0__","_helpers_ResourceHelper__WEBPACK_IMPORTED_MODULE_1__","_config__WEBPACK_IMPORTED_MODULE_2__","_helpers_handleStatusCode__WEBPACK_IMPORTED_MODULE_3__","_helpers_networkHelpers__WEBPACK_IMPORTED_MODULE_4__","_helpers_normalizerHelpers__WEBPACK_IMPORTED_MODULE_5__","SlidesResource","createResource","createSlide","url","config","normalizer","hasOwnProperty","networkHelpers","deleteSlide","getSlide","getSlides","error","Array","isArray","updateSlide","actions","perform","selectors","resource","getResource","getResourceById","request","isPerforming","SlideItem","onDelete","react_default","Card","CardBlock","CardText","ReactHtmlParser","CardFooter","Button","color","react_router_dom","to","Badge","SlideList","classCallCheck","possibleConstructorReturn","getPrototypeOf","onGetSlides","query","page","onDeleteSlide","inherits","createClass","location","search","values","Row","map","index","Col","components_SlideItem_SlideItem","assign","connectRestEasy","ownProps","dispatch","options"],"mappings":"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","file":"static/js/34.3b3cc9fa.chunk.js","sourcesContent":["export default {\r\n  //base: window.location.hostname === 'localhost' ? 'https://dev.strikepro.ru' : '',\r\n  base: 'https://dev.strikepro.ru',\r\n  api: {\r\n    login: '/dashboard/auth/login',\r\n    logout: '/dashboard/auth/logout',\r\n\r\n    posts: '/dashboard/blog/posts',\r\n    post: '/dashboard/blog/post',\r\n\r\n    categories: '/dashboard/blog/categories',\r\n    category: '/dashboard/blog/category',\r\n\r\n    slides: '/dashboard/slides',\r\n\r\n    tiles: '/dashboard/mainfeeds',\r\n\r\n    tile_types: '/dashboard/mainfeed/types',\r\n    tile: '/dashboard/mainfeed',\r\n\r\n    nomenclature: '/dashboard/nomenclature',\r\n    nomenclatures: '/dashboard/nomenclatures',\r\n\r\n    nomenclatureCharacteristic: '/dashboard/nomenclature/characteristic',\r\n    typesOfNomenclature: '/dashboard/nomenclature/characteristic',\r\n    fileupload: '/dashboard/fileupload',\r\n  }\r\n}\r\n","export const requestPOST = (body) => {\r\n  return {\r\n    method: 'POST',\r\n    credentials: 'include',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-type': 'application/json',\r\n    },\r\n    ...(body? {body: JSON.stringify(body)} : {})\r\n\r\n  }\r\n};\r\n\r\nexport const requestGET = () => {\r\n  return {\r\n    method: 'GET',\r\n    credentials: 'include',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-type': 'application/json',\r\n    }\r\n  }\r\n};\r\n\r\nexport const requestDELETE = () => {\r\n  return {\r\n    method: 'DELETE',\r\n    credentials: 'include',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-type': 'application/json',\r\n    }\r\n  }\r\n};\r\n\r\nexport const requestPUT = (body) => {\r\n  return {\r\n    method: 'PUT',\r\n    credentials: 'include',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-type': 'application/json',\r\n    },\r\n    body: JSON.stringify(body),\r\n  }\r\n};\r\n","import {createBrowserHistory} from 'history';\r\n\r\nexport const BrowserHistory = createBrowserHistory();\r\n\r\nexport default BrowserHistory;\r\n","import history from \"../../../history\";\r\n\r\n\r\nexport const handleStatusCode = (response) => {\r\n  const {status} = response;\r\n  if (status === 401) {\r\n    history.push('/login');\r\n    return response\r\n  }\r\n\r\n  if (status === 404) {\r\n    history.push('/404');\r\n    return response\r\n  }\r\n\r\n\r\n  return response\r\n};\r\n\r\nexport default handleStatusCode;\r\n","export class NormalizationPayload {\r\n\r\n  resourceName = null;\r\n\r\n  constructor(resourceName) {\r\n    this.resourceName = resourceName;\r\n  }\r\n\r\n  /**\r\n   * @param {object} resources - объект с исходными ресурсами\r\n   * @param {array} payload - массив с новыми ресурсами\r\n   * @desc метод для добавления в существующие ресурсы новых ресурсов\r\n   * */\r\n  mergeResourceAndPayload = (resources, payload) => {\r\n    payload.forEach((item) => {\r\n      resources[this.resourceName][this.resourceName][item.id] = item;\r\n      resources[this.resourceName].metadata = {\r\n        data: [...resources[this.resourceName].metadata.data, item.id],\r\n      };\r\n    });\r\n    return resources;\r\n  };\r\n\r\n  /**\r\n   * @param {array} resources\r\n   * @param {string} payloadID\r\n   * @desc\r\n   * */\r\n  removePayloadFromResources = (resources, payloadID) => {\r\n    if (!payloadID) {\r\n      console.warn('payloadID undefined');\r\n      return resources;\r\n    }\r\n    console.log('removePayloadFromResources: ', this, resources, payloadID);\r\n    delete resources[this.resourceName][this.resourceName][payloadID];\r\n    resources[this.resourceName].metadata.data = resources[this.resourceName]\r\n      .metadata.data.filter(item => item !== payloadID);\r\n    return resources;\r\n  };\r\n\r\n  /**\r\n   * @param {array} payload\r\n   * @param {object} metadata\r\n   * @desc\r\n   * */\r\n  payloadToResource = (payload, metadata = {}) => {\r\n    const data = {\r\n      entities: {\r\n        [this.resourceName]: {\r\n          [this.resourceName]: {},\r\n          metadata: {}\r\n        },\r\n      },\r\n      result: []\r\n    };\r\n    if (payload) {\r\n      payload.forEach((item) => {\r\n        data.result.push(item.id);\r\n        data.entities[this.resourceName][this.resourceName][item.id] = item;\r\n      });\r\n    }\r\n    data.entities[this.resourceName].metadata = {\r\n      ...metadata,\r\n      data: data.result,\r\n    };\r\n    return data;\r\n  };\r\n\r\n  /**\r\n   * @param {object} resources - объект с исходными ресурсами\r\n   * @param {object} payload - массив с новыми ресурсами\r\n   * @desc метод для добавления в существующие ресурсы новых ресурсов\r\n   * */\r\n  updateResource = (resources, payload) => {\r\n    resources[this.resourceName][this.resourceName][payload.id] = payload;\r\n    return resources;\r\n  };\r\n\r\n  /**\r\n   * @param {object} payload\r\n   * @param {object} payload.errors\r\n   * @param {array} payload.errors.propName\r\n   * @param {string} payload.message\r\n   * */\r\n  normalizeError = (payload) => {\r\n    if(!payload.errors){\r\n      payload.errors = {};\r\n    }\r\n    return {\r\n      entities: {\r\n        ...payload,\r\n        message: [payload.message]\r\n      },\r\n      result: {errors: payload}\r\n    };\r\n  }\r\n\r\n}\r\n","\r\n\r\nexport const DeleteNormalizer = (Normalizer)=> (payload, resources, urlParams,) => {\r\n  if (payload.errors) {\r\n    return Normalizer.normalizeError(payload);\r\n  }\r\n  if (payload) {\r\n    return Normalizer.removePayloadFromResources(resources, urlParams.id);\r\n  }\r\n  return resources;\r\n};\r\n\r\n\r\nexport const CreateNormalizer = (Normalizer) => (payload, resources, urlParams) => {\r\n  if (!payload ) {\r\n    return null\r\n  }\r\n  if (payload.errors || payload.message) {\r\n    return Normalizer.normalizeError(payload);\r\n  }\r\n\r\n  if (resources.hasOwnProperty(Normalizer.resourceName)) {\r\n    return Normalizer.mergeResourceAndPayload(resources, [payload])\r\n  } else {\r\n    return Normalizer.payloadToResource([payload]);\r\n  }\r\n};\r\n\r\nexport const UpdateNormalizer = (Normalizer) => (payload, resources) => {\r\n  if (payload.errors || payload.message) {\r\n    return Normalizer.normalizeError(payload);\r\n  }\r\n  if (payload) {\r\n    return Normalizer.updateResource(resources, payload);\r\n  }\r\n  return resources;\r\n};\r\n\r\nexport const GetListNormalizer = (Normalizer) => (payload) => {\r\n  if (!payload && payload.error) {\r\n    return null;\r\n  }\r\n  if (Array.isArray(payload)) {\r\n    return Normalizer.payloadToResource(payload);\r\n  } else {\r\n    return Normalizer.payloadToResource(payload.data, payload);\r\n  }\r\n};\r\n\r\nexport const GetByIdNormalizer = (Normalizer) => (payload) => Normalizer.payloadToResource([payload])\r\n","import React, {Component} from 'react';\r\nimport PropType from 'prop-types';\r\nimport {Col, Pagination, PaginationItem, PaginationLink} from \"reactstrap\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nexport class RestPagination extends Component {\r\n\r\n  static propTypes = {\r\n    onMovePage: PropType.func,\r\n    metaData: PropType.object,\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      page_min: 0,\r\n      page_max: 5,\r\n    }\r\n  }\r\n\r\n  onPagination({last_page}) {\r\n    let array = [];\r\n\r\n    let {\r\n      page_min,\r\n      page_max,\r\n      current_page\r\n    } = this.state;\r\n\r\n\r\n    if (current_page === page_max) {\r\n      if (page_max < last_page) {\r\n        page_max += 1;\r\n        page_min += 1;\r\n      }\r\n    } else if (current_page === page_min + 1) {\r\n      if (page_min > 0) {\r\n        page_max -= 1;\r\n        page_min -= 1;\r\n      }\r\n    }\r\n    if (page_max !== this.state.page_max && page_min !== this.state.page_max) {\r\n      this.setState(page_max, page_min);\r\n    }\r\n    for (let i = page_min; i < last_page; i++) {\r\n      let pageNum = i + 1;\r\n      if (pageNum === current_page) {\r\n        array.push(\r\n          <PaginationItem key={i} active>\r\n            <PaginationLink href=\"#\">{pageNum}</PaginationLink>\r\n          </PaginationItem>\r\n        )\r\n      } else {\r\n        array.push(\r\n          <PaginationItem key={i}>\r\n            <PaginationLink\r\n              onClick={(event) => {\r\n                event.preventDefault();\r\n                const {onMovePage} = this.props;\r\n                this.onMovePageHistory(pageNum);\r\n                onMovePage(pageNum);\r\n              }}\r\n            >\r\n              {pageNum}\r\n            </PaginationLink>\r\n          </PaginationItem>\r\n        )\r\n      }\r\n    }\r\n    return array\r\n  }\r\n\r\n  onMovePageHistory = (count) => {\r\n    const {match, history} = this.props;\r\n    history.push(`${match.path}?page=${ count}`);\r\n    return count;\r\n  };\r\n\r\n\r\n  onMovePage = (event, count) => {\r\n    event.preventDefault();\r\n    const {metaData, onMovePage} = this.props;\r\n    onMovePage(metaData.current_page + count);\r\n    this.onMovePageHistory(metaData.current_page +count);\r\n    return count;\r\n  };\r\n\r\n  render() {\r\n    const {metaData} = this.props;\r\n    if (!metaData || !(metaData && metaData.last_page > 1)) {\r\n      return null;\r\n    }\r\n    return (<Col xs=\"12\">\r\n      <nav>\r\n        <Pagination className=\"justify-content-center\">\r\n          {\r\n            metaData.current_page > 1 &&\r\n            <PaginationItem>\r\n              <PaginationLink\r\n                onClick={(event) => this.onMovePage(event, -1)}\r\n                previous href=\"#\">Prev</PaginationLink>\r\n            </PaginationItem>\r\n          }\r\n\r\n          {\r\n            this.onPagination(metaData)\r\n          }\r\n\r\n          {\r\n            metaData.last_page > metaData.current_page &&\r\n            <PaginationItem>\r\n              <PaginationLink\r\n                onClick={(event) => this.onMovePage(event, 1)}\r\n                next href=\"#\">Next</PaginationLink>\r\n            </PaginationItem>\r\n          }\r\n        </Pagination>\r\n      </nav>\r\n    </Col>)\r\n  }\r\n}\r\n\r\nRestPagination = withRouter(RestPagination);\r\nexport default RestPagination;\r\n","import {createResource} from '@brigad/redux-rest-easy';\r\nimport {NormalizationPayload} from \"../.helpers/ResourceHelper\";\r\nimport config from \"../../../config\";\r\nimport {handleStatusCode} from \"../.helpers/handleStatusCode\";\r\nimport {requestDELETE, requestGET, requestPOST, requestPUT} from \"../.helpers/networkHelpers\";\r\nimport {DeleteNormalizer} from \"../.helpers/normalizerHelpers\";\r\n\r\n\r\nconst RESOURCE_NAME = 'slides';\r\n\r\nconst Normalizer = new NormalizationPayload(RESOURCE_NAME);\r\n\r\n\r\nexport const SlidesResource = createResource(RESOURCE_NAME)({\r\n  createSlide: {\r\n    method: 'POST',\r\n    url: `${config.base}${config.api.slides}`,\r\n    normalizer: (payload, resources, urlParams) => {\r\n      if (!payload ) {\r\n        return null\r\n      }\r\n      if (payload.errors || payload.message) {\r\n        return Normalizer.normalizeError(payload);\r\n      }\r\n\r\n      if (resources.hasOwnProperty(RESOURCE_NAME)) {\r\n        return Normalizer.mergeResourceAndPayload(resources, [payload])\r\n      } else {\r\n        return Normalizer.payloadToResource([payload]);\r\n      }\r\n    },\r\n    networkHelpers: {\r\n      handleStatusCode,\r\n      requestPOST: requestPOST\r\n    },\r\n  },\r\n  deleteSlide: {\r\n    method: 'DELETE',\r\n    url: `${config.base}${config.api.slides}/::id`,\r\n    normalizer: DeleteNormalizer(Normalizer),\r\n    networkHelpers: {\r\n      handleStatusCode,\r\n      requestDELETE: requestDELETE,\r\n    },\r\n  },\r\n  getSlide: {\r\n    method: 'GET',\r\n    url: `${config.base}${config.api.slides}/::id`,\r\n    normalizer: (payload) => Normalizer.payloadToResource([payload]),\r\n    networkHelpers: {\r\n      handleStatusCode,\r\n      requestGET: requestGET,\r\n    },\r\n  },\r\n  getSlides: {\r\n    method: 'GET',\r\n    url: `${config.base}${config.api.slides}`,\r\n    normalizer: (payload) => {\r\n      if (!payload && payload.error) {\r\n        return null;\r\n      }\r\n      if (Array.isArray(payload)) {\r\n        return Normalizer.payloadToResource(payload);\r\n      } else {\r\n        return Normalizer.payloadToResource(payload.data, payload);\r\n      }\r\n    },\r\n    networkHelpers: {\r\n      handleStatusCode,\r\n      requestGET: requestGET,\r\n    },\r\n  },\r\n  updateSlide: {\r\n    method: 'PUT',\r\n    url: `${config.base}${config.api.slides}/::id`,\r\n    normalizer: (payload, resources) => {\r\n      if (payload.errors) {\r\n        return Normalizer.normalizeError(payload);\r\n      }\r\n      if (payload) {\r\n        return Normalizer.updateResource(resources, payload);\r\n      }\r\n      return resources;\r\n    },\r\n    networkHelpers: {\r\n      handleStatusCode,\r\n      requestPUT: requestPUT,\r\n    },\r\n  },\r\n});\r\n\r\n\r\nconst {\r\n  actions: {\r\n    createSlide: {\r\n      perform: CreateSlideAction,\r\n    },\r\n    deleteSlide: {\r\n      perform: DeleteSlideAction,\r\n    },\r\n    getSlide: {\r\n      perform: GetSlideAction,\r\n    },\r\n    getSlides: {\r\n      perform: GetSlidesAction,\r\n    },\r\n    updateSlide: {\r\n      perform: UpdateSlideAction,\r\n    },\r\n  },\r\n  selectors: {\r\n    resource: {\r\n      getResource: GetSlides,\r\n      getResourceById: GetSlideById,\r\n    },\r\n    createSlide: {\r\n      request: {\r\n        getResource: CreateSlideGetResource,\r\n        isPerforming: isRetrievingCreateSlide,\r\n      }\r\n    },\r\n    deleteSlide: {\r\n      request: {\r\n        getResource: DeleteSlideGetResource,\r\n      }\r\n    },\r\n    getSlide: {\r\n      request: {\r\n        getResource: GetSlideGetResource,\r\n        isPerforming: isRetrievingGetSlide,\r\n      }\r\n    },\r\n    getSlides: {\r\n      request: {\r\n        getResource: GetSlidesGetResource,\r\n        isPerforming: isRetrievingGetSlides,\r\n      }\r\n    },\r\n    updateSlide: {\r\n      request: {\r\n        getResource: UpdateSlideGetResource,\r\n        isPerforming: isRetrievingUpdateSlide,\r\n      }\r\n    },\r\n  }\r\n} = SlidesResource;\r\n\r\nexport {\r\n  CreateSlideAction,\r\n  DeleteSlideAction,\r\n  GetSlideAction,\r\n  GetSlidesAction,\r\n  UpdateSlideAction,\r\n\r\n  CreateSlideGetResource,\r\n  DeleteSlideGetResource,\r\n  GetSlideGetResource,\r\n  GetSlidesGetResource,\r\n  UpdateSlideGetResource,\r\n  isRetrievingGetSlide,\r\n  isRetrievingGetSlides,\r\n  GetSlides,\r\n  GetSlideById,\r\n\r\n  isRetrievingUpdateSlide,\r\n  isRetrievingCreateSlide,\r\n}\r\n","import React from 'react';\r\nimport {Badge, Button, Card, CardBlock, CardFooter, CardText} from \"reactstrap\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nexport const SlideItem = ({body, id, onDelete, status}) => (<Card>\r\n  <CardBlock>\r\n    <CardText className={'slides_item'}>\r\n      {ReactHtmlParser(body)}\r\n    </CardText>\r\n  </CardBlock>\r\n  <CardFooter className=\"text-muted\">\r\n    <Button\r\n      color=\"warning\"\r\n    >\r\n      <Link\r\n        to={`/slides-editor/${id}`}\r\n      >\r\n        Изменить\r\n      </Link>\r\n    </Button>\r\n    <Button\r\n      color=\"danger\"\r\n      onClick={() => {\r\n        onDelete && onDelete(id)\r\n      }}\r\n    >\r\n      Удалить\r\n    </Button>\r\n    <Badge\r\n      color=\"success\"\r\n      className=\"float-right\"\r\n    >\r\n      {status}\r\n    </Badge>\r\n  </CardFooter>\r\n</Card>);\r\n\r\nexport default SlideItem;\r\n","import React, {Component} from 'react';\r\nimport {\r\n  Col,\r\n  Row\r\n} from \"reactstrap\";\r\nimport {connect as connectRestEasy} from \"@brigad/redux-rest-easy\";\r\nimport '../slides.css';\r\n\r\nimport {\r\n  DeleteSlideAction,\r\n  GetSlides,\r\n  GetSlidesAction,\r\n  isRetrievingGetSlides\r\n} from \"../../../store/reduxRestEasy/Slides/SlidesResource\";\r\nimport RestPagination from \"../../../components/RestPagination/RestPagination\";\r\nimport SlideItem from \"../../../components/SlideItem/SlideItem\";\r\n\r\nexport class SlideList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {}\r\n  }\r\n\r\n  componentWillMount() {\r\n    const {location} = this.props;\r\n    const result = location.search.match(/[0-9]/g);\r\n    if(result && result.length){\r\n      this.onGetSlides(result[0]);\r\n    } else {\r\n      this.onGetSlides();\r\n    }\r\n  }\r\n\r\n  onGetSlides = (id = 1) => {\r\n    return this.props.GetSlidesAction({\r\n      query: {page: id}\r\n    })\r\n  };\r\n\r\n  onDeleteSlide = (id) => {\r\n    return this.props.DeleteSlideAction({\r\n      urlParams: {\r\n        id: id,\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {slides, isRetrievingGetSlides} = this.props;\r\n    if (isRetrievingGetSlides && !slides) {\r\n      return (<div>Loading...</div>);\r\n    }\r\n    if (!slides.length) {\r\n      return null;\r\n    }\r\n    const data = Object.values(slides[0]);\r\n    const metaData = slides[1];\r\n\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n\r\n          {\r\n            data && data.map((item, index) => (\r\n              <Col xs=\"12\" key={index}>\r\n                <SlideItem\r\n                  {...item}\r\n                  onDelete={this.onDeleteSlide}\r\n                />\r\n              </Col>\r\n            ))\r\n          }\r\n\r\n          <RestPagination\r\n            metaData={metaData}\r\n            onMovePage={this.onGetSlides}\r\n          />\r\n        </Row>\r\n      </div>)\r\n  }\r\n}\r\n\r\nSlideList = connectRestEasy(\r\n  (state, ownProps) => ({\r\n    slides: GetSlides(state, ownProps),\r\n    isRetrievingGetSlides: isRetrievingGetSlides(state, ownProps),\r\n  }),\r\n  dispatch => ({\r\n    DeleteSlideAction: (options) => dispatch(DeleteSlideAction(options)),\r\n    GetSlidesAction: (options) => dispatch(GetSlidesAction(options)),\r\n  })\r\n)(SlideList);\r\nexport default SlideList;\r\n"],"sourceRoot":""}