{"version":3,"sources":["components/Form/FormInputColor.js","views/Tile/View/TileEditor/Components/TileEditorForm/TileEditorForm.js","store/reduxRestEasy/TileTypes/TileTypesResource.js","views/Tile/View/TileEditor/index.js","helpers/hasOwnProperty.js","config.js","store/reduxRestEasy/.helpers/networkHelpers.js","store/reduxRestEasy/.helpers/handleStatusCode.js","store/reduxRestEasy/.helpers/ResourceHelper.js","store/reduxRestEasy/.helpers/normalizerHelpers.js","components/TextField/TextField.js","helpers/GetMessageFromIntl.js","helpers/normalizeSubmissionError.js","helpers/createSubmitHandler.js","components/Form/FormSelect.js","helpers/dateToFormat.js","components/FormDateTimePicker/FormDateTimePicker.js","../node_modules/reactstrap/es/CardBlock.js","store/reduxRestEasy/Tiles/TilesResource.js"],"names":["FormInputColor","_ref","input","label","type","_ref$meta","meta","touched","error","react_default","a","createElement","className","FormGroup","Label","Input","Object","assign","style","padding","height","TileEditorForm","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","onSubmit","asyncToGenerator","regenerator_default","mark","_callee","values","_this$props","history","UpdateTileAction","CreateTileAction","wrap","_context","prev","next","console","log","props","hasOwnProperty","createSubmitHandler","body","urlParams","id","push","stop","_x","inherits","createClass","key","value","_this$props2","handleSubmit","tileTypes","pristine","reset","submitting","Row","Col","xs","Card","CardHeader","index_es","CardBlock","md","lg","Field","name","component","TextField","defaultMessage","FormSelect","valueKey","data","FormDateTimePicker","Alert","color","CardFooter","Button","onClick","Component","defaultProps","validate","_ref2","intl","connect","state","getFormValues","reduxForm","form","connectRestEasy","ownProps","isRetrievingCreateTile","isRetrievingUpdateTile","dispatch","options","withRouter","Normalizer","NormalizationPayload","TileTypesResource","createResource","createTileType","method","url","config","base","api","tile_types","normalizer","payload","resources","errors","normalizeError","mergeResourceAndPayload","payloadToResource","networkHelpers","handleStatusCode","requestPOST","deleteTileType","DeleteNormalizer","requestDELETE","getTileType","requestGET","getTileTypes","isArray","map","item","index","updateTileType","updateResource","requestPUT","actions","GetTileTypesAction","perform","selectors","resource","GetTileTypes","getResource","getResourceById","request","isPerforming","isRetrievingGetTileTypes","TileEditor","params","match","GetTileAction","tile","isRetrievingGetTile","Preloader","initialValues","TileEditorForm_TileEditorForm","GetTileById","TILES_RESOURCE_NAME","__webpack_require__","d","__webpack_exports__","obj","prop","prototype","window","location","hostname","login","logout","posts","post","categories","category","slides","tiles","nomenclature","nomenclatures","nomenclatureCharacteristic","typesOfNomenclature","fileupload","static_pages","url_alias","feedback","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","credentials","headers","Accept","Content-type","JSON","stringify","_history__WEBPACK_IMPORTED_MODULE_0__","response","status","reload","resourceName","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","forEach","metadata","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","removePayloadFromResources","payloadID","filter","warn","_this$resourceName","undefined","entities","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","result","message","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","react_intl__WEBPACK_IMPORTED_MODULE_8__","placeholder","required","icon","addonType","valid","GetMessageFromIntl","_hasOwnProperty__WEBPACK_IMPORTED_MODULE_0__","messages","formatMessage","e","normalizeSubmissionError","_error","fetchAction","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","normalizedPayload","sent","SubmissionError","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","defaultValue","onChange","_this$props2$meta","labelKey","react__WEBPACK_IMPORTED_MODULE_5___default","reactstrap__WEBPACK_IMPORTED_MODULE_8__","selected","reactstrap__WEBPACK_IMPORTED_MODULE_9__","react_intl__WEBPACK_IMPORTED_MODULE_10__","injectIntl","dateToFormat","date_fns_esm__WEBPACK_IMPORTED_MODULE_0__","date","format","handleChange","bind","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__","react__WEBPACK_IMPORTED_MODULE_6___default","react_datepicker__WEBPACK_IMPORTED_MODULE_9__","locale","minDate","Date","_CardBody__WEBPACK_IMPORTED_MODULE_1__","_utils__WEBPACK_IMPORTED_MODULE_2__","DeleteTileAction","GetTilesAction","isRetrievingGetTiles","GetTiles","_brigad_redux_rest_easy__WEBPACK_IMPORTED_MODULE_0__","_helpers_ResourceHelper__WEBPACK_IMPORTED_MODULE_1__","_config__WEBPACK_IMPORTED_MODULE_2__","_helpers_handleStatusCode__WEBPACK_IMPORTED_MODULE_3__","_helpers_networkHelpers__WEBPACK_IMPORTED_MODULE_4__","_helpers_normalizerHelpers__WEBPACK_IMPORTED_MODULE_5__","_helpers_hasOwnProperty__WEBPACK_IMPORTED_MODULE_6__","TilesResource","createTile","query","otherArgs","deleteTile","getTile","getTiles","updateTile"],"mappings":"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","file":"static/js/25.212397ee.chunk.js","sourcesContent":["import React from 'react';\nimport {FormGroup, Input, Label} from \"reactstrap\";\n\nexport const FormInputColor = ({input, label, type, meta: {touched, error}}) => {\n    return (\n        <div className=\"controls\">\n            <FormGroup>\n                <Label>{label}</Label>\n                <Input style={{    padding: 'inherit',\n                    height: '35px'}} type={type} {...input}/>\n            </FormGroup>\n            <p className=\"help-block\">{touched && error && <span>{error}</span>}</p>\n        </div>\n    )\n};\n\nexport default FormInputColor;\n","import React, {Component} from 'react';\nimport {Col, FormGroup, Row, Button, Alert, Card, CardHeader, CardBlock, CardFooter} from \"reactstrap\";\nimport {Field, getFormValues, reduxForm, SubmissionError} from \"redux-form\";\nimport FormSelect from \"../../../../../../components/Form/FormSelect\";\nimport FormDateTimePicker from \"../../../../../../components/FormDateTimePicker/FormDateTimePicker\";\nimport FormInputColor from \"../../../../../../components/Form/FormInputColor\";\nimport {TextField} from \"../../../../../../components/TextField/TextField\";\nimport {connect as connectRestEasy} from \"@brigad/redux-rest-easy\";\n\nimport {\n  CreateTileAction,\n  isRetrievingCreateTile, isRetrievingUpdateTile,\n  UpdateTileAction\n} from \"../../../../../../store/reduxRestEasy/Tiles/TilesResource\";\nimport {normalizeSubmissionError} from \"../../../../../../helpers/normalizeSubmissionError\";\nimport {withRouter} from \"react-router-dom\";\nimport {required} from \"../../../../../../validation/required\";\nimport {hasOwnProperty} from \"../../../../../../helpers/hasOwnProperty\";\nimport {createSubmitHandler} from \"../../../../../../helpers/createSubmitHandler\";\nimport {FormattedMessage} from \"react-intl\";\nimport {GetMessageFromIntl} from \"../../../../../../helpers/GetMessageFromIntl\";\nimport {connect} from \"react-redux\";\n\n\nexport class TileEditorForm extends Component {\n\n\n  onSubmit = async (values) => {\n    console.log('values: ', values);\n    const {history, UpdateTileAction, CreateTileAction} = this.props;\n    if (hasOwnProperty(values, 'id')) {\n      await createSubmitHandler(UpdateTileAction)({\n        body: values,\n        urlParams: {\n          id: values.id,\n        }\n      })\n    } else {\n      await createSubmitHandler(CreateTileAction)({body: values})\n    }\n    history.push('/tile-list');\n  };\n\n\n  render() {\n    const {error, handleSubmit, tileTypes, pristine,values, submitting, reset} = this.props;\n\n    return (\n      <form onSubmit={handleSubmit(this.onSubmit)}>\n        <Row>\n          <Col xs=\"12\">\n            <Card>\n              <CardHeader>\n                <strong>\n                  <FormattedMessage\n                    id={values && values.id ? \"tile.editor.title\" : \"tile.create.title\"}\n                  />\n                </strong>\n              </CardHeader>\n              <CardBlock className=\"card-body\">\n                <Row>\n                  <Col xs=\"12\" md=\"6\" lg=\"4\">\n                    <Field\n                      name=\"resource_id\"\n                      component={TextField}\n                      label={<FormattedMessage\n                        id='form.label.resource_id'\n                        defaultMessage='form.label.resource_id'\n                      />}\n                      type=\"text\"\n                    />\n                  </Col>\n                  {\n                    tileTypes &&\n                    <Col xs=\"12\" md=\"6\" lg=\"4\">\n                      <Field\n                        name=\"resource_type\"\n                        component={FormSelect}\n                        valueKey={'name'}\n                        label={<FormattedMessage\n                          id='form.label.resource_type'\n                          defaultMessage='form.label.resource_type'\n                        />}\n                        type=\"select\"\n                        data={tileTypes}\n                      />\n                    </Col>\n                  }\n                  <Col xs=\"12\" md=\"6\" lg=\"4\">\n                    <Field\n                      name=\"cols\"\n                      component={TextField}\n                      label={<FormattedMessage\n                        id='form.label.cols'\n                        defaultMessage='form.label.cols'\n                      />}\n                      type=\"text\"\n                    />\n                  </Col>\n                  <Col xs=\"12\" md=\"6\" lg=\"4\">\n                    <Field\n                      name=\"background_color\"\n                      component={FormInputColor}\n                      label={<FormattedMessage\n                        id='form.label.background_color'\n                        defaultMessage='form.label.background_color'\n                      />}\n                      type=\"color\"\n                    />\n                  </Col>\n                  <Col xs=\"12\" md=\"6\" lg=\"4\">\n                    <Field\n                      name=\"public_at\"\n                      label={<FormattedMessage\n                        id='form.label.public_at'\n                        defaultMessage='form.label.public_at'\n                      />}\n                      component={FormDateTimePicker}\n                    />\n                  </Col>\n                </Row>\n\n                {\n                  error &&\n                  <Row>\n                    <Col xs=\"12\">\n                      <Alert color=\"danger\">\n                        <FormattedMessage\n                          id={error}\n                        />\n                      </Alert>\n                    </Col>\n                  </Row>\n\n                }\n              </CardBlock>\n              <CardFooter>\n                <Button\n                  color=\"primary\"\n                  type=\"submit\"\n                  className=\"px-4\"\n                  // disabled={pristine || submitting}\n                >\n                  <FormattedMessage\n                    id='button.save'\n                    defaultMessage='button.save'\n                  />\n                </Button>\n                <Button\n                  type=\"reset\"\n                  onClick={reset}\n                  color=\"danger\"\n                >\n                  <i className=\"fa fa-ban\"/>\n                  <FormattedMessage\n                    id=\"button.reset\"\n                    defaultMessage=\"button.reset\"\n                  />\n                </Button>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n\n\n      </form>\n    )\n  }\n};\n\nTileEditorForm.propTypes = {};\n\nTileEditorForm.defaultProps = {};\n\n\n\nconst validate = (values, {intl}) => {\n  const errors = {};\n  // if (!values.name) {\n  //   errors.name = GetMessageFromIntl(intl, 'validation.required');\n  // }\n  return errors;\n}\n\nTileEditorForm = connect(state => ({\n  values: getFormValues('TileEditorForm')(state),\n  validate\n}))(TileEditorForm);\n\nTileEditorForm = reduxForm({\n  form: 'TileEditorForm'\n})(TileEditorForm);\n\nTileEditorForm = connectRestEasy(\n  (state, ownProps) => ({\n    isRetrievingCreateTile: isRetrievingCreateTile(state, ownProps),\n    isRetrievingUpdateTile: isRetrievingUpdateTile(state, ownProps),\n  }),\n  dispatch => ({\n    CreateTileAction: (options) => dispatch(CreateTileAction(options)),\n    UpdateTileAction: (options) => dispatch(UpdateTileAction(options)),\n  })\n)(TileEditorForm);\n\nTileEditorForm = withRouter(TileEditorForm);\n\n\nexport default TileEditorForm;\n","import {createResource} from '@brigad/redux-rest-easy';\nimport {NormalizationPayload} from \"../.helpers/ResourceHelper\";\nimport config from \"../../../config\";\nimport {handleStatusCode} from \"../.helpers/handleStatusCode\";\nimport {requestDELETE, requestGET, requestPOST, requestPUT} from \"../.helpers/networkHelpers\";\nimport {DeleteNormalizer} from \"../.helpers/normalizerHelpers\";\nimport {hasOwnProperty} from \"../../../helpers/hasOwnProperty\";\n\n\nexport const TILE_TYPES_RESOURCE_NAME = 'tileTypes';\n\nconst Normalizer = new NormalizationPayload(TILE_TYPES_RESOURCE_NAME);\n\n\nexport const TileTypesResource = createResource(TILE_TYPES_RESOURCE_NAME)({\n  createTileType: {\n    method: 'POST',\n    url: `${config.base}${config.api.tile_types}`,\n    normalizer: (payload, resources) => {\n      if (!payload) {\n        return null\n      }\n      if (payload.errors) {\n        return Normalizer.normalizeError(payload);\n      }\n\n      if (hasOwnProperty(resources,TILE_TYPES_RESOURCE_NAME)) {\n        return Normalizer.mergeResourceAndPayload(resources, [payload])\n      } else {\n        return Normalizer.payloadToResource([payload]);\n      }\n    },\n    networkHelpers: {\n      handleStatusCode,\n      requestPOST: requestPOST\n    },\n  },\n  deleteTileType: {\n    method: 'DELETE',\n    url: `${config.base}${config.api.tile_types}/::id`,\n    normalizer: DeleteNormalizer(Normalizer),\n\n    networkHelpers: {\n      handleStatusCode,\n      requestDELETE: requestDELETE,\n    },\n  },\n  getTileType: {\n    method: 'GET',\n    url: `${config.base}${config.api.tile_types}/::id`,\n    normalizer: (payload) => Normalizer.payloadToResource([payload]),\n    networkHelpers: {\n      handleStatusCode,\n      requestGET: requestGET,\n    },\n  },\n  getTileTypes: {\n    method: 'GET',\n    url: `${config.base}${config.api.tile_types}`,\n    normalizer: (payload) => {\n      if (!payload && payload.error) {\n        return null;\n      }\n      if (Array.isArray(payload)) {\n        return Normalizer.payloadToResource(payload.map((item,index) => ({id: index, name: item})));\n      } else {\n        return Normalizer.payloadToResource(payload.data, payload);\n      }\n    },\n    networkHelpers: {\n      handleStatusCode,\n      requestGET: requestGET,\n    },\n  },\n  updateTileType: {\n    method: 'PUT',\n    url: `${config.base}${config.api.tile_types}/::id`,\n    normalizer: (payload, resources) => {\n      if (payload.errors) {\n        return Normalizer.normalizeError(payload);\n      }\n      if (payload) {\n        return Normalizer.updateResource(resources, payload);\n      }\n      return resources;\n    },\n    networkHelpers: {\n      handleStatusCode,\n      requestPUT: requestPUT,\n    },\n  },\n});\n\n\nconst {\n  actions: {\n    createTileType: {\n      perform: CreateTileTypeAction,\n    },\n    deleteTileType: {\n      perform: DeleteTileTypeAction,\n    },\n    getTileType: {\n      perform: GetTileTypeAction,\n    },\n    getTileTypes: {\n      perform: GetTileTypesAction,\n    },\n    updateTileType: {\n      perform: UpdateTileTypeAction,\n    },\n  },\n  selectors: {\n    resource: {\n      getResource: GetTileTypes,\n      getResourceById: GetTileTypeById,\n    },\n    createTileType: {\n      request: {\n        getResource: CreateTileTypeGetResource,\n        isPerforming: isRetrievingCreateTileType,\n      }\n    },\n    deleteTileType: {\n      request: {\n        getResource: DeleteTileTypeGetResource,\n      }\n    },\n    getTileType: {\n      request: {\n        getResource: GetTileTypeGetResource,\n        isPerforming: isRetrievingGetTileType,\n      }\n    },\n    getTileTypes: {\n      request: {\n        getResource: GetTileTypesGetResource,\n        isPerforming: isRetrievingGetTileTypes,\n      }\n    },\n    updateTileType: {\n      request: {\n        getResource: UpdateTileTypeGetResource,\n        isPerforming: isRetrievingUpdateTileType,\n      }\n    },\n  }\n} = TileTypesResource;\n\nexport {\n  CreateTileTypeAction,\n  DeleteTileTypeAction,\n  GetTileTypeAction,\n  GetTileTypesAction,\n  UpdateTileTypeAction,\n\n  CreateTileTypeGetResource,\n  DeleteTileTypeGetResource,\n  GetTileTypeGetResource,\n  GetTileTypesGetResource,\n  UpdateTileTypeGetResource,\n  isRetrievingGetTileType,\n  isRetrievingGetTileTypes,\n  GetTileTypes,\n  GetTileTypeById,\n\n  isRetrievingUpdateTileType,\n  isRetrievingCreateTileType,\n}\n","import React, {Component} from 'react';\nimport {TileEditorForm} from \"./Components/TileEditorForm/TileEditorForm\";\nimport {connect as connectRestEasy} from \"@brigad/redux-rest-easy\";\nimport {\n  GetTileAction,\n  GetTileById,\n  isRetrievingGetTile,\n  TILES_RESOURCE_NAME\n} from \"../../../../store/reduxRestEasy/Tiles/TilesResource\";\nimport {\n  GetTileTypes,\n  GetTileTypesAction,\n  isRetrievingGetTileTypes\n} from \"../../../../store/reduxRestEasy/TileTypes/TileTypesResource\";\nimport Preloader from \"../../../../components/Preloader/Preloader\";\n\nexport class TileEditor extends Component {\n\n  componentWillMount() {\n    const {match: {params}, GetTileAction, GetTileTypesAction} = this.props;\n    if (params && params.id) {\n      GetTileAction({\n        urlParams: {\n          id: params.id,\n        }\n      });\n    }\n    GetTileTypesAction();\n  }\n\n\n  render() {\n    const {\n      tile,\n      tileTypes,\n      match: {params},\n      isRetrievingGetTile,\n      isRetrievingGetTileTypes\n    } = this.props;\n    if (isRetrievingGetTile || isRetrievingGetTileTypes) {\n      return (<Preloader/>)\n    }\n    if (!tileTypes.length) {\n      return null;\n    }\n    let initialValues = {\n      initialValues: params && params.id && tile(params.id)\n    };\n    const data = tileTypes && Object.values(tileTypes[0]);\n    return (\n      <div className=\"animated fadeIn\">\n        <TileEditorForm tileTypes={data} {...initialValues}/>\n      </div>\n    )\n  }\n}\n\nTileEditor = connectRestEasy(\n  (state, ownProps) => ({\n    tileTypes: GetTileTypes(state, ownProps),\n    tile: (id) => {\n      const data = GetTileById(state, TILES_RESOURCE_NAME, id);\n      console.log(data);\n      if (data) {\n        return data[id];\n      }\n      return null;\n    },\n    isRetrievingGetTileTypes: isRetrievingGetTileTypes(state, ownProps),\n    isRetrievingGetTile: isRetrievingGetTile(state, ownProps),\n  }),\n  dispatch => ({\n    GetTileAction: (options) => dispatch(GetTileAction(options)),\n    GetTileTypesAction: (options) => dispatch(GetTileTypesAction(options)),\n  })\n)(TileEditor);\n\nexport default TileEditor;\n","export const hasOwnProperty = (obj, prop) => {\n  if (!obj || !prop) {\n    return false\n  }\n  return Object.prototype.hasOwnProperty.call(obj, prop)\n};\n","\n\nlet base = '';\n\nswitch (window.location.hostname) {\n  case ('localhost'):{\n    base = 'https://dev.strikepro.ru';\n    break;\n  }\n  case ('admin.strikepro.ru'):{\n    base = 'https://dev.strikepro.ru';\n    break;\n  }\n  case ('strike.localhost'):{\n    base = 'http://strike.localhost';\n    break;\n  }\n}\n\n\n\nexport default {\n  base,\n  api: {\n    login: '/dashboard/auth/login',\n    logout: '/dashboard/auth/logout',\n\n    posts: '/dashboard/blog/posts',\n    post: '/dashboard/blog/post',\n\n    categories: '/dashboard/blog/categories',\n    category: '/dashboard/blog/category',\n\n    slides: '/dashboard/slides',\n\n    tiles: '/dashboard/mainfeeds',\n\n    tile_types: '/dashboard/mainfeed/types',\n    tile: '/dashboard/mainfeed',\n\n    nomenclature: '/dashboard/nomenclature',\n    nomenclatures: '/dashboard/nomenclatures',\n\n    nomenclatureCharacteristic: '/dashboard/nomenclature/characteristic',\n    typesOfNomenclature: '/dashboard/nomenclature/characteristic',\n    fileupload: '/dashboard/fileupload',\n\n    static_pages: '/dashboard/pages',\n    url_alias: '/dashboard/url_alias',\n    feedback: '/dashboard/feedback',\n  }\n}\n","export const requestPOST = (body) => {\n  return {\n    method: 'POST',\n    credentials: 'include',\n    headers: {\n      Accept: 'application/json',\n      'Content-type': 'application/json',\n    },\n    ...(body? {body: JSON.stringify(body)} : {})\n\n  }\n};\n\nexport const requestGET = () => {\n  return {\n    method: 'GET',\n    credentials: 'include',\n    headers: {\n      Accept: 'application/json',\n      'Content-type': 'application/json',\n    }\n  }\n};\n\nexport const requestDELETE = () => {\n  return {\n    method: 'DELETE',\n    credentials: 'include',\n    headers: {\n      Accept: 'application/json',\n      'Content-type': 'application/json',\n    }\n  }\n};\n\nexport const requestPUT = (body) => {\n  return {\n    method: 'PUT',\n    credentials: 'include',\n    headers: {\n      Accept: 'application/json',\n      'Content-type': 'application/json',\n    },\n    body: JSON.stringify(body),\n  }\n};\n","import history from \"../../../history\";\n\n\nexport const handleStatusCode = (response) => {\n  const {status} = response;\n  if (status === 401) {\n    history.push('#/login');\n    window.location.reload();\n    return response\n  }\n\n  if (status === 404) {\n    history.push('#/404');\n    window.location.reload();\n    return response\n  }\n\n\n  return response\n};\n\nexport default handleStatusCode;\n","export class NormalizationPayload {\n\n  resourceName = null;\n\n  constructor(resourceName) {\n    this.resourceName = resourceName;\n  }\n\n  /**\n   * @param {object} resources - объект с исходными ресурсами\n   * @param {array} payload - массив с новыми ресурсами\n   * @desc метод для добавления в существующие ресурсы новых ресурсов\n   * */\n  mergeResourceAndPayload = (resources, payload) => {\n    payload.forEach((item) => {\n      resources[this.resourceName][this.resourceName][item.id] = item;\n      resources[this.resourceName].metadata = {\n        data: [...resources[this.resourceName].metadata.data, item.id],\n      };\n    });\n    return resources;\n  };\n\n  /**\n   * @param {array} resources\n   * @param {string} payloadID\n   * @desc\n   * */\n  removePayloadFromResources = (resources, payloadID) => {\n    if (!payloadID) {\n      console.warn('payloadID undefined');\n      return resources;\n    }\n    console.log('removePayloadFromResources: ', this, resources, payloadID);\n    delete resources[this.resourceName][this.resourceName][payloadID];\n    resources[this.resourceName].metadata.data = resources[this.resourceName]\n      .metadata.data.filter(item => item !== payloadID);\n    return resources;\n  };\n\n  /**\n   * @param {array} payload\n   * @param {object} metadata\n   * @desc\n   * */\n  payloadToResource = (payload, metadata = {}) => {\n    const data = {\n      entities: {\n        [this.resourceName]: {\n          [this.resourceName]: {},\n          metadata: {}\n        },\n      },\n      result: []\n    };\n    if (payload) {\n      payload.forEach((item) => {\n        data.result.push(item.id);\n        data.entities[this.resourceName][this.resourceName][item.id] = item;\n      });\n    }\n    data.entities[this.resourceName].metadata = {\n      ...metadata,\n      data: data.result,\n    };\n    return data;\n  };\n\n  /**\n   * @param {object} resources - объект с исходными ресурсами\n   * @param {object} payload - массив с новыми ресурсами\n   * @desc метод для добавления в существующие ресурсы новых ресурсов\n   * */\n  updateResource = (resources, payload) => {\n    resources[this.resourceName][this.resourceName][payload.id] = payload;\n    return resources;\n  };\n\n  /**\n   * @param {object} payload\n   * @param {object} payload.errors\n   * @param {array} payload.errors.propName\n   * @param {string} payload.message\n   * */\n  normalizeError = (payload) => {\n    if(!payload.errors){\n      payload.errors = {};\n    }\n    return {\n      entities: {\n        ...payload,\n        message: [payload.message]\n      },\n      result: {errors: payload}\n    };\n  }\n\n}\n","import {hasOwnProperty} from \"../../../helpers/hasOwnProperty\";\n\n\nexport const DeleteNormalizer = (Normalizer)=> (payload, resources, urlParams,) => {\n  if (payload.errors) {\n    return Normalizer.normalizeError(payload);\n  }\n  if (payload) {\n    return Normalizer.removePayloadFromResources(resources, urlParams.id);\n  }\n  return resources;\n};\n\n\nexport const CreateNormalizer = (Normalizer) => (payload, resources, urlParams) => {\n  if (!payload ) {\n    return null\n  }\n  if (payload.errors || payload.message) {\n    return Normalizer.normalizeError(payload);\n  }\n\n  if (hasOwnProperty(resources,Normalizer.resourceName)) {\n    return Normalizer.mergeResourceAndPayload(resources, [payload])\n  } else {\n    return Normalizer.payloadToResource([payload]);\n  }\n};\n\nexport const UpdateNormalizer = (Normalizer) => (payload, resources) => {\n  if (payload.errors || payload.message) {\n    return Normalizer.normalizeError(payload);\n  }\n  if (payload) {\n    return Normalizer.updateResource(resources, payload);\n  }\n  return resources;\n};\n\nexport const GetListNormalizer = (Normalizer) => (payload) => {\n  if (!payload && payload.error) {\n    return null;\n  }\n  if (Array.isArray(payload)) {\n    return Normalizer.payloadToResource(payload);\n  } else {\n    return Normalizer.payloadToResource(payload.data, payload);\n  }\n};\n\nexport const GetByIdNormalizer = (Normalizer) => (payload) => Normalizer.payloadToResource([payload])\n","import React from \"react\";\nimport {FormFeedback, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, Label} from \"reactstrap\";\nimport {FormattedMessage} from \"react-intl\";\n\nexport const TextField = ({input, label, type, placeholder, required, icon, meta: {touched, error}}) => {\n  return (\n    <FormGroup className={touched ? error ? '' : 'was-validated' : ''}>\n      {\n        label && <Label>{label}</Label>\n      }\n      <InputGroup className=\"mb-3\">\n        {\n          icon &&\n          <InputGroupAddon addonType=\"prepend\">\n            <InputGroupText>\n              <i className={icon}/>\n            </InputGroupText>\n          </InputGroupAddon>\n        }\n\n        <Input\n          {...input}\n          type={type}\n          valid={touched ? !error : false}\n          className={touched ? error ? 'form-control-warning is-invalid' : '' : ''}\n          placeholder={placeholder}\n          required={required}/>\n        <FormFeedback\n          valid={touched ? !error : false}\n          className=\"help-block\"\n        >\n          {\n            error && <FormattedMessage\n              id={error}\n            />\n          }\n        </FormFeedback>\n      </InputGroup>\n\n    </FormGroup>)\n}\n\nexport default TextField;\n","import {hasOwnProperty} from \"./hasOwnProperty\";\n\nexport const GetMessageFromIntl = (intl, key, values) => {\n  if (key && intl && intl.messages) {\n    try {\n      if (values && typeof key === 'object') {\n        return intl.formatMessage(key, values)\n      }\n    } catch (e) {\n      console.log(e);\n    }\n    if (hasOwnProperty(intl.messages, key)) {\n      return intl.messages[key]\n    }\n  }\n  return key;\n};\n\nexport default GetMessageFromIntl;\n\n","\n/**\n * @param {object} error\n * @param {object} error.errors\n * @param {array} error.message\n * */\nexport const normalizeSubmissionError = (error) => {\n  const data = {\n    _error: error.message ? error.message[0] : null,\n  };\n  for (let prop in error.errors) {\n    if (Array.isArray(error.errors[prop])) {\n      data[prop] = error.errors[prop][0];\n    }\n  }\n  return data;\n}\n","import {SubmissionError} from \"redux-form\";\nimport {normalizeSubmissionError} from \"./normalizeSubmissionError\";\n\nexport const createSubmitHandler = (fetchAction) => async (options) => {\n  const {normalizedPayload, error,} = await fetchAction(options);\n  if (normalizedPayload && normalizedPayload.errors || error) {\n    throw new SubmissionError(normalizeSubmissionError(normalizedPayload ||\n      {\n        message: [error.message],\n        errors: {}\n      }));\n  }\n};\n\nexport default createSubmitHandler;\n","import React, {Component} from 'react';\nimport {Alert, FormGroup, Input, Label} from \"reactstrap\";\nimport {FormattedMessage, injectIntl} from \"react-intl\";\nimport {GetMessageFromIntl} from \"../../helpers/GetMessageFromIntl\";\n\n\nexport class FormSelect extends Component {\n\n  static defaultProps = {\n    valueKey: 'id',\n    labelKey: 'name',\n  };\n\n  componentDidMount() {\n    const {\n      input,\n      defaultValue,\n    } = this.props;\n\n    if (!input.value && defaultValue) {\n      input.onChange(defaultValue);\n    }\n\n  }\n\n  render() {\n    const {\n      input,\n      label,\n      type,\n      data,\n      meta: {touched, error},\n      valueKey,\n      labelKey,\n      intl,\n    } = this.props;\n    return (\n      <FormGroup>\n        <Label>{label}</Label>\n        <Input type={type} {...input} >\n          <option>\n            {GetMessageFromIntl(intl, \"form.select.placeholder\")}\n          </option>\n          {\n            Array.isArray(data) && data.map((item, index) => (<option\n              key={index}\n              selected={item[valueKey] === input.value}\n              value={item[valueKey]}>\n              {item[labelKey]}\n            </option>))\n          }\n        </Input>\n        {\n          touched && error &&\n          <Alert color=\"danger\">\n            {\n              error &&\n              <FormattedMessage\n                id={error}\n              />\n            }\n          </Alert>\n\n        }\n      </FormGroup>\n    );\n  }\n}\n\n\nexport default injectIntl(FormSelect);\n","import {format} from 'date-fns/esm'\n\nexport const DEFAULT_DATE_FORMAT = \"yyyy-MM-d h:mm:ss\";\n\nexport const dateToFormat = (date) => {\n  return format(date, DEFAULT_DATE_FORMAT);\n};\n","import React, {Component} from 'react';\nimport {FormGroup, Label} from \"reactstrap\";\nimport DatePicker  from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {dateToFormat} from \"../../helpers/dateToFormat\";\n\n\n\n\nexport class FormDateTimePicker extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n\n  handleChange(value) {\n    const {input: {onChange}} = this.props;\n    return onChange(dateToFormat(value));\n  }\n\n  render() {\n    const {label, input: {value}} = this.props;\n\n    return (\n      <div className=\"controls\">\n        <FormGroup>\n          <Label>{label}</Label>\n          <DatePicker\n            locale={'ru'}\n            minDate={new Date()}\n            selected={new Date(value || new Date() )}\n            onChange={this.handleChange}\n            className={'form-control full-width'}\n          />\n        </FormGroup>\n      </div>\n    );\n  }\n\n}\n\n\nexport default FormDateTimePicker;\n","import React from 'react';\nimport CardBody from './CardBody';\nimport { warnOnce } from './utils';\nexport default function CardBlock(props) {\n  warnOnce('The \"CardBlock\" component has been deprecated.\\nPlease use component \"CardBody\".');\n  return React.createElement(CardBody, props);\n}","import {createResource} from '@brigad/redux-rest-easy';\nimport {NormalizationPayload} from \"../.helpers/ResourceHelper\";\nimport config from \"../../../config\";\nimport {handleStatusCode} from \"../.helpers/handleStatusCode\";\nimport {requestDELETE, requestGET, requestPOST, requestPUT} from \"../.helpers/networkHelpers\";\nimport {DeleteNormalizer} from \"../.helpers/normalizerHelpers\";\nimport {hasOwnProperty} from \"../../../helpers/hasOwnProperty\";\n\n\nexport const TILES_RESOURCE_NAME = 'tiles';\n\nconst Normalizer = new NormalizationPayload(TILES_RESOURCE_NAME);\n\n\nexport const TilesResource = createResource(TILES_RESOURCE_NAME)({\n  createTile: {\n    method: 'POST',\n    url: `${config.base}${config.api.tile}`,\n    normalizer: (payload, resources, urlParams, query, body, otherArgs) => {\n      console.log('createTile: ', payload, resources, urlParams,query, body, otherArgs);\n      if (!payload ) {\n        return null\n      }\n      if (payload.errors || payload.message) {\n        return Normalizer.normalizeError(payload);\n      }\n\n      if (hasOwnProperty(resources,TILES_RESOURCE_NAME)) {\n        return Normalizer.mergeResourceAndPayload(resources, [payload])\n      } else {\n        return Normalizer.payloadToResource([payload]);\n      }\n    },\n    networkHelpers: {\n      handleStatusCode:(response)=>{\n        handleStatusCode(response)\n      },\n      requestPOST: requestPOST\n    },\n  },\n  deleteTile: {\n    method: 'DELETE',\n    url: `${config.base}${config.api.tile}/::id`,\n    normalizer: DeleteNormalizer(Normalizer),\n    networkHelpers: {\n      handleStatusCode,\n      requestDELETE: requestDELETE,\n    },\n  },\n  getTile: {\n    method: 'GET',\n    url: `${config.base}${config.api.tile}/::id`,\n    normalizer: (payload) => Normalizer.payloadToResource([payload]),\n    networkHelpers: {\n      handleStatusCode,\n      requestGET: requestGET,\n    },\n  },\n  getTiles: {\n    method: 'GET',\n    url: `${config.base}${config.api.tiles}`,\n    normalizer: (payload) => {\n      if (!payload && payload.error) {\n        return null;\n      }\n      if (Array.isArray(payload)) {\n        return Normalizer.payloadToResource(payload);\n      } else {\n        return Normalizer.payloadToResource(payload.data, payload);\n      }\n    },\n    networkHelpers: {\n      handleStatusCode,\n      requestGET: requestGET,\n    },\n  },\n  updateTile: {\n    method: 'PUT',\n    url: `${config.base}${config.api.tile}/::id`,\n    normalizer: (payload, resources) => {\n      if (payload.errors) {\n        return Normalizer.normalizeError(payload);\n      }\n      if (payload) {\n        return Normalizer.updateResource(resources, payload);\n      }\n      return resources;\n    },\n    networkHelpers: {\n      handleStatusCode,\n      requestPUT: requestPUT,\n    },\n  },\n});\n\n\nconst {\n  actions: {\n    createTile: {\n      perform: CreateTileAction,\n    },\n    deleteTile: {\n      perform: DeleteTileAction,\n    },\n    getTile: {\n      perform: GetTileAction,\n    },\n    getTiles: {\n      perform: GetTilesAction,\n    },\n    updateTile: {\n      perform: UpdateTileAction,\n    },\n  },\n  selectors: {\n    resource: {\n      getResource: GetTiles,\n      getResourceById: GetTileById,\n    },\n    createTile: {\n      request: {\n        getResource: CreateTileGetResource,\n        isPerforming: isRetrievingCreateTile,\n      }\n    },\n    deleteTile: {\n      request: {\n        getResource: DeleteTileGetResource,\n      }\n    },\n    getTile: {\n      request: {\n        getResource: GetTileGetResource,\n        isPerforming: isRetrievingGetTile,\n      }\n    },\n    getTiles: {\n      request: {\n        getResource: GetTilesGetResource,\n        isPerforming: isRetrievingGetTiles,\n      }\n    },\n    updateTile: {\n      request: {\n        getResource: UpdateTileGetResource,\n        isPerforming: isRetrievingUpdateTile,\n      }\n    },\n  }\n} = TilesResource;\n\nexport {\n  CreateTileAction,\n  DeleteTileAction,\n  GetTileAction,\n  GetTilesAction,\n  UpdateTileAction,\n\n  CreateTileGetResource,\n  DeleteTileGetResource,\n  GetTileGetResource,\n  GetTilesGetResource,\n  UpdateTileGetResource,\n  isRetrievingGetTile,\n  isRetrievingGetTiles,\n  GetTiles,\n  GetTileById,\n\n  isRetrievingUpdateTile,\n  isRetrievingCreateTile,\n}\n"],"sourceRoot":""}