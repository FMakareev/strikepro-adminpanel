{"version":3,"sources":["components/Form/FormInputColor.js","views/Tile/View/TileEditor/Components/TileEditorForm/TileEditorForm.js","store/reduxRestEasy/TileTypes/TileTypesResource.js","views/Tile/View/TileEditor/index.js","helpers/hasOwnProperty.js","config.js","store/reduxRestEasy/.helpers/networkHelpers.js","store/reduxRestEasy/.helpers/handleStatusCode.js","store/reduxRestEasy/.helpers/ResourceHelper.js","store/reduxRestEasy/.helpers/normalizerHelpers.js","components/TextField/TextField.js","helpers/normalizeSubmissionError.js","helpers/createSubmitHandler.js","validation/required.js","components/Form/FormSelect.js","helpers/dateToFormat.js","components/FormDateTimePicker/FormDateTimePicker.js","store/reduxRestEasy/Tiles/TilesResource.js"],"names":["FormInputColor","_ref","input","label","type","_ref$meta","meta","touched","error","react_default","a","createElement","className","FormGroup","Label","Input","Object","assign","style","padding","height","TileEditorForm","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","onSubmit","asyncToGenerator","regenerator_default","mark","_callee","values","_this$props","history","UpdateTileAction","CreateTileAction","wrap","_context","prev","next","console","log","props","hasOwnProperty","createSubmitHandler","body","urlParams","id","push","stop","_x","inherits","createClass","key","value","_this$props2","handleSubmit","tileTypes","pristine","submitting","Row","Col","xs","md","lg","Field","name","component","TextField","index_es","defaultMessage","validate","required","FormSelect","valueKey","data","FormDateTimePicker","Alert","color","Button","disabled","Component","defaultProps","reduxForm","form","connectRestEasy","state","ownProps","isRetrievingCreateTile","isRetrievingUpdateTile","dispatch","options","withRouter","Normalizer","NormalizationPayload","TileTypesResource","createResource","createTileType","method","url","config","base","api","tile_types","normalizer","payload","resources","errors","normalizeError","mergeResourceAndPayload","payloadToResource","networkHelpers","handleStatusCode","requestPOST","deleteTileType","DeleteNormalizer","requestDELETE","getTileType","requestGET","getTileTypes","isArray","map","item","index","updateTileType","updateResource","requestPUT","actions","GetTileTypesAction","perform","selectors","resource","GetTileTypes","getResource","getResourceById","request","isPerforming","isRetrievingGetTileTypes","TileEditor","params","match","GetTileAction","tile","isRetrievingGetTile","Preloader","initialValues","TileEditorForm_TileEditorForm","GetTileById","TILES_RESOURCE_NAME","__webpack_require__","d","__webpack_exports__","obj","prop","prototype","window","location","hostname","login","logout","posts","post","categories","category","slides","tiles","nomenclature","nomenclatures","nomenclatureCharacteristic","typesOfNomenclature","fileupload","static_pages","url_alias","feedback","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","credentials","headers","Accept","Content-type","JSON","stringify","_history__WEBPACK_IMPORTED_MODULE_0__","response","status","reload","resourceName","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","forEach","metadata","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","removePayloadFromResources","payloadID","filter","warn","_this$resourceName","undefined","entities","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","result","message","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","placeholder","icon","addonType","valid","normalizeSubmissionError","_error","fetchAction","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_ref2","normalizedPayload","sent","SubmissionError","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","defaultValue","onChange","_this$props2$meta","labelKey","react__WEBPACK_IMPORTED_MODULE_5___default","reactstrap__WEBPACK_IMPORTED_MODULE_8__","selected","reactstrap__WEBPACK_IMPORTED_MODULE_9__","dateToFormat","date_fns_esm__WEBPACK_IMPORTED_MODULE_0__","date","format","handleChange","bind","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__","react__WEBPACK_IMPORTED_MODULE_6___default","react_datepicker__WEBPACK_IMPORTED_MODULE_9__","locale","minDate","Date","DeleteTileAction","GetTilesAction","isRetrievingGetTiles","GetTiles","_brigad_redux_rest_easy__WEBPACK_IMPORTED_MODULE_0__","_helpers_ResourceHelper__WEBPACK_IMPORTED_MODULE_1__","_config__WEBPACK_IMPORTED_MODULE_2__","_helpers_handleStatusCode__WEBPACK_IMPORTED_MODULE_3__","_helpers_networkHelpers__WEBPACK_IMPORTED_MODULE_4__","_helpers_normalizerHelpers__WEBPACK_IMPORTED_MODULE_5__","_helpers_hasOwnProperty__WEBPACK_IMPORTED_MODULE_6__","TilesResource","createTile","query","otherArgs","deleteTile","getTile","getTiles","updateTile"],"mappings":"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","file":"static/js/28.8eb5e8ec.chunk.js","sourcesContent":["import React from 'react';\nimport {FormGroup, Input, Label} from \"reactstrap\";\n\nexport const FormInputColor = ({input, label, type, meta: {touched, error}}) => {\n    return (\n        <div className=\"controls\">\n            <FormGroup>\n                <Label>{label}</Label>\n                <Input style={{    padding: 'inherit',\n                    height: '35px'}} type={type} {...input}/>\n            </FormGroup>\n            <p className=\"help-block\">{touched && error && <span>{error}</span>}</p>\n        </div>\n    )\n};\n\nexport default FormInputColor;\n","import React, {Component} from 'react';\nimport {Col, FormGroup, Row, Button, Alert} from \"reactstrap\";\nimport {Field, reduxForm, SubmissionError} from \"redux-form\";\nimport FormSelect from \"../../../../../../components/Form/FormSelect\";\nimport FormDateTimePicker from \"../../../../../../components/FormDateTimePicker/FormDateTimePicker\";\nimport FormInputColor from \"../../../../../../components/Form/FormInputColor\";\nimport {TextField} from \"../../../../../../components/TextField/TextField\";\nimport {connect as connectRestEasy} from \"@brigad/redux-rest-easy\";\n\nimport {\n  CreateTileAction,\n  isRetrievingCreateTile, isRetrievingUpdateTile,\n  UpdateTileAction\n} from \"../../../../../../store/reduxRestEasy/Tiles/TilesResource\";\nimport {normalizeSubmissionError} from \"../../../../../../helpers/normalizeSubmissionError\";\nimport {withRouter} from \"react-router-dom\";\nimport {required} from \"../../../../../../validation/required\";\nimport {hasOwnProperty} from \"../../../../../../helpers/hasOwnProperty\";\nimport {createSubmitHandler} from \"../../../../../../helpers/createSubmitHandler\";\nimport {FormattedMessage} from \"react-intl\";\n\n\nexport class TileEditorForm extends Component {\n\n\n  onSubmit = async (values) => {\n    console.log('values: ', values);\n    const {history, UpdateTileAction, CreateTileAction} = this.props;\n    if (hasOwnProperty(values, 'id')) {\n      await createSubmitHandler(UpdateTileAction)({\n        body: values,\n        urlParams: {\n          id: values.id,\n        }\n      })\n    } else {\n      await createSubmitHandler(CreateTileAction)({body: values})\n    }\n    history.push('/tile-list');\n  };\n\n\n  render() {\n    const {error, handleSubmit, tileTypes, pristine, submitting} = this.props;\n\n    return (\n      <form onSubmit={handleSubmit(this.onSubmit)}>\n        <Row>\n          <Col xs=\"12\" md=\"6\" lg=\"4\">\n            <Field\n              name=\"resource_id\"\n              component={TextField}\n              label={ <FormattedMessage\n                id='form.label.resource_id'\n                defaultMessage='form.label.resource_id'\n              />}\n              type=\"text\"\n              validate={[required]}\n            />\n          </Col>\n          {\n            tileTypes &&\n            <Col xs=\"12\" md=\"6\" lg=\"4\">\n              <Field\n                name=\"resource_type\"\n                component={FormSelect}\n                valueKey={'name'}\n                label={ <FormattedMessage\n                  id='form.label.resource_type'\n                  defaultMessage='form.label.resource_type'\n                />}\n                type=\"select\"\n                data={tileTypes}\n              />\n            </Col>\n          }\n          <Col xs=\"12\" md=\"6\" lg=\"4\">\n            <Field\n              name=\"cols\"\n              component={TextField}\n              label={ <FormattedMessage\n                id='form.label.cols'\n                defaultMessage='form.label.cols'\n              />}\n              type=\"text\"\n            />\n          </Col>\n          <Col xs=\"12\" md=\"6\" lg=\"4\">\n            <Field\n              name=\"background_color\"\n              component={FormInputColor}\n              label={ <FormattedMessage\n                id='form.label.background_color'\n                defaultMessage='form.label.background_color'\n              />}\n              type=\"color\"\n            />\n          </Col>\n          <Col xs=\"12\" md=\"6\" lg=\"4\">\n            <Field\n              name=\"public_at\"\n              label={ <FormattedMessage\n                id='form.label.public_at'\n                defaultMessage='form.label.public_at'\n              />}\n              component={FormDateTimePicker}\n            />\n          </Col>\n        </Row>\n\n        {\n          error &&\n          <Row>\n            <Col xs=\"12\">\n              <Alert color=\"danger\">\n                {error}\n              </Alert>\n            </Col>\n          </Row>\n\n        }\n\n        <Row>\n          <Col xs=\"6\">\n            <div className=\"controls\">\n              <FormGroup>\n                <Button\n                  color=\"primary\"\n                  type=\"submit\"\n                  className=\"px-4\"\n                  disabled={pristine || submitting}\n                >\n                  <FormattedMessage\n                    id='button.save'\n                    defaultMessage='button.save'\n                  />\n\n                </Button>\n              </FormGroup>\n            </div>\n          </Col>\n        </Row>\n      </form>\n    )\n  }\n};\n\nTileEditorForm.propTypes = {};\n\nTileEditorForm.defaultProps = {};\n\n\nTileEditorForm = reduxForm({\n  form: 'TileEditorForm'\n})(TileEditorForm);\n\nTileEditorForm = connectRestEasy(\n  (state, ownProps) => ({\n    isRetrievingCreateTile: isRetrievingCreateTile(state, ownProps),\n    isRetrievingUpdateTile: isRetrievingUpdateTile(state, ownProps),\n  }),\n  dispatch => ({\n    CreateTileAction: (options) => dispatch(CreateTileAction(options)),\n    UpdateTileAction: (options) => dispatch(UpdateTileAction(options)),\n  })\n)(TileEditorForm);\n\nTileEditorForm = withRouter(TileEditorForm);\n\n\nexport default TileEditorForm;\n","import {createResource} from '@brigad/redux-rest-easy';\nimport {NormalizationPayload} from \"../.helpers/ResourceHelper\";\nimport config from \"../../../config\";\nimport {handleStatusCode} from \"../.helpers/handleStatusCode\";\nimport {requestDELETE, requestGET, requestPOST, requestPUT} from \"../.helpers/networkHelpers\";\nimport {DeleteNormalizer} from \"../.helpers/normalizerHelpers\";\nimport {hasOwnProperty} from \"../../../helpers/hasOwnProperty\";\n\n\nexport const TILE_TYPES_RESOURCE_NAME = 'tileTypes';\n\nconst Normalizer = new NormalizationPayload(TILE_TYPES_RESOURCE_NAME);\n\n\nexport const TileTypesResource = createResource(TILE_TYPES_RESOURCE_NAME)({\n  createTileType: {\n    method: 'POST',\n    url: `${config.base}${config.api.tile_types}`,\n    normalizer: (payload, resources) => {\n      if (!payload) {\n        return null\n      }\n      if (payload.errors) {\n        return Normalizer.normalizeError(payload);\n      }\n\n      if (hasOwnProperty(resources,TILE_TYPES_RESOURCE_NAME)) {\n        return Normalizer.mergeResourceAndPayload(resources, [payload])\n      } else {\n        return Normalizer.payloadToResource([payload]);\n      }\n    },\n    networkHelpers: {\n      handleStatusCode,\n      requestPOST: requestPOST\n    },\n  },\n  deleteTileType: {\n    method: 'DELETE',\n    url: `${config.base}${config.api.tile_types}/::id`,\n    normalizer: DeleteNormalizer(Normalizer),\n\n    networkHelpers: {\n      handleStatusCode,\n      requestDELETE: requestDELETE,\n    },\n  },\n  getTileType: {\n    method: 'GET',\n    url: `${config.base}${config.api.tile_types}/::id`,\n    normalizer: (payload) => Normalizer.payloadToResource([payload]),\n    networkHelpers: {\n      handleStatusCode,\n      requestGET: requestGET,\n    },\n  },\n  getTileTypes: {\n    method: 'GET',\n    url: `${config.base}${config.api.tile_types}`,\n    normalizer: (payload) => {\n      if (!payload && payload.error) {\n        return null;\n      }\n      if (Array.isArray(payload)) {\n        return Normalizer.payloadToResource(payload.map((item,index) => ({id: index, name: item})));\n      } else {\n        return Normalizer.payloadToResource(payload.data, payload);\n      }\n    },\n    networkHelpers: {\n      handleStatusCode,\n      requestGET: requestGET,\n    },\n  },\n  updateTileType: {\n    method: 'PUT',\n    url: `${config.base}${config.api.tile_types}/::id`,\n    normalizer: (payload, resources) => {\n      if (payload.errors) {\n        return Normalizer.normalizeError(payload);\n      }\n      if (payload) {\n        return Normalizer.updateResource(resources, payload);\n      }\n      return resources;\n    },\n    networkHelpers: {\n      handleStatusCode,\n      requestPUT: requestPUT,\n    },\n  },\n});\n\n\nconst {\n  actions: {\n    createTileType: {\n      perform: CreateTileTypeAction,\n    },\n    deleteTileType: {\n      perform: DeleteTileTypeAction,\n    },\n    getTileType: {\n      perform: GetTileTypeAction,\n    },\n    getTileTypes: {\n      perform: GetTileTypesAction,\n    },\n    updateTileType: {\n      perform: UpdateTileTypeAction,\n    },\n  },\n  selectors: {\n    resource: {\n      getResource: GetTileTypes,\n      getResourceById: GetTileTypeById,\n    },\n    createTileType: {\n      request: {\n        getResource: CreateTileTypeGetResource,\n        isPerforming: isRetrievingCreateTileType,\n      }\n    },\n    deleteTileType: {\n      request: {\n        getResource: DeleteTileTypeGetResource,\n      }\n    },\n    getTileType: {\n      request: {\n        getResource: GetTileTypeGetResource,\n        isPerforming: isRetrievingGetTileType,\n      }\n    },\n    getTileTypes: {\n      request: {\n        getResource: GetTileTypesGetResource,\n        isPerforming: isRetrievingGetTileTypes,\n      }\n    },\n    updateTileType: {\n      request: {\n        getResource: UpdateTileTypeGetResource,\n        isPerforming: isRetrievingUpdateTileType,\n      }\n    },\n  }\n} = TileTypesResource;\n\nexport {\n  CreateTileTypeAction,\n  DeleteTileTypeAction,\n  GetTileTypeAction,\n  GetTileTypesAction,\n  UpdateTileTypeAction,\n\n  CreateTileTypeGetResource,\n  DeleteTileTypeGetResource,\n  GetTileTypeGetResource,\n  GetTileTypesGetResource,\n  UpdateTileTypeGetResource,\n  isRetrievingGetTileType,\n  isRetrievingGetTileTypes,\n  GetTileTypes,\n  GetTileTypeById,\n\n  isRetrievingUpdateTileType,\n  isRetrievingCreateTileType,\n}\n","import React, {Component} from 'react';\nimport {TileEditorForm} from \"./Components/TileEditorForm/TileEditorForm\";\nimport {connect as connectRestEasy} from \"@brigad/redux-rest-easy\";\nimport {\n  GetTileAction,\n  GetTileById,\n  isRetrievingGetTile,\n  TILES_RESOURCE_NAME\n} from \"../../../../store/reduxRestEasy/Tiles/TilesResource\";\nimport {\n  GetTileTypes,\n  GetTileTypesAction,\n  isRetrievingGetTileTypes\n} from \"../../../../store/reduxRestEasy/TileTypes/TileTypesResource\";\nimport Preloader from \"../../../../components/Preloader/Preloader\";\n\nexport class TileEditor extends Component {\n\n  componentWillMount() {\n    const {match: {params}, GetTileAction, GetTileTypesAction} = this.props;\n    if (params && params.id) {\n      GetTileAction({\n        urlParams: {\n          id: params.id,\n        }\n      });\n    }\n    GetTileTypesAction();\n  }\n\n\n  render() {\n    const {\n      tile,\n      tileTypes,\n      match: {params},\n      isRetrievingGetTile,\n      isRetrievingGetTileTypes\n    } = this.props;\n    if (isRetrievingGetTile || isRetrievingGetTileTypes) {\n      return (<Preloader/>)\n    }\n    if (!tileTypes.length) {\n      return null;\n    }\n    let initialValues = {\n      initialValues: params && params.id && tile(params.id)\n    };\n    const data = tileTypes && Object.values(tileTypes[0]);\n    return (\n      <div className=\"animated fadeIn\">\n        <TileEditorForm tileTypes={data} {...initialValues}/>\n      </div>\n    )\n  }\n}\n\nTileEditor = connectRestEasy(\n  (state, ownProps) => ({\n    tileTypes: GetTileTypes(state, ownProps),\n    tile: (id) => {\n      const data = GetTileById(state, TILES_RESOURCE_NAME, id);\n      console.log(data);\n      if (data) {\n        return data[id];\n      }\n      return null;\n    },\n    isRetrievingGetTileTypes: isRetrievingGetTileTypes(state, ownProps),\n    isRetrievingGetTile: isRetrievingGetTile(state, ownProps),\n  }),\n  dispatch => ({\n    GetTileAction: (options) => dispatch(GetTileAction(options)),\n    GetTileTypesAction: (options) => dispatch(GetTileTypesAction(options)),\n  })\n)(TileEditor);\n\nexport default TileEditor;\n","export const hasOwnProperty = (obj, prop) => {\n  if (!obj || !prop) {\n    return false\n  }\n  return Object.prototype.hasOwnProperty.call(obj, prop)\n};\n","\n\nlet base = '';\n\nswitch (window.location.hostname) {\n  case ('localhost'):{\n    base = 'https://dev.strikepro.ru';\n    break;\n  }\n  case ('admin.strikepro.ru'):{\n    base = 'https://dev.strikepro.ru';\n    break;\n  }\n  case ('strike.localhost'):{\n    base = 'http://strike.localhost';\n    break;\n  }\n}\n\n\n\nexport default {\n  base,\n  api: {\n    login: '/dashboard/auth/login',\n    logout: '/dashboard/auth/logout',\n\n    posts: '/dashboard/blog/posts',\n    post: '/dashboard/blog/post',\n\n    categories: '/dashboard/blog/categories',\n    category: '/dashboard/blog/category',\n\n    slides: '/dashboard/slides',\n\n    tiles: '/dashboard/mainfeeds',\n\n    tile_types: '/dashboard/mainfeed/types',\n    tile: '/dashboard/mainfeed',\n\n    nomenclature: '/dashboard/nomenclature',\n    nomenclatures: '/dashboard/nomenclatures',\n\n    nomenclatureCharacteristic: '/dashboard/nomenclature/characteristic',\n    typesOfNomenclature: '/dashboard/nomenclature/characteristic',\n    fileupload: '/dashboard/fileupload',\n\n    static_pages: '/dashboard/pages',\n    url_alias: '/dashboard/url_alias',\n    feedback: '/dashboard/feedback',\n  }\n}\n","export const requestPOST = (body) => {\n  return {\n    method: 'POST',\n    credentials: 'include',\n    headers: {\n      Accept: 'application/json',\n      'Content-type': 'application/json',\n    },\n    ...(body? {body: JSON.stringify(body)} : {})\n\n  }\n};\n\nexport const requestGET = () => {\n  return {\n    method: 'GET',\n    credentials: 'include',\n    headers: {\n      Accept: 'application/json',\n      'Content-type': 'application/json',\n    }\n  }\n};\n\nexport const requestDELETE = () => {\n  return {\n    method: 'DELETE',\n    credentials: 'include',\n    headers: {\n      Accept: 'application/json',\n      'Content-type': 'application/json',\n    }\n  }\n};\n\nexport const requestPUT = (body) => {\n  return {\n    method: 'PUT',\n    credentials: 'include',\n    headers: {\n      Accept: 'application/json',\n      'Content-type': 'application/json',\n    },\n    body: JSON.stringify(body),\n  }\n};\n","import history from \"../../../history\";\n\n\nexport const handleStatusCode = (response) => {\n  const {status} = response;\n  if (status === 401) {\n    history.push('#/login');\n    window.location.reload();\n    return response\n  }\n\n  if (status === 404) {\n    history.push('#/404');\n    window.location.reload();\n    return response\n  }\n\n\n  return response\n};\n\nexport default handleStatusCode;\n","export class NormalizationPayload {\n\n  resourceName = null;\n\n  constructor(resourceName) {\n    this.resourceName = resourceName;\n  }\n\n  /**\n   * @param {object} resources - объект с исходными ресурсами\n   * @param {array} payload - массив с новыми ресурсами\n   * @desc метод для добавления в существующие ресурсы новых ресурсов\n   * */\n  mergeResourceAndPayload = (resources, payload) => {\n    payload.forEach((item) => {\n      resources[this.resourceName][this.resourceName][item.id] = item;\n      resources[this.resourceName].metadata = {\n        data: [...resources[this.resourceName].metadata.data, item.id],\n      };\n    });\n    return resources;\n  };\n\n  /**\n   * @param {array} resources\n   * @param {string} payloadID\n   * @desc\n   * */\n  removePayloadFromResources = (resources, payloadID) => {\n    if (!payloadID) {\n      console.warn('payloadID undefined');\n      return resources;\n    }\n    console.log('removePayloadFromResources: ', this, resources, payloadID);\n    delete resources[this.resourceName][this.resourceName][payloadID];\n    resources[this.resourceName].metadata.data = resources[this.resourceName]\n      .metadata.data.filter(item => item !== payloadID);\n    return resources;\n  };\n\n  /**\n   * @param {array} payload\n   * @param {object} metadata\n   * @desc\n   * */\n  payloadToResource = (payload, metadata = {}) => {\n    const data = {\n      entities: {\n        [this.resourceName]: {\n          [this.resourceName]: {},\n          metadata: {}\n        },\n      },\n      result: []\n    };\n    if (payload) {\n      payload.forEach((item) => {\n        data.result.push(item.id);\n        data.entities[this.resourceName][this.resourceName][item.id] = item;\n      });\n    }\n    data.entities[this.resourceName].metadata = {\n      ...metadata,\n      data: data.result,\n    };\n    return data;\n  };\n\n  /**\n   * @param {object} resources - объект с исходными ресурсами\n   * @param {object} payload - массив с новыми ресурсами\n   * @desc метод для добавления в существующие ресурсы новых ресурсов\n   * */\n  updateResource = (resources, payload) => {\n    resources[this.resourceName][this.resourceName][payload.id] = payload;\n    return resources;\n  };\n\n  /**\n   * @param {object} payload\n   * @param {object} payload.errors\n   * @param {array} payload.errors.propName\n   * @param {string} payload.message\n   * */\n  normalizeError = (payload) => {\n    if(!payload.errors){\n      payload.errors = {};\n    }\n    return {\n      entities: {\n        ...payload,\n        message: [payload.message]\n      },\n      result: {errors: payload}\n    };\n  }\n\n}\n","import {hasOwnProperty} from \"../../../helpers/hasOwnProperty\";\n\n\nexport const DeleteNormalizer = (Normalizer)=> (payload, resources, urlParams,) => {\n  if (payload.errors) {\n    return Normalizer.normalizeError(payload);\n  }\n  if (payload) {\n    return Normalizer.removePayloadFromResources(resources, urlParams.id);\n  }\n  return resources;\n};\n\n\nexport const CreateNormalizer = (Normalizer) => (payload, resources, urlParams) => {\n  if (!payload ) {\n    return null\n  }\n  if (payload.errors || payload.message) {\n    return Normalizer.normalizeError(payload);\n  }\n\n  if (hasOwnProperty(resources,Normalizer.resourceName)) {\n    return Normalizer.mergeResourceAndPayload(resources, [payload])\n  } else {\n    return Normalizer.payloadToResource([payload]);\n  }\n};\n\nexport const UpdateNormalizer = (Normalizer) => (payload, resources) => {\n  if (payload.errors || payload.message) {\n    return Normalizer.normalizeError(payload);\n  }\n  if (payload) {\n    return Normalizer.updateResource(resources, payload);\n  }\n  return resources;\n};\n\nexport const GetListNormalizer = (Normalizer) => (payload) => {\n  if (!payload && payload.error) {\n    return null;\n  }\n  if (Array.isArray(payload)) {\n    return Normalizer.payloadToResource(payload);\n  } else {\n    return Normalizer.payloadToResource(payload.data, payload);\n  }\n};\n\nexport const GetByIdNormalizer = (Normalizer) => (payload) => Normalizer.payloadToResource([payload])\n","import React from \"react\";\nimport {FormFeedback, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, Label} from \"reactstrap\";\n\nexport const TextField = ({input, label, type, placeholder, required, icon, meta: {touched, error}}) => (\n  <FormGroup className={touched ? error ? '' : 'was-validated' : ''}>\n    {\n      label && <Label>{label}</Label>\n    }\n    <InputGroup className=\"mb-3\">\n      {\n        icon &&\n        <InputGroupAddon addonType=\"prepend\">\n          <InputGroupText>\n            <i className={icon}/>\n          </InputGroupText>\n        </InputGroupAddon>\n      }\n\n      <Input\n        {...input}\n        type={type}\n        valid={touched ? !error : false}\n        className={touched ? error ? 'form-control-warning is-invalid' : '' : ''}\n        placeholder={placeholder}\n        required={required}/>\n      <FormFeedback\n        valid={touched ? !error : false}\n        className=\"help-block\"\n      >\n        {error}\n      </FormFeedback>\n    </InputGroup>\n\n  </FormGroup>)\n\nexport default TextField;\n","\n/**\n * @param {object} error\n * @param {object} error.errors\n * @param {array} error.message\n * */\nexport const normalizeSubmissionError = (error) => {\n  const data = {\n    _error: error.message ? error.message[0] : null,\n  };\n  for (let prop in error.errors) {\n    if (Array.isArray(error.errors[prop])) {\n      data[prop] = error.errors[prop][0];\n    }\n  }\n  return data;\n}\n","import {SubmissionError} from \"redux-form\";\nimport {normalizeSubmissionError} from \"./normalizeSubmissionError\";\n\nexport const createSubmitHandler = (fetchAction) => async (options) => {\n  const {normalizedPayload, error,} = await fetchAction(options);\n  if (normalizedPayload && normalizedPayload.errors || error) {\n    throw new SubmissionError(normalizeSubmissionError(normalizedPayload ||\n      {\n        message: [error.message],\n        errors: {}\n      }));\n  }\n};\n\nexport default createSubmitHandler;\n","export const required = value => {\n  return (value ? undefined : 'Обязательно для заполнения');\n};\n","import React, {Component} from 'react';\nimport {Alert, FormGroup, Input, Label} from \"reactstrap\";\n\n\nexport class FormSelect extends Component {\n\n  static defaultProps = {\n    valueKey: 'id',\n    labelKey: 'name',\n  };\n\n  componentDidMount() {\n    const {\n      input,\n      defaultValue,\n    } = this.props;\n\n    if(!input.value && defaultValue){\n      input.onChange(defaultValue);\n    }\n\n  }\n\n  render() {\n    const {\n      input,\n      label,\n      type,\n      data,\n      meta: {touched, error},\n      valueKey,\n      labelKey,\n    } = this.props;\n    return (\n      <FormGroup>\n        <Label>{label}</Label>\n        <Input type={type} {...input} >\n          <option>выберите категорию...</option>\n          {\n            Array.isArray(data) && data.map((item, index) => (<option\n              key={index}\n              selected={item[valueKey] === input.value}\n              value={item[valueKey]}>\n              {item[labelKey]}\n            </option>))\n          }\n        </Input>\n        {\n          touched && error &&\n          <Alert color=\"danger\">\n            {error}\n          </Alert>\n\n        }\n      </FormGroup>\n    );\n  }\n}\n\n\nexport default FormSelect;\n","import {format} from 'date-fns/esm'\n\nexport const DEFAULT_DATE_FORMAT = \"yyyy-MM-d h:mm:ss\";\n\nexport const dateToFormat = (date) => {\n  return format(date, DEFAULT_DATE_FORMAT);\n};\n","import React, {Component} from 'react';\nimport {FormGroup, Label} from \"reactstrap\";\nimport DatePicker  from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {dateToFormat} from \"../../helpers/dateToFormat\";\n\n\n\n\nexport class FormDateTimePicker extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n\n  handleChange(value) {\n    const {input: {onChange}} = this.props;\n    return onChange(dateToFormat(value));\n  }\n\n  render() {\n    const {label, input: {value}} = this.props;\n\n    return (\n      <div className=\"controls\">\n        <FormGroup>\n          <Label>{label}</Label>\n          <DatePicker\n            locale={'ru'}\n            minDate={new Date()}\n            selected={new Date(value || new Date() )}\n            onChange={this.handleChange}\n            className={'form-control full-width'}\n          />\n        </FormGroup>\n      </div>\n    );\n  }\n\n}\n\n\nexport default FormDateTimePicker;\n","import {createResource} from '@brigad/redux-rest-easy';\nimport {NormalizationPayload} from \"../.helpers/ResourceHelper\";\nimport config from \"../../../config\";\nimport {handleStatusCode} from \"../.helpers/handleStatusCode\";\nimport {requestDELETE, requestGET, requestPOST, requestPUT} from \"../.helpers/networkHelpers\";\nimport {DeleteNormalizer} from \"../.helpers/normalizerHelpers\";\nimport {hasOwnProperty} from \"../../../helpers/hasOwnProperty\";\n\n\nexport const TILES_RESOURCE_NAME = 'tiles';\n\nconst Normalizer = new NormalizationPayload(TILES_RESOURCE_NAME);\n\n\nexport const TilesResource = createResource(TILES_RESOURCE_NAME)({\n  createTile: {\n    method: 'POST',\n    url: `${config.base}${config.api.tile}`,\n    normalizer: (payload, resources, urlParams, query, body, otherArgs) => {\n      console.log('createTile: ', payload, resources, urlParams,query, body, otherArgs);\n      if (!payload ) {\n        return null\n      }\n      if (payload.errors || payload.message) {\n        return Normalizer.normalizeError(payload);\n      }\n\n      if (hasOwnProperty(resources,TILES_RESOURCE_NAME)) {\n        return Normalizer.mergeResourceAndPayload(resources, [payload])\n      } else {\n        return Normalizer.payloadToResource([payload]);\n      }\n    },\n    networkHelpers: {\n      handleStatusCode:(response)=>{\n        handleStatusCode(response)\n      },\n      requestPOST: requestPOST\n    },\n  },\n  deleteTile: {\n    method: 'DELETE',\n    url: `${config.base}${config.api.tile}/::id`,\n    normalizer: DeleteNormalizer(Normalizer),\n    networkHelpers: {\n      handleStatusCode,\n      requestDELETE: requestDELETE,\n    },\n  },\n  getTile: {\n    method: 'GET',\n    url: `${config.base}${config.api.tile}/::id`,\n    normalizer: (payload) => Normalizer.payloadToResource([payload]),\n    networkHelpers: {\n      handleStatusCode,\n      requestGET: requestGET,\n    },\n  },\n  getTiles: {\n    method: 'GET',\n    url: `${config.base}${config.api.tiles}`,\n    normalizer: (payload) => {\n      if (!payload && payload.error) {\n        return null;\n      }\n      if (Array.isArray(payload)) {\n        return Normalizer.payloadToResource(payload);\n      } else {\n        return Normalizer.payloadToResource(payload.data, payload);\n      }\n    },\n    networkHelpers: {\n      handleStatusCode,\n      requestGET: requestGET,\n    },\n  },\n  updateTile: {\n    method: 'PUT',\n    url: `${config.base}${config.api.tile}/::id`,\n    normalizer: (payload, resources) => {\n      if (payload.errors) {\n        return Normalizer.normalizeError(payload);\n      }\n      if (payload) {\n        return Normalizer.updateResource(resources, payload);\n      }\n      return resources;\n    },\n    networkHelpers: {\n      handleStatusCode,\n      requestPUT: requestPUT,\n    },\n  },\n});\n\n\nconst {\n  actions: {\n    createTile: {\n      perform: CreateTileAction,\n    },\n    deleteTile: {\n      perform: DeleteTileAction,\n    },\n    getTile: {\n      perform: GetTileAction,\n    },\n    getTiles: {\n      perform: GetTilesAction,\n    },\n    updateTile: {\n      perform: UpdateTileAction,\n    },\n  },\n  selectors: {\n    resource: {\n      getResource: GetTiles,\n      getResourceById: GetTileById,\n    },\n    createTile: {\n      request: {\n        getResource: CreateTileGetResource,\n        isPerforming: isRetrievingCreateTile,\n      }\n    },\n    deleteTile: {\n      request: {\n        getResource: DeleteTileGetResource,\n      }\n    },\n    getTile: {\n      request: {\n        getResource: GetTileGetResource,\n        isPerforming: isRetrievingGetTile,\n      }\n    },\n    getTiles: {\n      request: {\n        getResource: GetTilesGetResource,\n        isPerforming: isRetrievingGetTiles,\n      }\n    },\n    updateTile: {\n      request: {\n        getResource: UpdateTileGetResource,\n        isPerforming: isRetrievingUpdateTile,\n      }\n    },\n  }\n} = TilesResource;\n\nexport {\n  CreateTileAction,\n  DeleteTileAction,\n  GetTileAction,\n  GetTilesAction,\n  UpdateTileAction,\n\n  CreateTileGetResource,\n  DeleteTileGetResource,\n  GetTileGetResource,\n  GetTilesGetResource,\n  UpdateTileGetResource,\n  isRetrievingGetTile,\n  isRetrievingGetTiles,\n  GetTiles,\n  GetTileById,\n\n  isRetrievingUpdateTile,\n  isRetrievingCreateTile,\n}\n"],"sourceRoot":""}