{"version":3,"sources":["../node_modules/reactstrap/es/utils.js","../node_modules/lodash.isfunction/index.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/identity.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_castPath.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/get.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/chart.js/dist/Chart.js","../node_modules/moment/moment.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_createBaseEach.js"],"names":["__webpack_require__","d","__webpack_exports__","setScrollbarWidth","getOriginalBodyPadding","conditionallyUpdateScrollbar","mapToCssModules","omit","pick","warnOnce","deprecated","DOMElement","targetPropType","tagPropType","TransitionTimeouts","TransitionPropTypeKeys","TransitionStatuses","keyCodes","PopperPlacements","canUseDOM","getTarget","focusableElements","globalCssModule","lodash_isfunction__WEBPACK_IMPORTED_MODULE_0__","lodash_isfunction__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","padding","document","body","style","paddingRight","window","getComputedStyle","parseInt","getPropertyValue","scrollbarWidth","scrollDiv","createElement","position","top","width","height","overflow","appendChild","offsetWidth","clientWidth","removeChild","getScrollbarWidth","fixedContent","querySelectorAll","bodyPadding","innerWidth","className","cssModule","split","map","c","join","obj","omitKeys","result","Object","keys","forEach","key","indexOf","pickKeys","Array","isArray","length","warned","message","console","error","propType","explanation","props","propName","componentName","_len","arguments","rest","_key","apply","concat","Element","Error","a","oneOfType","string","func","shape","current","any","$$typeof","symbol","render","arrayOf","Fade","Collapse","Modal","Carousel","ENTERING","ENTERED","EXITING","EXITED","esc","space","enter","tab","up","down","home","end","p","isArrayOrNodeList","els","target","isReactRefObj","selection","findDOMElements","global","asyncTag","funcTag","genTag","nullTag","proxyTag","undefinedTag","freeGlobal","freeSelf","self","root","Function","objectProto","prototype","hasOwnProperty","nativeObjectToString","toString","Symbol","symToStringTag","toStringTag","undefined","baseGetTag","value","isOwn","call","tag","unmasked","e","getRawTag","objectToString","module","exports","type","isObject","isSymbol","reIsDeepProp","reIsPlainProp","object","test","defineProperty","configurable","enumerable","writable","srcValue","castPath","toKey","path","index","isKey","stringToPath","getNative","baseFor","createBaseFor","fromRight","iteratee","keysFunc","iterable","baseMatches","baseMatchesProperty","identity","property","baseIsMatch","getMatchData","matchesStrictComparable","source","matchData","Stack","baseIsEqual","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","customizer","noCustomizer","data","objValue","stack","isStrictComparable","get","hasIn","baseGet","defaultValue","baseHasIn","hasPath","isArguments","isIndex","isLength","hasFunc","baseProperty","basePropertyDeep","process","Doughnut","Pie","Line","Bar","Radar","Polar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","assign","i","_objectWithoutProperties","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","this","args","handleOnClick","event","chartInstance","_this$props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","ref","element","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","options","plugins","legend","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","datasets","set","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","dataset","label","getCurrentDatasets","config","_this2","_this3","helpers","configMerge","currentDatasets","nextDatasets","currentDatasetsIndexed","next","splice","point","pid","otherProps","update","_props2","node","defaultProps","values","destroy","_props3","id","onClick","Component","propTypes","isRequired","number","bool","controllers","display","_React$Component2","_this5","_ref","_React$Component3","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","_this15","_ref6","_React$Component8","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","defaults","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","l","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","q","t","hwb","wh","bl","ratio","cmyk","m","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","arg","slice","pair","exec","from","to","round","convs","routeSpace","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseFloat","scale","isNaN","num","str","toUpperCase","name","Color","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","prop","spaces","maxes","charAt","capped","chans","sname","svalues","chartjsColor","noop","uid","isNullOrUndef","substr","isFinite","_isFinite","_x","Number","valueOrDefault","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","Surrogate","__super__","helpers_core","callCallback","array","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","clear","chart","ctx","clearRect","roundedRect","radius","left","right","bottom","moveTo","arc","closePath","rect","drawPoint","rotation","xOffset","yOffset","size","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","push","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","updateElement","buildOrUpdateElements","isExtensible","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","generateLabels","ds","arcOpts","bw","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","addResizeListener","expando","resizer","expand","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","pos","fromNativeEvent","addEvent","removeEvent","implementation","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","_abstract","DateAdapter","Controller","types","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","color","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","deprecate","firstTime","deprecationHandler","deprecations","deprecateSimple","isFunction","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","replace","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","createFromConfig","prototypeMin","other","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","baseIteratee","initializer","accumulator","baseEach","baseForOwn","createBaseEach","isArrayLike","eachFunc"],"mappings":"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","file":"static/js/3.a0744708.chunk.js","sourcesContent":["import isFunction from 'lodash.isfunction';\nimport PropTypes from 'prop-types'; // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.4/js/src/modal.js#L436-L443\n\nexport function getScrollbarWidth() {\n  var scrollDiv = document.createElement('div'); // .modal-scrollbar-measure styles // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.4/scss/_modal.scss#L106-L113\n\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.top = '-9999px';\n  scrollDiv.style.width = '50px';\n  scrollDiv.style.height = '50px';\n  scrollDiv.style.overflow = 'scroll';\n  document.body.appendChild(scrollDiv);\n  var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  document.body.removeChild(scrollDiv);\n  return scrollbarWidth;\n}\nexport function setScrollbarWidth(padding) {\n  document.body.style.paddingRight = padding > 0 ? padding + \"px\" : null;\n}\nexport function isBodyOverflowing() {\n  return document.body.clientWidth < window.innerWidth;\n}\nexport function getOriginalBodyPadding() {\n  var style = window.getComputedStyle(document.body, null);\n  return parseInt(style && style.getPropertyValue('padding-right') || 0, 10);\n}\nexport function conditionallyUpdateScrollbar() {\n  var scrollbarWidth = getScrollbarWidth(); // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.6/js/src/modal.js#L433\n\n  var fixedContent = document.querySelectorAll('.fixed-top, .fixed-bottom, .is-fixed, .sticky-top')[0];\n  var bodyPadding = fixedContent ? parseInt(fixedContent.style.paddingRight || 0, 10) : 0;\n\n  if (isBodyOverflowing()) {\n    setScrollbarWidth(bodyPadding + scrollbarWidth);\n  }\n}\nvar globalCssModule;\nexport function setGlobalCssModule(cssModule) {\n  globalCssModule = cssModule;\n}\nexport function mapToCssModules(className, cssModule) {\n  if (className === void 0) {\n    className = '';\n  }\n\n  if (cssModule === void 0) {\n    cssModule = globalCssModule;\n  }\n\n  if (!cssModule) return className;\n  return className.split(' ').map(function (c) {\n    return cssModule[c] || c;\n  }).join(' ');\n}\n/**\n * Returns a new object with the key/value pairs from `obj` that are not in the array `omitKeys`.\n */\n\nexport function omit(obj, omitKeys) {\n  var result = {};\n  Object.keys(obj).forEach(function (key) {\n    if (omitKeys.indexOf(key) === -1) {\n      result[key] = obj[key];\n    }\n  });\n  return result;\n}\n/**\n * Returns a filtered copy of an object with only the specified keys.\n */\n\nexport function pick(obj, keys) {\n  var pickKeys = Array.isArray(keys) ? keys : [keys];\n  var length = pickKeys.length;\n  var key;\n  var result = {};\n\n  while (length > 0) {\n    length -= 1;\n    key = pickKeys[length];\n    result[key] = obj[key];\n  }\n\n  return result;\n}\nvar warned = {};\nexport function warnOnce(message) {\n  if (!warned[message]) {\n    /* istanbul ignore else */\n    if (typeof console !== 'undefined') {\n      console.error(message); // eslint-disable-line no-console\n    }\n\n    warned[message] = true;\n  }\n}\nexport function deprecated(propType, explanation) {\n  return function validate(props, propName, componentName) {\n    if (props[propName] !== null && typeof props[propName] !== 'undefined') {\n      warnOnce(\"\\\"\" + propName + \"\\\" property of \\\"\" + componentName + \"\\\" has been deprecated.\\n\" + explanation);\n    }\n\n    for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      rest[_key - 3] = arguments[_key];\n    }\n\n    return propType.apply(void 0, [props, propName, componentName].concat(rest));\n  };\n}\nexport function DOMElement(props, propName, componentName) {\n  if (!(props[propName] instanceof Element)) {\n    return new Error('Invalid prop `' + propName + '` supplied to `' + componentName + '`. Expected prop to be an instance of Element. Validation failed.');\n  }\n}\nexport var targetPropType = PropTypes.oneOfType([PropTypes.string, PropTypes.func, DOMElement, PropTypes.shape({\n  current: PropTypes.any\n})]);\nexport var tagPropType = PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.shape({\n  $$typeof: PropTypes.symbol,\n  render: PropTypes.func\n}), PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.shape({\n  $$typeof: PropTypes.symbol,\n  render: PropTypes.func\n})]))]);\n/* eslint key-spacing: [\"error\", { afterColon: true, align: \"value\" }] */\n// These are all setup to match what is in the bootstrap _variables.scss\n// https://github.com/twbs/bootstrap/blob/v4-dev/scss/_variables.scss\n\nexport var TransitionTimeouts = {\n  Fade: 150,\n  // $transition-fade\n  Collapse: 350,\n  // $transition-collapse\n  Modal: 300,\n  // $modal-transition\n  Carousel: 600 // $carousel-transition\n\n}; // Duplicated Transition.propType keys to ensure that Reactstrap builds\n// for distribution properly exclude these keys for nested child HTML attributes\n// since `react-transition-group` removes propTypes in production builds.\n\nexport var TransitionPropTypeKeys = ['in', 'mountOnEnter', 'unmountOnExit', 'appear', 'enter', 'exit', 'timeout', 'onEnter', 'onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'];\nexport var TransitionStatuses = {\n  ENTERING: 'entering',\n  ENTERED: 'entered',\n  EXITING: 'exiting',\n  EXITED: 'exited'\n};\nexport var keyCodes = {\n  esc: 27,\n  space: 32,\n  enter: 13,\n  tab: 9,\n  up: 38,\n  down: 40,\n  home: 36,\n  end: 35,\n  n: 78,\n  p: 80\n};\nexport var PopperPlacements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\nexport var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nexport function isReactRefObj(target) {\n  if (target && typeof target === 'object') {\n    return 'current' in target;\n  }\n\n  return false;\n}\nexport function findDOMElements(target) {\n  if (isReactRefObj(target)) {\n    return target.current;\n  }\n\n  if (isFunction(target)) {\n    return target();\n  }\n\n  if (typeof target === 'string' && canUseDOM) {\n    var selection = document.querySelectorAll(target);\n\n    if (!selection.length) {\n      selection = document.querySelectorAll(\"#\" + target);\n    }\n\n    if (!selection.length) {\n      throw new Error(\"The target '\" + target + \"' could not be identified in the dom, tip: check spelling\");\n    }\n\n    return selection;\n  }\n\n  return target;\n}\nexport function isArrayOrNodeList(els) {\n  if (els === null) {\n    return false;\n  }\n\n  return Array.isArray(els) || canUseDOM && typeof els.length === 'number';\n}\nexport function getTarget(target) {\n  var els = findDOMElements(target);\n\n  if (isArrayOrNodeList(els)) {\n    return els[0];\n  }\n\n  return els;\n}\nexport var defaultToggleEvents = ['touchstart', 'click'];\nexport function addMultipleEventListeners(_els, handler, _events, useCapture) {\n  var els = _els;\n\n  if (!isArrayOrNodeList(els)) {\n    els = [els];\n  }\n\n  var events = _events;\n\n  if (typeof events === 'string') {\n    events = events.split(/\\s+/);\n  }\n\n  if (!isArrayOrNodeList(els) || typeof handler !== 'function' || !Array.isArray(events)) {\n    throw new Error(\"\\n      The first argument of this function must be DOM node or an array on DOM nodes or NodeList.\\n      The second must be a function.\\n      The third is a string or an array of strings that represents DOM events\\n    \");\n  }\n\n  Array.prototype.forEach.call(events, function (event) {\n    Array.prototype.forEach.call(els, function (el) {\n      el.addEventListener(event, handler, useCapture);\n    });\n  });\n  return function removeEvents() {\n    Array.prototype.forEach.call(events, function (event) {\n      Array.prototype.forEach.call(els, function (el) {\n        el.removeEventListener(event, handler, useCapture);\n      });\n    });\n  };\n}\nexport var focusableElements = ['a[href]', 'area[href]', 'input:not([disabled]):not([type=hidden])', 'select:not([disabled])', 'textarea:not([disabled])', 'button:not([disabled])', 'object', 'embed', '[tabindex]:not(.modal)', 'audio[controls]', 'video[controls]', '[contenteditable]:not([contenteditable=\"false\"])'];","/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    nullTag = '[object Null]',\n    proxyTag = '[object Proxy]',\n    undefinedTag = '[object Undefined]';\n/** Detect free variable `global` from Node.js. */\n\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n/** Detect free variable `self`. */\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar Symbol = root.Symbol,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\n\n\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isFunction;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function _abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: _abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: _abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: _abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: _abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: _abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: _abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: _abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;"],"sourceRoot":""}