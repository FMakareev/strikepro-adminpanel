{"version":3,"sources":["config.js","store/reduxRestEasy/.helpers/networkHelpers.js","store/reduxRestEasy/.helpers/handleStatusCode.js","store/reduxRestEasy/.helpers/ResourceHelper.js","store/reduxRestEasy/.helpers/normalizerHelpers.js","components/TextField/TextField.js","helpers/normalizeSubmissionError.js","validation/required.js","components/Form/FormSelect.js","store/reduxRestEasy/Tiles/TilesResource.js","components/FormDateTimePicker/FormDateTimePicker.js","helpers/dateToFormat.js","components/Form/FormInputColor.js","views/Tile/View/TileEditor/Components/TileEditorForm/TileEditorForm.js","store/reduxRestEasy/TileTypes/TileTypesResource.js","views/Tile/View/TileEditor/index.js"],"names":["base","window","location","hostname","__webpack_exports__","api","login","logout","posts","post","categories","category","slides","tiles","tile_types","tile","nomenclature","nomenclatures","nomenclatureCharacteristic","typesOfNomenclature","fileupload","static_pages","url_alias","requestPOST","body","Object","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","method","credentials","headers","Accept","Content-type","JSON","stringify","requestGET","requestDELETE","requestPUT","__webpack_require__","d","handleStatusCode","_history__WEBPACK_IMPORTED_MODULE_0__","response","status","history","push","reload","NormalizationPayload","resourceName","_this","this","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","mergeResourceAndPayload","resources","payload","forEach","item","id","metadata","data","concat","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","removePayloadFromResources","payloadID","console","log","filter","warn","payloadToResource","_this$resourceName","arguments","length","undefined","entities","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","result","updateResource","normalizeError","errors","message","DeleteNormalizer","Normalizer","urlParams","TextField","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","_ref","input","label","type","placeholder","required","icon","_ref$meta","meta","touched","error","a","createElement","className","addonType","assign","valid","normalizeSubmissionError","_error","prop","Array","isArray","value","FormSelect","_Component","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","_this$props","props","defaultValue","onChange","_this$props2","_this$props2$meta","valueKey","labelKey","react__WEBPACK_IMPORTED_MODULE_5___default","reactstrap__WEBPACK_IMPORTED_MODULE_8__","map","index","selected","reactstrap__WEBPACK_IMPORTED_MODULE_9__","color","Component","defaultProps","TILES_RESOURCE_NAME","CreateTileAction","DeleteTileAction","GetTileAction","GetTilesAction","UpdateTileAction","isRetrievingGetTile","isRetrievingGetTiles","GetTiles","GetTileById","isRetrievingUpdateTile","isRetrievingCreateTile","_brigad_redux_rest_easy__WEBPACK_IMPORTED_MODULE_0__","_helpers_ResourceHelper__WEBPACK_IMPORTED_MODULE_1__","_config__WEBPACK_IMPORTED_MODULE_2__","_helpers_handleStatusCode__WEBPACK_IMPORTED_MODULE_3__","_helpers_networkHelpers__WEBPACK_IMPORTED_MODULE_4__","_helpers_normalizerHelpers__WEBPACK_IMPORTED_MODULE_5__","TilesResource","createResource","createTile","url","config","normalizer","query","otherArgs","hasOwnProperty","networkHelpers","deleteTile","getTile","getTiles","updateTile","actions","perform","selectors","resource","getResource","getResourceById","request","isPerforming","FormDateTimePicker","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","inherits","createClass","date","format","react_default","FormGroup","Label","es","locale","minDate","Date","FormInputColor","Input","style","padding","height","TileEditorForm","_getPrototypeOf2","_len","args","_key","onSubmit","values","then","normalizedPayload","catch","SubmissionError","_ref2","handleSubmit","tileTypes","Row","Col","xs","md","lg","Field","name","component","validate","Alert","Button","reduxForm","form","connectRestEasy","state","ownProps","dispatch","options","withRouter","TileTypesResource","createTileType","deleteTileType","getTileType","getTileTypes","updateTileType","GetTileTypesAction","GetTileTypes","isRetrievingGetTileTypes","TileEditor","params","match","initialValues","TileEditorForm_TileEditorForm"],"mappings":"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","file":"static/js/40.48c3654c.chunk.js","sourcesContent":["\n\nlet base = '';\n\nswitch (window.location.hostname) {\n  case ('localhost'):{\n    base = 'https://dev.strikepro.ru';\n    break;\n  }\n  case ('admin.strikepro.ru'):{\n    base = 'https://dev.strikepro.ru';\n    break;\n  }\n  case ('strike.localhost'):{\n    base = 'http://strike.localhost';\n    break;\n  }\n}\n\n\n\nexport default {\n  base,\n  api: {\n    login: '/dashboard/auth/login',\n    logout: '/dashboard/auth/logout',\n\n    posts: '/dashboard/blog/posts',\n    post: '/dashboard/blog/post',\n\n    categories: '/dashboard/blog/categories',\n    category: '/dashboard/blog/category',\n\n    slides: '/dashboard/slides',\n\n    tiles: '/dashboard/mainfeeds',\n\n    tile_types: '/dashboard/mainfeed/types',\n    tile: '/dashboard/mainfeed',\n\n    nomenclature: '/dashboard/nomenclature',\n    nomenclatures: '/dashboard/nomenclatures',\n\n    nomenclatureCharacteristic: '/dashboard/nomenclature/characteristic',\n    typesOfNomenclature: '/dashboard/nomenclature/characteristic',\n    fileupload: '/dashboard/fileupload',\n\n    static_pages: '/dashboard/pages',\n    url_alias: '/dashboard/url_alias',\n  }\n}\n","export const requestPOST = (body) => {\n  return {\n    method: 'POST',\n    credentials: 'include',\n    headers: {\n      Accept: 'application/json',\n      'Content-type': 'application/json',\n    },\n    ...(body? {body: JSON.stringify(body)} : {})\n\n  }\n};\n\nexport const requestGET = () => {\n  return {\n    method: 'GET',\n    credentials: 'include',\n    headers: {\n      Accept: 'application/json',\n      'Content-type': 'application/json',\n    }\n  }\n};\n\nexport const requestDELETE = () => {\n  return {\n    method: 'DELETE',\n    credentials: 'include',\n    headers: {\n      Accept: 'application/json',\n      'Content-type': 'application/json',\n    }\n  }\n};\n\nexport const requestPUT = (body) => {\n  return {\n    method: 'PUT',\n    credentials: 'include',\n    headers: {\n      Accept: 'application/json',\n      'Content-type': 'application/json',\n    },\n    body: JSON.stringify(body),\n  }\n};\n","import history from \"../../../history\";\n\n\nexport const handleStatusCode = (response) => {\n  const {status} = response;\n  if (status === 401) {\n    history.push('#/login');\n    window.location.reload();\n    return response\n  }\n\n  if (status === 404) {\n    history.push('#/404');\n    window.location.reload();\n    return response\n  }\n\n\n  return response\n};\n\nexport default handleStatusCode;\n","export class NormalizationPayload {\n\n  resourceName = null;\n\n  constructor(resourceName) {\n    this.resourceName = resourceName;\n  }\n\n  /**\n   * @param {object} resources - объект с исходными ресурсами\n   * @param {array} payload - массив с новыми ресурсами\n   * @desc метод для добавления в существующие ресурсы новых ресурсов\n   * */\n  mergeResourceAndPayload = (resources, payload) => {\n    payload.forEach((item) => {\n      resources[this.resourceName][this.resourceName][item.id] = item;\n      resources[this.resourceName].metadata = {\n        data: [...resources[this.resourceName].metadata.data, item.id],\n      };\n    });\n    return resources;\n  };\n\n  /**\n   * @param {array} resources\n   * @param {string} payloadID\n   * @desc\n   * */\n  removePayloadFromResources = (resources, payloadID) => {\n    if (!payloadID) {\n      console.warn('payloadID undefined');\n      return resources;\n    }\n    console.log('removePayloadFromResources: ', this, resources, payloadID);\n    delete resources[this.resourceName][this.resourceName][payloadID];\n    resources[this.resourceName].metadata.data = resources[this.resourceName]\n      .metadata.data.filter(item => item !== payloadID);\n    return resources;\n  };\n\n  /**\n   * @param {array} payload\n   * @param {object} metadata\n   * @desc\n   * */\n  payloadToResource = (payload, metadata = {}) => {\n    const data = {\n      entities: {\n        [this.resourceName]: {\n          [this.resourceName]: {},\n          metadata: {}\n        },\n      },\n      result: []\n    };\n    if (payload) {\n      payload.forEach((item) => {\n        data.result.push(item.id);\n        data.entities[this.resourceName][this.resourceName][item.id] = item;\n      });\n    }\n    data.entities[this.resourceName].metadata = {\n      ...metadata,\n      data: data.result,\n    };\n    return data;\n  };\n\n  /**\n   * @param {object} resources - объект с исходными ресурсами\n   * @param {object} payload - массив с новыми ресурсами\n   * @desc метод для добавления в существующие ресурсы новых ресурсов\n   * */\n  updateResource = (resources, payload) => {\n    resources[this.resourceName][this.resourceName][payload.id] = payload;\n    return resources;\n  };\n\n  /**\n   * @param {object} payload\n   * @param {object} payload.errors\n   * @param {array} payload.errors.propName\n   * @param {string} payload.message\n   * */\n  normalizeError = (payload) => {\n    if(!payload.errors){\n      payload.errors = {};\n    }\n    return {\n      entities: {\n        ...payload,\n        message: [payload.message]\n      },\n      result: {errors: payload}\n    };\n  }\n\n}\n","\n\nexport const DeleteNormalizer = (Normalizer)=> (payload, resources, urlParams,) => {\n  if (payload.errors) {\n    return Normalizer.normalizeError(payload);\n  }\n  if (payload) {\n    return Normalizer.removePayloadFromResources(resources, urlParams.id);\n  }\n  return resources;\n};\n\n\nexport const CreateNormalizer = (Normalizer) => (payload, resources, urlParams) => {\n  if (!payload ) {\n    return null\n  }\n  if (payload.errors || payload.message) {\n    return Normalizer.normalizeError(payload);\n  }\n\n  if (resources.hasOwnProperty(Normalizer.resourceName)) {\n    return Normalizer.mergeResourceAndPayload(resources, [payload])\n  } else {\n    return Normalizer.payloadToResource([payload]);\n  }\n};\n\nexport const UpdateNormalizer = (Normalizer) => (payload, resources) => {\n  if (payload.errors || payload.message) {\n    return Normalizer.normalizeError(payload);\n  }\n  if (payload) {\n    return Normalizer.updateResource(resources, payload);\n  }\n  return resources;\n};\n\nexport const GetListNormalizer = (Normalizer) => (payload) => {\n  if (!payload && payload.error) {\n    return null;\n  }\n  if (Array.isArray(payload)) {\n    return Normalizer.payloadToResource(payload);\n  } else {\n    return Normalizer.payloadToResource(payload.data, payload);\n  }\n};\n\nexport const GetByIdNormalizer = (Normalizer) => (payload) => Normalizer.payloadToResource([payload])\n","import React from \"react\";\nimport {FormFeedback, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, Label} from \"reactstrap\";\n\nexport const TextField = ({input, label, type, placeholder, required, icon, meta: {touched, error}}) => (\n  <FormGroup className={touched ? error ? '' : 'was-validated' : ''}>\n    {\n      label && <Label>{label}</Label>\n    }\n    <InputGroup className=\"mb-3\">\n      {\n        icon &&\n        <InputGroupAddon addonType=\"prepend\">\n          <InputGroupText>\n            <i className={icon}/>\n          </InputGroupText>\n        </InputGroupAddon>\n      }\n\n      <Input\n        {...input}\n        type={type}\n        valid={touched ? !error : false}\n        className={touched ? error ? 'form-control-warning is-invalid' : '' : ''}\n        placeholder={placeholder || label}\n        required={required}/>\n      <FormFeedback\n        valid={touched ? !error : false}\n        className=\"help-block\">\n        {error}\n      </FormFeedback>\n    </InputGroup>\n\n  </FormGroup>)\n\nexport default TextField;\n","\n/**\n * @param {object} error\n * @param {object} error.errors\n * @param {array} error.message\n * */\nexport const normalizeSubmissionError = (error) => {\n  const data = {\n    _error: error.message ? error.message[0] : null,\n  };\n  for (let prop in error.errors) {\n    if (Array.isArray(error.errors[prop])) {\n      data[prop] = error.errors[prop][0];\n    }\n  }\n  return data;\n}\n","export const required = value => {\n  return (value ? undefined : 'Обязательно для заполнения');\n};\n","import React, {Component} from 'react';\nimport {Alert, FormGroup, Input, Label} from \"reactstrap\";\n\n\nexport class FormSelect extends Component {\n\n  static defaultProps = {\n    valueKey: 'id',\n    labelKey: 'name',\n  };\n\n  componentDidMount() {\n    const {\n      input,\n      defaultValue,\n    } = this.props;\n\n    if(!input.value && defaultValue){\n      input.onChange(defaultValue);\n    }\n\n  }\n\n  render() {\n    const {\n      input,\n      label,\n      type,\n      data,\n      meta: {touched, error},\n      valueKey,\n      labelKey,\n    } = this.props;\n    return (\n      <FormGroup>\n        <Label>{label}</Label>\n        <Input type={type} {...input} >\n          <option>выберите категорию...</option>\n          {\n            Array.isArray(data) && data.map((item, index) => (<option\n              key={index}\n              selected={item[valueKey] === input.value}\n              value={item[valueKey]}>\n              {item[labelKey]}\n            </option>))\n          }\n        </Input>\n        {\n          touched && error &&\n          <Alert color=\"danger\">\n            {error}\n          </Alert>\n\n        }\n      </FormGroup>\n    );\n  }\n}\n\n\nexport default FormSelect;\n","import {createResource} from '@brigad/redux-rest-easy';\nimport {NormalizationPayload} from \"../.helpers/ResourceHelper\";\nimport config from \"../../../config\";\nimport {handleStatusCode} from \"../.helpers/handleStatusCode\";\nimport {requestDELETE, requestGET, requestPOST, requestPUT} from \"../.helpers/networkHelpers\";\nimport {DeleteNormalizer} from \"../.helpers/normalizerHelpers\";\n\n\nexport const TILES_RESOURCE_NAME = 'tiles';\n\nconst Normalizer = new NormalizationPayload(TILES_RESOURCE_NAME);\n\n\nexport const TilesResource = createResource(TILES_RESOURCE_NAME)({\n  createTile: {\n    method: 'POST',\n    url: `${config.base}${config.api.tile}`,\n    normalizer: (payload, resources, urlParams, query, body, otherArgs) => {\n      console.log('createTile: ', payload, resources, urlParams,query, body, otherArgs);\n      if (!payload ) {\n        return null\n      }\n      if (payload.errors || payload.message) {\n        return Normalizer.normalizeError(payload);\n      }\n\n      if (resources.hasOwnProperty(TILES_RESOURCE_NAME)) {\n        return Normalizer.mergeResourceAndPayload(resources, [payload])\n      } else {\n        return Normalizer.payloadToResource([payload]);\n      }\n    },\n    networkHelpers: {\n      handleStatusCode:(response)=>{\n        handleStatusCode(response)\n      },\n      requestPOST: requestPOST\n    },\n  },\n  deleteTile: {\n    method: 'DELETE',\n    url: `${config.base}${config.api.tile}/::id`,\n    normalizer: DeleteNormalizer(Normalizer),\n    networkHelpers: {\n      handleStatusCode,\n      requestDELETE: requestDELETE,\n    },\n  },\n  getTile: {\n    method: 'GET',\n    url: `${config.base}${config.api.tile}/::id`,\n    normalizer: (payload) => Normalizer.payloadToResource([payload]),\n    networkHelpers: {\n      handleStatusCode,\n      requestGET: requestGET,\n    },\n  },\n  getTiles: {\n    method: 'GET',\n    url: `${config.base}${config.api.tiles}`,\n    normalizer: (payload) => {\n      if (!payload && payload.error) {\n        return null;\n      }\n      if (Array.isArray(payload)) {\n        return Normalizer.payloadToResource(payload);\n      } else {\n        return Normalizer.payloadToResource(payload.data, payload);\n      }\n    },\n    networkHelpers: {\n      handleStatusCode,\n      requestGET: requestGET,\n    },\n  },\n  updateTile: {\n    method: 'PUT',\n    url: `${config.base}${config.api.tile}/::id`,\n    normalizer: (payload, resources) => {\n      if (payload.errors) {\n        return Normalizer.normalizeError(payload);\n      }\n      if (payload) {\n        return Normalizer.updateResource(resources, payload);\n      }\n      return resources;\n    },\n    networkHelpers: {\n      handleStatusCode,\n      requestPUT: requestPUT,\n    },\n  },\n});\n\n\nconst {\n  actions: {\n    createTile: {\n      perform: CreateTileAction,\n    },\n    deleteTile: {\n      perform: DeleteTileAction,\n    },\n    getTile: {\n      perform: GetTileAction,\n    },\n    getTiles: {\n      perform: GetTilesAction,\n    },\n    updateTile: {\n      perform: UpdateTileAction,\n    },\n  },\n  selectors: {\n    resource: {\n      getResource: GetTiles,\n      getResourceById: GetTileById,\n    },\n    createTile: {\n      request: {\n        getResource: CreateTileGetResource,\n        isPerforming: isRetrievingCreateTile,\n      }\n    },\n    deleteTile: {\n      request: {\n        getResource: DeleteTileGetResource,\n      }\n    },\n    getTile: {\n      request: {\n        getResource: GetTileGetResource,\n        isPerforming: isRetrievingGetTile,\n      }\n    },\n    getTiles: {\n      request: {\n        getResource: GetTilesGetResource,\n        isPerforming: isRetrievingGetTiles,\n      }\n    },\n    updateTile: {\n      request: {\n        getResource: UpdateTileGetResource,\n        isPerforming: isRetrievingUpdateTile,\n      }\n    },\n  }\n} = TilesResource;\n\nexport {\n  CreateTileAction,\n  DeleteTileAction,\n  GetTileAction,\n  GetTilesAction,\n  UpdateTileAction,\n\n  CreateTileGetResource,\n  DeleteTileGetResource,\n  GetTileGetResource,\n  GetTilesGetResource,\n  UpdateTileGetResource,\n  isRetrievingGetTile,\n  isRetrievingGetTiles,\n  GetTiles,\n  GetTileById,\n\n  isRetrievingUpdateTile,\n  isRetrievingCreateTile,\n}\n","import React, {Component} from 'react';\nimport {FormGroup, Label} from \"reactstrap\";\nimport DatePicker  from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {dateToFormat} from \"../../helpers/dateToFormat\";\n\n\n\n\nexport class FormDateTimePicker extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n\n  handleChange(value) {\n    const {input: {onChange}} = this.props;\n    return onChange(dateToFormat(value));\n  }\n\n  render() {\n    const {label, input: {value}} = this.props;\n\n    return (\n      <div className=\"controls\">\n        <FormGroup>\n          <Label>{label}</Label>\n          <DatePicker\n            locale={'ru'}\n            minDate={new Date()}\n            selected={new Date(value || new Date() )}\n            onChange={this.handleChange}\n            className={'form-control full-width'}\n          />\n        </FormGroup>\n      </div>\n    );\n  }\n\n}\n\n\nexport default FormDateTimePicker;\n","import {format} from 'date-fns/esm'\n\nexport const DEFAULT_DATE_FORMAT = \"yyyy-MM-d h:mm:ss\";\n\nexport const dateToFormat = (date) => {\n  return format(date, DEFAULT_DATE_FORMAT);\n};\n","import React from 'react';\nimport {FormGroup, Input, Label} from \"reactstrap\";\n\nexport const FormInputColor = ({input, label, type, meta: {touched, error}}) => {\n    return (\n        <div className=\"controls\">\n            <FormGroup>\n                <Label>{label}</Label>\n                <Input style={{    padding: 'inherit',\n                    height: '35px'}} type={type} {...input}/>\n            </FormGroup>\n            <p className=\"help-block\">{touched && error && <span>{error}</span>}</p>\n        </div>\n    )\n};\n\nexport default FormInputColor;\n","import React, {Component} from 'react';\nimport {Col, FormGroup, Row, Button, Alert} from \"reactstrap\";\nimport {Field, reduxForm, SubmissionError} from \"redux-form\";\nimport FormSelect from \"../../../../../../components/Form/FormSelect\";\nimport FormDateTimePicker from \"../../../../../../components/FormDateTimePicker/FormDateTimePicker\";\nimport FormInputColor from \"../../../../../../components/Form/FormInputColor\";\nimport {TextField} from \"../../../../../../components/TextField/TextField\";\nimport {connect as connectRestEasy} from \"@brigad/redux-rest-easy\";\n\nimport {\n  CreateTileAction,\n  isRetrievingCreateTile, isRetrievingUpdateTile,\n  UpdateTileAction\n} from \"../../../../../../store/reduxRestEasy/Tiles/TilesResource\";\nimport {normalizeSubmissionError} from \"../../../../../../helpers/normalizeSubmissionError\";\nimport {withRouter} from \"react-router-dom\";\nimport {required} from \"../../../../../../validation/required\";\n\n\nexport class TileEditorForm extends Component {\n\n  onSubmit = (values) => {\n    const {history} = this.props;\n    if (values.hasOwnProperty('id')) {\n      return this.props.UpdateTileAction({\n        body: values,\n        urlParams: {\n          id: values.id,\n        }\n      })\n        .then(({normalizedPayload}) => {\n          if (normalizedPayload && normalizedPayload.errors) {\n            throw normalizedPayload;\n          }\n          history.push('/tile-list');\n        })\n        .catch(error => {\n          throw new SubmissionError(normalizeSubmissionError(error));\n        })\n    } else {\n      return this.props.CreateTileAction({\n        body: values,\n      })\n        .then(({normalizedPayload}) => {\n          if (normalizedPayload && normalizedPayload.errors) {\n            throw normalizedPayload;\n          }\n          history.push('/tile-list');\n        })\n        .catch(error => {\n          throw new SubmissionError(normalizeSubmissionError(error));\n        })\n    }\n  };\n\n  render() {\n    const {error, handleSubmit, tileTypes} = this.props;\n\n    return (\n      <form onSubmit={handleSubmit(this.onSubmit)}>\n        <Row>\n          <Col xs=\"12\" md=\"6\" lg=\"4\">\n            <Field\n              name=\"resource_id\"\n              component={TextField}\n              label=\"resource_id\"\n              type=\"text\"\n              validate={[required]}\n            />\n          </Col>\n          {\n            tileTypes &&\n            <Col xs=\"12\" md=\"6\" lg=\"4\">\n              <Field\n                name=\"resource_type\"\n                component={FormSelect}\n                valueKey={'name'}\n                label=\"resource_type\"\n                type=\"select\"\n                data={tileTypes}\n              />\n            </Col>\n          }\n          <Col xs=\"12\" md=\"6\" lg=\"4\">\n            <Field\n              name=\"cols\"\n              component={TextField}\n              label=\"cols\"\n              type=\"text\"\n            />\n          </Col>\n          <Col xs=\"12\" md=\"6\" lg=\"4\">\n            <Field\n              name=\"background_color\"\n              component={FormInputColor}\n              label=\"background_color\"\n              type=\"color\"\n            />\n          </Col>\n          <Col xs=\"12\" md=\"6\" lg=\"4\">\n            <Field\n              name=\"public_at\"\n              label=\"public_at\"\n              component={FormDateTimePicker}\n            />\n          </Col>\n        </Row>\n\n        {\n          error &&\n          <Row>\n            <Col xs=\"12\">\n              <Alert color=\"danger\">\n                {error}\n              </Alert>\n            </Col>\n          </Row>\n\n        }\n\n        <Row>\n          <Col xs=\"6\">\n            <div className=\"controls\">\n              <FormGroup>\n                <Button\n                  color=\"primary\"\n                  type=\"submit\"\n                  className=\"px-4\"\n                  // disabled={pristine || submitting}\n                >Сохранить</Button>\n              </FormGroup>\n            </div>\n          </Col>\n        </Row>\n      </form>\n    )\n  }\n};\n\nTileEditorForm.propTypes = {};\n\nTileEditorForm.defaultProps = {};\n\n\nTileEditorForm = reduxForm({\n  form: 'TileEditorForm'\n})(TileEditorForm);\n\nTileEditorForm = connectRestEasy(\n  (state, ownProps) => ({\n    isRetrievingCreateTile: isRetrievingCreateTile(state, ownProps),\n    isRetrievingUpdateTile: isRetrievingUpdateTile(state, ownProps),\n  }),\n  dispatch => ({\n    CreateTileAction: (options) => dispatch(CreateTileAction(options)),\n    UpdateTileAction: (options) => dispatch(UpdateTileAction(options)),\n  })\n)(TileEditorForm);\n\nTileEditorForm = withRouter(TileEditorForm);\n\n\nexport default TileEditorForm;\n","import {createResource} from '@brigad/redux-rest-easy';\nimport {NormalizationPayload} from \"../.helpers/ResourceHelper\";\nimport config from \"../../../config\";\nimport {handleStatusCode} from \"../.helpers/handleStatusCode\";\nimport {requestDELETE, requestGET, requestPOST, requestPUT} from \"../.helpers/networkHelpers\";\nimport {DeleteNormalizer} from \"../.helpers/normalizerHelpers\";\n\n\nexport const TILE_TYPES_RESOURCE_NAME = 'tileTypes';\n\nconst Normalizer = new NormalizationPayload(TILE_TYPES_RESOURCE_NAME);\n\n\nexport const TileTypesResource = createResource(TILE_TYPES_RESOURCE_NAME)({\n  createTileType: {\n    method: 'POST',\n    url: `${config.base}${config.api.tile_types}`,\n    normalizer: (payload, resources, urlParams) => {\n      if (!payload) {\n        return null\n      }\n      if (payload.errors) {\n        return Normalizer.normalizeError(payload);\n      }\n\n      if (resources.hasOwnProperty(TILE_TYPES_RESOURCE_NAME)) {\n        return Normalizer.mergeResourceAndPayload(resources, [payload])\n      } else {\n        return Normalizer.payloadToResource([payload]);\n      }\n    },\n    networkHelpers: {\n      handleStatusCode,\n      requestPOST: requestPOST\n    },\n  },\n  deleteTileType: {\n    method: 'DELETE',\n    url: `${config.base}${config.api.tile_types}/::id`,\n    normalizer: DeleteNormalizer(Normalizer),\n\n    networkHelpers: {\n      handleStatusCode,\n      requestDELETE: requestDELETE,\n    },\n  },\n  getTileType: {\n    method: 'GET',\n    url: `${config.base}${config.api.tile_types}/::id`,\n    normalizer: (payload) => Normalizer.payloadToResource([payload]),\n    networkHelpers: {\n      handleStatusCode,\n      requestGET: requestGET,\n    },\n  },\n  getTileTypes: {\n    method: 'GET',\n    url: `${config.base}${config.api.tile_types}`,\n    normalizer: (payload) => {\n      if (!payload && payload.error) {\n        return null;\n      }\n      if (Array.isArray(payload)) {\n        return Normalizer.payloadToResource(payload.map((item,index) => ({id: index, name: item})));\n      } else {\n        return Normalizer.payloadToResource(payload.data, payload);\n      }\n    },\n    networkHelpers: {\n      handleStatusCode,\n      requestGET: requestGET,\n    },\n  },\n  updateTileType: {\n    method: 'PUT',\n    url: `${config.base}${config.api.tile_types}/::id`,\n    normalizer: (payload, resources) => {\n      if (payload.errors) {\n        return Normalizer.normalizeError(payload);\n      }\n      if (payload) {\n        return Normalizer.updateResource(resources, payload);\n      }\n      return resources;\n    },\n    networkHelpers: {\n      handleStatusCode,\n      requestPUT: requestPUT,\n    },\n  },\n});\n\n\nconst {\n  actions: {\n    createTileType: {\n      perform: CreateTileTypeAction,\n    },\n    deleteTileType: {\n      perform: DeleteTileTypeAction,\n    },\n    getTileType: {\n      perform: GetTileTypeAction,\n    },\n    getTileTypes: {\n      perform: GetTileTypesAction,\n    },\n    updateTileType: {\n      perform: UpdateTileTypeAction,\n    },\n  },\n  selectors: {\n    resource: {\n      getResource: GetTileTypes,\n      getResourceById: GetTileTypeById,\n    },\n    createTileType: {\n      request: {\n        getResource: CreateTileTypeGetResource,\n        isPerforming: isRetrievingCreateTileType,\n      }\n    },\n    deleteTileType: {\n      request: {\n        getResource: DeleteTileTypeGetResource,\n      }\n    },\n    getTileType: {\n      request: {\n        getResource: GetTileTypeGetResource,\n        isPerforming: isRetrievingGetTileType,\n      }\n    },\n    getTileTypes: {\n      request: {\n        getResource: GetTileTypesGetResource,\n        isPerforming: isRetrievingGetTileTypes,\n      }\n    },\n    updateTileType: {\n      request: {\n        getResource: UpdateTileTypeGetResource,\n        isPerforming: isRetrievingUpdateTileType,\n      }\n    },\n  }\n} = TileTypesResource;\n\nexport {\n  CreateTileTypeAction,\n  DeleteTileTypeAction,\n  GetTileTypeAction,\n  GetTileTypesAction,\n  UpdateTileTypeAction,\n\n  CreateTileTypeGetResource,\n  DeleteTileTypeGetResource,\n  GetTileTypeGetResource,\n  GetTileTypesGetResource,\n  UpdateTileTypeGetResource,\n  isRetrievingGetTileType,\n  isRetrievingGetTileTypes,\n  GetTileTypes,\n  GetTileTypeById,\n\n  isRetrievingUpdateTileType,\n  isRetrievingCreateTileType,\n}\n","import React, {Component} from 'react';\nimport {TileEditorForm} from \"./Components/TileEditorForm/TileEditorForm\";\nimport {connect as connectRestEasy} from \"@brigad/redux-rest-easy\";\nimport {\n  GetTileAction,\n  GetTileById,\n  isRetrievingGetTile,\n  TILES_RESOURCE_NAME\n} from \"../../../../store/reduxRestEasy/Tiles/TilesResource\";\nimport {\n  GetTileTypes,\n  GetTileTypesAction,\n  isRetrievingGetTileTypes\n} from \"../../../../store/reduxRestEasy/TileTypes/TileTypesResource\";\n\nexport class TileEditor extends Component {\n\n  componentWillMount() {\n    const {match: {params}, GetTileAction, GetTileTypesAction} = this.props;\n    if (params && params.id) {\n      GetTileAction({\n        urlParams: {\n          id: params.id,\n        }\n      });\n    }\n    GetTileTypesAction();\n  }\n\n\n  render() {\n    const {\n      tile,\n      tileTypes,\n      match: {params},\n      isRetrievingGetTile,\n      isRetrievingGetTileTypes\n    } = this.props;\n    if (isRetrievingGetTile || isRetrievingGetTileTypes) {\n      return <div>Loading....</div>\n    }\n    if (!tileTypes.length) {\n      return null;\n    }\n    let initialValues = {\n      initialValues: params && params.id && tile(params.id)\n    };\n    const data = tileTypes && Object.values(tileTypes[0]);\n    return (\n      <div className=\"animated fadeIn\">\n        <TileEditorForm tileTypes={data} {...initialValues}/>\n      </div>\n    )\n  }\n}\n\nTileEditor = connectRestEasy(\n  (state, ownProps) => ({\n    tileTypes: GetTileTypes(state, ownProps),\n    tile: (id) => {\n      const data = GetTileById(state, TILES_RESOURCE_NAME, id);\n      console.log(data);\n      if (data) {\n        return data[id];\n      }\n      return null;\n    },\n    isRetrievingGetTileTypes: isRetrievingGetTileTypes(state, ownProps),\n    isRetrievingGetTile: isRetrievingGetTile(state, ownProps),\n  }),\n  dispatch => ({\n    GetTileAction: (options) => dispatch(GetTileAction(options)),\n    GetTileTypesAction: (options) => dispatch(GetTileTypesAction(options)),\n  })\n)(TileEditor);\n\nexport default TileEditor;\n"],"sourceRoot":""}