{"version":3,"sources":["config.js","store/reduxRestEasy/.helpers/networkHelpers.js","history.js","store/reduxRestEasy/.helpers/handleStatusCode.js","store/reduxRestEasy/.helpers/ResourceHelper.js","store/reduxRestEasy/.helpers/normalizerHelpers.js","components/PageContainer/PageContainer.js","components/TextField/TextField.js","helpers/normalizeSubmissionError.js","components/Form/FormSelect.js","store/reduxRestEasy/Slides/SlidesResource.js","components/Form/form_ckeditor.js","components/Checkbox/Checkbox.js","views/Slides/SlidesEditor/Components/SlidePreviewVideo/SlidePreviewVideo.js","views/Slides/SlidesEditor/Components/SlidePreviewImage/SlidePreviewImage.js","views/Slides/SlidesEditor/Components/SlidePreviewContent/SlidePreviewContent.js","views/Slides/PropTypes/index.js","shared/constants.js","views/Slides/SlidesEditor/Components/SlidePreview/SlidePreview.js","views/Slides/SlidesEditor/Components/UploadFile/UploadFile.js","views/Slides/SlidesEditor/Components/UploadVideo/UploadVideo.js","views/Slides/SlidesEditor/Components/UploadImage/UploadImage.js","views/Slides/SlidesEditor/Components/SlideBodyVideo/SlideBodyVideo.js","views/Slides/SlidesEditor/Components/SlideBodyImage/SlideBodyImage.js","views/Slides/SlidesEditor/Components/FormSlidesEditor/FormSlidesEditor.js","views/Slides/SlidesEditor/Components/SlideParseBody/SlideParseBody.js","views/Slides/SlidesEditor/index.js"],"names":["__webpack_exports__","base","api","login","logout","posts","post","categories","category","slides","tiles","tile_types","tile","nomenclature","nomenclatures","nomenclatureCharacteristic","typesOfNomenclature","fileupload","requestPOST","body","Object","C_nodeServer_strikepro_adminpanel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","method","credentials","headers","Accept","Content-type","JSON","stringify","requestGET","requestDELETE","requestPUT","history__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","BrowserHistory","createBrowserHistory","d","handleStatusCode","_history__WEBPACK_IMPORTED_MODULE_0__","response","status","history","push","NormalizationPayload","resourceName","_this","this","C_nodeServer_strikepro_adminpanel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","mergeResourceAndPayload","resources","payload","forEach","item","id","metadata","data","concat","C_nodeServer_strikepro_adminpanel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","removePayloadFromResources","payloadID","console","log","filter","warn","payloadToResource","_this$resourceName","arguments","length","undefined","entities","C_nodeServer_strikepro_adminpanel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","result","updateResource","normalizeError","errors","message","DeleteNormalizer","Normalizer","urlParams","PageContainer","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","_ref","header","children","footer","a","createElement","className","xs","TextField","reactstrap__WEBPACK_IMPORTED_MODULE_7__","input","label","type","placeholder","required","icon","_ref$meta","meta","touched","error","addonType","assign","valid","normalizeSubmissionError","_error","prop","Array","isArray","FormSelect","_Component","C_nodeServer_strikepro_adminpanel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","C_nodeServer_strikepro_adminpanel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_nodeServer_strikepro_adminpanel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","C_nodeServer_strikepro_adminpanel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_nodeServer_strikepro_adminpanel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","_this$props","props","_this$props$meta","valueKey","labelKey","react__WEBPACK_IMPORTED_MODULE_5___default","reactstrap__WEBPACK_IMPORTED_MODULE_8__","map","index","selected","reactstrap__WEBPACK_IMPORTED_MODULE_9__","color","Component","defaultProps","CreateSlideAction","DeleteSlideAction","GetSlideAction","GetSlidesAction","UpdateSlideAction","isRetrievingGetSlide","isRetrievingGetSlides","GetSlides","GetSlideById","isRetrievingUpdateSlide","isRetrievingCreateSlide","_brigad_redux_rest_easy__WEBPACK_IMPORTED_MODULE_0__","_helpers_ResourceHelper__WEBPACK_IMPORTED_MODULE_1__","_config__WEBPACK_IMPORTED_MODULE_2__","_helpers_handleStatusCode__WEBPACK_IMPORTED_MODULE_3__","_helpers_networkHelpers__WEBPACK_IMPORTED_MODULE_4__","_helpers_normalizerHelpers__WEBPACK_IMPORTED_MODULE_5__","SlidesResource","createResource","createSlide","url","config","normalizer","hasOwnProperty","networkHelpers","deleteSlide","getSlide","getSlides","updateSlide","actions","perform","selectors","resource","getResource","getResourceById","request","isPerforming","FormCKEditor","C_nodeServer_strikepro_adminpanel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","C_nodeServer_strikepro_adminpanel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","C_nodeServer_strikepro_adminpanel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","initialState","react__WEBPACK_IMPORTED_MODULE_6___default","react_ckeditor_component__WEBPACK_IMPORTED_MODULE_7___default","activeClass","language","filebrowserBrowseUrl","filebrowserImageBrowseUrl","filebrowserUploadUrl","filebrowserImageUploadUrl","imageUploadUrl","scriptUrl","content","events","change","evt","onChange","editor","getData","onSelect","cancel","paste","afterPaste","fileUploadRequest","xhr","fileLoader","setRequestHeader","withCredentials","fileUploadResponse","reactstrap__WEBPACK_IMPORTED_MODULE_10__","isInit","Checkbox","check","htmlFor","name","SliderPreviewVideo","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","nextProps","nextState","shallowequal","video","document","getElementById","load","play","e","react_default","width","loop","muted","autoPlay","values","src","React","SliderPreviewImage","image","alt","draggable","contentPosition","PropTypes","string","bool","top-left","top-middle","top-right","middle-left","middle-middle","middle-right","bottom-left","bottom-middle","bottom-right","slidesItemCaptionClassName","backDrop","position","classNames","defineProperty","slides_item-caption","slides_item-caption--back-drop","getContentPosition","SlidePreviewContent","buttonLabel","buttonLink","ReactHtmlParser","href","BG_SLIDER_TYPE_IMAGE","BG_SLIDER_TYPE_VIDEO","SlidePreview","_this$props$values","backgroundType","Card","CardHeader","CardBody","SlidePreviewImage","Components_SlidePreviewContent_SlidePreviewContent","SlidePreviewVideo","UploadFile","isLoading","uploadFile","accept","errorSubmit","FormGroup","Button","style","block","opacity","top","right","bottom","left","multiple","FormFeedback","UploadVideo","setNewVideoInStore","fileType","folder","_this$props$input","indexOf","objectSpread","target","files","replace","setState","formData","FormData","append","fetch","then","statusText","json","catch","_this$state","Components_UploadFile_UploadFile","get","UploadImage","text","parse","SlideBodyVideo","SlideBodyImage","FormSlidesEditor","_getPrototypeOf2","_len","args","_key","getSlideBody","renderToString","Components_SlideBodyImage_SlideBodyImage","Components_SlideBodyVideo_SlideBodyVideo","onSubmit","normalizedPayload","SubmissionError","_ref2","handleSubmit","pristine","submitting","SlidePreview_SlidePreview","Row","Col","Field","component","ref","toolbarGroups","groups","Alert","md","lg","connect","getFormValues","reduxForm","form","connectRestEasy","ownProps","dispatch","options","withRouter","trim","SlideParseBody","domBody","DOMParser","parseFromString","getElementsByTagName","GetBGTypeSlideBody","getElementsByClassName","GetImageFromSlideBody","i","GetVideoFromSlideBody","CheckBackDropSlideBody","innerHTML","GetContentSlideBody","GetPositionContentSlideBody","button","textContent","GetButtonSlideBody","SlideEditor","createInitialValues","params","match","slide","initialValues","Components_FormSlidesEditor_FormSlidesEditor"],"mappings":"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","file":"static/js/20.2beb4824.chunk.js","sourcesContent":["export default {\r\n  //base: window.location.hostname === 'localhost' ? 'https://dev.strikepro.ru' : '',\r\n  base: 'https://dev.strikepro.ru',\r\n  api: {\r\n    login: '/dashboard/auth/login',\r\n    logout: '/dashboard/auth/logout',\r\n\r\n    posts: '/dashboard/blog/posts',\r\n    post: '/dashboard/blog/post',\r\n\r\n    categories: '/dashboard/blog/categories',\r\n    category: '/dashboard/blog/category',\r\n\r\n    slides: '/dashboard/slides',\r\n\r\n    tiles: '/dashboard/mainfeeds',\r\n\r\n    tile_types: '/dashboard/mainfeed/types',\r\n    tile: '/dashboard/mainfeed',\r\n\r\n    nomenclature: '/dashboard/nomenclature',\r\n    nomenclatures: '/dashboard/nomenclatures',\r\n\r\n    nomenclatureCharacteristic: '/dashboard/nomenclature/characteristic',\r\n    typesOfNomenclature: '/dashboard/nomenclature/characteristic',\r\n    fileupload: '/dashboard/fileupload',\r\n  }\r\n}\r\n","export const requestPOST = (body) => {\r\n  return {\r\n    method: 'POST',\r\n    credentials: 'include',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-type': 'application/json',\r\n    },\r\n    ...(body? {body: JSON.stringify(body)} : {})\r\n\r\n  }\r\n};\r\n\r\nexport const requestGET = () => {\r\n  return {\r\n    method: 'GET',\r\n    credentials: 'include',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-type': 'application/json',\r\n    }\r\n  }\r\n};\r\n\r\nexport const requestDELETE = () => {\r\n  return {\r\n    method: 'DELETE',\r\n    credentials: 'include',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-type': 'application/json',\r\n    }\r\n  }\r\n};\r\n\r\nexport const requestPUT = (body) => {\r\n  return {\r\n    method: 'PUT',\r\n    credentials: 'include',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-type': 'application/json',\r\n    },\r\n    body: JSON.stringify(body),\r\n  }\r\n};\r\n","import {createBrowserHistory} from 'history';\r\n\r\nexport const BrowserHistory = createBrowserHistory();\r\n\r\nexport default BrowserHistory;\r\n","import history from \"../../../history\";\r\n\r\n\r\nexport const handleStatusCode = (response) => {\r\n  const {status} = response;\r\n  if (status === 401) {\r\n    history.push('/login');\r\n    return response\r\n  }\r\n\r\n  if (status === 404) {\r\n    history.push('/404');\r\n    return response\r\n  }\r\n\r\n\r\n  return response\r\n};\r\n\r\nexport default handleStatusCode;\r\n","export class NormalizationPayload {\r\n\r\n  resourceName = null;\r\n\r\n  constructor(resourceName) {\r\n    this.resourceName = resourceName;\r\n  }\r\n\r\n  /**\r\n   * @param {object} resources - объект с исходными ресурсами\r\n   * @param {array} payload - массив с новыми ресурсами\r\n   * @desc метод для добавления в существующие ресурсы новых ресурсов\r\n   * */\r\n  mergeResourceAndPayload = (resources, payload) => {\r\n    payload.forEach((item) => {\r\n      resources[this.resourceName][this.resourceName][item.id] = item;\r\n      resources[this.resourceName].metadata = {\r\n        data: [...resources[this.resourceName].metadata.data, item.id],\r\n      };\r\n    });\r\n    return resources;\r\n  };\r\n\r\n  /**\r\n   * @param {array} resources\r\n   * @param {string} payloadID\r\n   * @desc\r\n   * */\r\n  removePayloadFromResources = (resources, payloadID) => {\r\n    if (!payloadID) {\r\n      console.warn('payloadID undefined');\r\n      return resources;\r\n    }\r\n    console.log('removePayloadFromResources: ', this, resources, payloadID);\r\n    delete resources[this.resourceName][this.resourceName][payloadID];\r\n    resources[this.resourceName].metadata.data = resources[this.resourceName]\r\n      .metadata.data.filter(item => item !== payloadID);\r\n    return resources;\r\n  };\r\n\r\n  /**\r\n   * @param {array} payload\r\n   * @param {object} metadata\r\n   * @desc\r\n   * */\r\n  payloadToResource = (payload, metadata = {}) => {\r\n    const data = {\r\n      entities: {\r\n        [this.resourceName]: {\r\n          [this.resourceName]: {},\r\n          metadata: {}\r\n        },\r\n      },\r\n      result: []\r\n    };\r\n    if (payload) {\r\n      payload.forEach((item) => {\r\n        data.result.push(item.id);\r\n        data.entities[this.resourceName][this.resourceName][item.id] = item;\r\n      });\r\n    }\r\n    data.entities[this.resourceName].metadata = {\r\n      ...metadata,\r\n      data: data.result,\r\n    };\r\n    return data;\r\n  };\r\n\r\n  /**\r\n   * @param {object} resources - объект с исходными ресурсами\r\n   * @param {object} payload - массив с новыми ресурсами\r\n   * @desc метод для добавления в существующие ресурсы новых ресурсов\r\n   * */\r\n  updateResource = (resources, payload) => {\r\n    resources[this.resourceName][this.resourceName][payload.id] = payload;\r\n    return resources;\r\n  };\r\n\r\n  /**\r\n   * @param {object} payload\r\n   * @param {object} payload.errors\r\n   * @param {array} payload.errors.propName\r\n   * @param {string} payload.message\r\n   * */\r\n  normalizeError = (payload) => {\r\n    if(!payload.errors){\r\n      payload.errors = {};\r\n    }\r\n    return {\r\n      entities: {\r\n        ...payload,\r\n        message: [payload.message]\r\n      },\r\n      result: {errors: payload}\r\n    };\r\n  }\r\n\r\n}\r\n","\r\n\r\nexport const DeleteNormalizer = (Normalizer)=> (payload, resources, urlParams,) => {\r\n  if (payload.errors) {\r\n    return Normalizer.normalizeError(payload);\r\n  }\r\n  if (payload) {\r\n    return Normalizer.removePayloadFromResources(resources, urlParams.id);\r\n  }\r\n  return resources;\r\n};\r\n\r\n\r\nexport const CreateNormalizer = (Normalizer) => (payload, resources, urlParams) => {\r\n  if (!payload ) {\r\n    return null\r\n  }\r\n  if (payload.errors || payload.message) {\r\n    return Normalizer.normalizeError(payload);\r\n  }\r\n\r\n  if (resources.hasOwnProperty(Normalizer.resourceName)) {\r\n    return Normalizer.mergeResourceAndPayload(resources, [payload])\r\n  } else {\r\n    return Normalizer.payloadToResource([payload]);\r\n  }\r\n};\r\n\r\nexport const UpdateNormalizer = (Normalizer) => (payload, resources) => {\r\n  if (payload.errors || payload.message) {\r\n    return Normalizer.normalizeError(payload);\r\n  }\r\n  if (payload) {\r\n    return Normalizer.updateResource(resources, payload);\r\n  }\r\n  return resources;\r\n};\r\n\r\nexport const GetListNormalizer = (Normalizer) => (payload) => {\r\n  if (!payload && payload.error) {\r\n    return null;\r\n  }\r\n  if (Array.isArray(payload)) {\r\n    return Normalizer.payloadToResource(payload);\r\n  } else {\r\n    return Normalizer.payloadToResource(payload.data, payload);\r\n  }\r\n};\r\n\r\nexport const GetByIdNormalizer = (Normalizer) => (payload) => Normalizer.payloadToResource([payload])\r\n","import React from 'react';\r\nimport {Card, CardBlock, CardHeader, Col, Row, CardFooter} from \"reactstrap\";\r\nexport const PageContainer =({header, children, footer})=>(<div className=\"animated fadeIn\">\r\n  <Row>\r\n    <Col xs=\"12\">\r\n      <Card>\r\n        {\r\n          header &&\r\n          <CardHeader>\r\n            <strong>\r\n              {header}\r\n            </strong>\r\n          </CardHeader>\r\n        }\r\n        <CardBlock className={'card-body'}>\r\n          {children}\r\n        </CardBlock>\r\n        {\r\n          footer &&\r\n          <CardFooter className={'card-footer'}>\r\n            {footer}\r\n          </CardFooter>\r\n        }\r\n      </Card>\r\n    </Col>\r\n  </Row>\r\n</div>);\r\n\r\n\r\nexport default PageContainer;\r\n","import React from \"react\";\r\nimport {FormFeedback, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, Label} from \"reactstrap\";\r\n\r\nexport const TextField = ({input, label, type, placeholder, required, icon, meta: {touched, error}}) => (\r\n  <FormGroup className={touched ? error ? '' : 'was-validated' : ''}>\r\n    {\r\n      label && <Label>{label}</Label>\r\n    }\r\n    <InputGroup className=\"mb-3\">\r\n      {\r\n        icon &&\r\n        <InputGroupAddon addonType=\"prepend\">\r\n          <InputGroupText>\r\n            <i className={icon}/>\r\n          </InputGroupText>\r\n        </InputGroupAddon>\r\n      }\r\n\r\n      <Input\r\n        {...input}\r\n        type={type}\r\n        valid={touched ? !error : false}\r\n        className={touched ? error ? 'form-control-warning is-invalid' : '' : ''}\r\n        placeholder={placeholder || label}\r\n        required={required}/>\r\n      <FormFeedback\r\n        valid={touched ? !error : false}\r\n        className=\"help-block\">\r\n        {error}\r\n      </FormFeedback>\r\n    </InputGroup>\r\n\r\n  </FormGroup>)\r\n\r\nexport default TextField;\r\n","\r\n/**\r\n * @param {object} error\r\n * @param {object} error.errors\r\n * @param {array} error.message\r\n * */\r\nexport const normalizeSubmissionError = (error) => {\r\n  const data = {\r\n    _error: error.message ? error.message[0] : null,\r\n  };\r\n  for (let prop in error.errors) {\r\n    if (Array.isArray(error.errors[prop])) {\r\n      data[prop] = error.errors[prop][0];\r\n    }\r\n  }\r\n  return data;\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Alert, FormGroup, Input, Label} from \"reactstrap\";\r\n\r\n\r\nexport class FormSelect extends Component {\r\n\r\n  static defaultProps = {\r\n    valueKey: 'id',\r\n    labelKey: 'name',\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      input,\r\n      label,\r\n      type,\r\n      data,\r\n      meta: {touched, error},\r\n      valueKey,\r\n      labelKey,\r\n    } = this.props;\r\n    return (\r\n      <FormGroup>\r\n        <Label>{label}</Label>\r\n        <Input type={type} {...input} >\r\n          <option>выберите категорию...</option>\r\n          {\r\n            Array.isArray(data) && data.map((item, index) => (<option\r\n              key={index}\r\n              selected={item[valueKey] === input.value}\r\n              value={item[valueKey]}>\r\n              {item[labelKey]}\r\n            </option>))\r\n          }\r\n        </Input>\r\n        {\r\n          touched && error &&\r\n          <Alert color=\"danger\">\r\n            {error}\r\n          </Alert>\r\n\r\n        }\r\n      </FormGroup>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default FormSelect;\r\n","import {createResource} from '@brigad/redux-rest-easy';\r\nimport {NormalizationPayload} from \"../.helpers/ResourceHelper\";\r\nimport config from \"../../../config\";\r\nimport {handleStatusCode} from \"../.helpers/handleStatusCode\";\r\nimport {requestDELETE, requestGET, requestPOST, requestPUT} from \"../.helpers/networkHelpers\";\r\nimport {DeleteNormalizer} from \"../.helpers/normalizerHelpers\";\r\n\r\n\r\nconst RESOURCE_NAME = 'slides';\r\n\r\nconst Normalizer = new NormalizationPayload(RESOURCE_NAME);\r\n\r\n\r\nexport const SlidesResource = createResource(RESOURCE_NAME)({\r\n  createSlide: {\r\n    method: 'POST',\r\n    url: `${config.base}${config.api.slides}`,\r\n    normalizer: (payload, resources, urlParams) => {\r\n      if (!payload ) {\r\n        return null\r\n      }\r\n      if (payload.errors || payload.message) {\r\n        return Normalizer.normalizeError(payload);\r\n      }\r\n\r\n      if (resources.hasOwnProperty(RESOURCE_NAME)) {\r\n        return Normalizer.mergeResourceAndPayload(resources, [payload])\r\n      } else {\r\n        return Normalizer.payloadToResource([payload]);\r\n      }\r\n    },\r\n    networkHelpers: {\r\n      handleStatusCode,\r\n      requestPOST: requestPOST\r\n    },\r\n  },\r\n  deleteSlide: {\r\n    method: 'DELETE',\r\n    url: `${config.base}${config.api.slides}/::id`,\r\n    normalizer: DeleteNormalizer(Normalizer),\r\n    networkHelpers: {\r\n      handleStatusCode,\r\n      requestDELETE: requestDELETE,\r\n    },\r\n  },\r\n  getSlide: {\r\n    method: 'GET',\r\n    url: `${config.base}${config.api.slides}/::id`,\r\n    normalizer: (payload) => Normalizer.payloadToResource([payload]),\r\n    networkHelpers: {\r\n      handleStatusCode,\r\n      requestGET: requestGET,\r\n    },\r\n  },\r\n  getSlides: {\r\n    method: 'GET',\r\n    url: `${config.base}${config.api.slides}`,\r\n    normalizer: (payload) => {\r\n      if (!payload && payload.error) {\r\n        return null;\r\n      }\r\n      if (Array.isArray(payload)) {\r\n        return Normalizer.payloadToResource(payload);\r\n      } else {\r\n        return Normalizer.payloadToResource(payload.data, payload);\r\n      }\r\n    },\r\n    networkHelpers: {\r\n      handleStatusCode,\r\n      requestGET: requestGET,\r\n    },\r\n  },\r\n  updateSlide: {\r\n    method: 'PUT',\r\n    url: `${config.base}${config.api.slides}/::id`,\r\n    normalizer: (payload, resources) => {\r\n      if (payload.errors) {\r\n        return Normalizer.normalizeError(payload);\r\n      }\r\n      if (payload) {\r\n        return Normalizer.updateResource(resources, payload);\r\n      }\r\n      return resources;\r\n    },\r\n    networkHelpers: {\r\n      handleStatusCode,\r\n      requestPUT: requestPUT,\r\n    },\r\n  },\r\n});\r\n\r\n\r\nconst {\r\n  actions: {\r\n    createSlide: {\r\n      perform: CreateSlideAction,\r\n    },\r\n    deleteSlide: {\r\n      perform: DeleteSlideAction,\r\n    },\r\n    getSlide: {\r\n      perform: GetSlideAction,\r\n    },\r\n    getSlides: {\r\n      perform: GetSlidesAction,\r\n    },\r\n    updateSlide: {\r\n      perform: UpdateSlideAction,\r\n    },\r\n  },\r\n  selectors: {\r\n    resource: {\r\n      getResource: GetSlides,\r\n      getResourceById: GetSlideById,\r\n    },\r\n    createSlide: {\r\n      request: {\r\n        getResource: CreateSlideGetResource,\r\n        isPerforming: isRetrievingCreateSlide,\r\n      }\r\n    },\r\n    deleteSlide: {\r\n      request: {\r\n        getResource: DeleteSlideGetResource,\r\n      }\r\n    },\r\n    getSlide: {\r\n      request: {\r\n        getResource: GetSlideGetResource,\r\n        isPerforming: isRetrievingGetSlide,\r\n      }\r\n    },\r\n    getSlides: {\r\n      request: {\r\n        getResource: GetSlidesGetResource,\r\n        isPerforming: isRetrievingGetSlides,\r\n      }\r\n    },\r\n    updateSlide: {\r\n      request: {\r\n        getResource: UpdateSlideGetResource,\r\n        isPerforming: isRetrievingUpdateSlide,\r\n      }\r\n    },\r\n  }\r\n} = SlidesResource;\r\n\r\nexport {\r\n  CreateSlideAction,\r\n  DeleteSlideAction,\r\n  GetSlideAction,\r\n  GetSlidesAction,\r\n  UpdateSlideAction,\r\n\r\n  CreateSlideGetResource,\r\n  DeleteSlideGetResource,\r\n  GetSlideGetResource,\r\n  GetSlidesGetResource,\r\n  UpdateSlideGetResource,\r\n  isRetrievingGetSlide,\r\n  isRetrievingGetSlides,\r\n  GetSlides,\r\n  GetSlideById,\r\n\r\n  isRetrievingUpdateSlide,\r\n  isRetrievingCreateSlide,\r\n}\r\n","import React, {Component} from 'react';\r\nimport CKEditor from \"react-ckeditor-component\";\r\nimport {Alert, FormGroup, Label} from \"reactstrap\";\r\n\r\nclass FormCKEditor extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      isInit: false,\r\n      editor: null\r\n    }\r\n  }\r\n\r\n  componentWillMount() {}\r\n\r\n\r\n  componentDidUpdate() {}\r\n\r\n\r\n  render() {\r\n    const {input, label, meta: {touched, error}, config} = this.props;\r\n\r\n    return (\r\n      <FormGroup>\r\n        <Label>{label}</Label>\r\n\r\n        <CKEditor\r\n          activeClass=\"p10\"\r\n          config={{\r\n            language: 'ru',\r\n\r\n            filebrowserBrowseUrl: 'http://new.strikepro.ru/ckfinder/browser',\r\n            filebrowserImageBrowseUrl: 'http://new.strikepro.ru/ckfinder/browser',\r\n\r\n            filebrowserUploadUrl:\r\n              'http://new.strikepro.ru/ckfinder/connector',\r\n            filebrowserImageUploadUrl:\r\n              'http://new.strikepro.ru/ckfinder/connector',\r\n            imageUploadUrl: '',\r\n            ...config,\r\n          }}\r\n          scriptUrl=\"//cdn.ckeditor.com/4.7.3/full/ckeditor.js\"\r\n          content={input.value}\r\n          events={{\r\n            \"change\": (evt) => {\r\n              return input.onChange(evt.editor.getData())\r\n            },\r\n            \"onSelect\": (evt) => {\r\n              console.log('onSelect:', evt);\r\n              evt.cancel();\r\n            },\r\n            \"paste\": (evt) => {\r\n              console.log('paste:', evt);\r\n              // evt.stop();\r\n            },\r\n            \"afterPaste\": (evt) => {\r\n              console.log('afterPaste:', evt);\r\n              // evt.stop();\r\n            },\r\n            \"fileUploadRequest\": (evt) => {\r\n              console.log('fileUploadRequest:', evt);\r\n              let xhr = evt.data.fileLoader.xhr;\r\n\r\n              xhr.setRequestHeader(\"Access-Control-Allow-Origin\", \"http://localhost:8080\");\r\n              xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n              xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n\r\n              xhr.withCredentials = true;\r\n              // evt.stop();\r\n            },\r\n            \"fileUploadResponse\": (evt) => {\r\n              console.log('fileUploadResponse:', evt);\r\n              // evt.stop();\r\n            },\r\n          }}\r\n        />\r\n        {\r\n          touched && error &&\r\n          <Alert color=\"danger\">\r\n            {error}\r\n          </Alert>\r\n\r\n        }\r\n      </FormGroup>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default FormCKEditor;\r\n","import React, {Component} from 'react';\r\nimport {Alert, FormGroup, Label} from \"reactstrap\";\r\n\r\n\r\nexport class Checkbox extends Component {\r\n    render() {\r\n        const {label, input, type, value, meta: {touched, error}} = this.props;\r\n        return (<FormGroup>\r\n            <div className=\"checkbox\">\r\n                <Label check={value === input.value} htmlFor=\"checkbox1\">\r\n                    <input type={type} {...input} name=\"checkbox1\"\r\n                           value={value}/> {label}\r\n                </Label>\r\n            </div>\r\n            {\r\n                touched && error &&\r\n                <Alert color=\"danger\">\r\n                    {error}\r\n                </Alert>\r\n            }\r\n        </FormGroup>)\r\n    }\r\n}\r\n\r\nexport default Checkbox;\r\n","import React from 'react';\r\nimport shallowequal from \"shallowequal\";\r\n\r\n\r\nexport class SliderPreviewVideo extends React.Component {\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return !shallowequal(nextProps.video, this.props.video)\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    try {\r\n      const video = document.getElementById('backgroundVideo');\r\n      if (video) {\r\n        video.load();\r\n        video.play();\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {video} = this.props;\r\n\r\n    return (<video width={'100%'} id=\"backgroundVideo\" loop=\"true\" muted=\"true\" autoPlay=\"true\">\r\n      {\r\n        video && Object.values(video)\r\n          .map(item => (<source src={item.src} type={item.type}/>))\r\n      }\r\n      Video not supported.\r\n    </video>)\r\n  }\r\n}\r\n\r\nexport default SliderPreviewVideo;\r\n","import React from 'react';\r\n\r\n\r\nexport const SliderPreviewImage = ({image}) => (<img\r\n  src={image}\r\n  alt=\"\"\r\n  className=\"slides_item-img\"\r\n  draggable=\"false\"\r\n/>);\r\n\r\nexport default SliderPreviewImage;\r\n","import React from 'react';\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport classNames from \"classnames\";\r\nimport {SlidePropTypes} from \"../../../PropTypes\";\r\n\r\nexport const contentPosition = {\r\n  'top-left': 'top-left slides_item-caption--top-left',\r\n  'top-middle': 'top-middle slides_item-caption--top-middle',\r\n  'top-right': 'top-right slides_item-caption--top-right',\r\n\r\n  'middle-left': 'middle-left slides_item-caption--middle-left',\r\n  'middle-middle': 'middle-middle slides_item-caption--middle-middle',\r\n  'middle-right': 'middle-right slides_item-caption--middle-right',\r\n\r\n  'bottom-left': 'bottom-left slides_item-caption--bottom-left',\r\n  'bottom-middle': 'bottom-middle slides_item-caption--bottom-middle',\r\n  'bottom-right': 'bottom-right slides_item-caption--bottom-right',\r\n};\r\n\r\nexport const getContentPosition = (position) => {\r\n  for (let prop in contentPosition) {\r\n    if (prop === position) {\r\n      return contentPosition[prop];\r\n    }\r\n  }\r\n  return contentPosition['middle-middle'];\r\n};\r\n\r\nconst slidesItemCaptionClassName = (backDrop = false, position = 'middle-center') => classNames({\r\n  'slides_item-caption': true,\r\n  'slides_item-caption--back-drop': backDrop,\r\n  [getContentPosition(position)]: true\r\n});\r\n\r\nexport const SlidePreviewContent = ({backDrop, position, body, buttonLabel, buttonLink}) => (<div\r\n  className={slidesItemCaptionClassName(backDrop, position)}\r\n>\r\n  {\r\n    body &&\r\n    <div className=\"slides_item-caption-content\">\r\n      {ReactHtmlParser(body)}\r\n    </div>\r\n  }\r\n  {\r\n    buttonLabel &&\r\n    <a href={buttonLink} className=\"button-base\">\r\n      {buttonLabel}\r\n    </a>\r\n  }\r\n</div>);\r\n\r\nSlidePreviewContent.propTypes = SlidePropTypes;\r\n\r\nexport default SlidePreviewContent;\r\n","import PropTypes from \"prop-types\";\r\n\r\n\r\nexport const SlidePropTypes = {\r\n  backgroundType: PropTypes.string,\r\n  position: PropTypes.string,\r\n  backDrop: PropTypes.bool,\r\n  buttonLabel: PropTypes.string,\r\n  buttonLink: PropTypes.string,\r\n  body:PropTypes.string,\r\n  image:PropTypes.string,\r\n};\r\n","\r\n\r\nexport const BG_SLIDER_TYPE_IMAGE = 'image';\r\nexport const BG_SLIDER_TYPE_VIDEO = 'video';\r\n","import React, {Component} from 'react';\r\nimport {Card, CardBody, CardHeader} from \"reactstrap\";\r\nimport shallowequal from 'shallowequal';\r\nimport SliderPreviewVideo from \"../SlidePreviewVideo/SlidePreviewVideo\";\r\nimport SliderPreviewImage from \"../SlidePreviewImage/SlidePreviewImage\";\r\nimport SlidePreviewContent from \"../SlidePreviewContent/SlidePreviewContent\";\r\nimport {BG_SLIDER_TYPE_IMAGE, BG_SLIDER_TYPE_VIDEO} from \"../../../../../shared/constants\";\r\n\r\n\r\nexport class SlidePreview extends Component {\r\n\r\n  static defaultProps = {\r\n    values:{\r\n      backgroundType: BG_SLIDER_TYPE_IMAGE,\r\n      image: '',\r\n    }\r\n  };\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return !shallowequal(nextProps.values, this.props.values);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      backgroundType,\r\n      image,\r\n    } = this.props.values;\r\n    return (<Card>\r\n      <CardHeader>\r\n        <strong>Превью</strong>\r\n      </CardHeader>\r\n      <CardBody>\r\n        {\r\n          backgroundType === BG_SLIDER_TYPE_IMAGE && <div className={'slides_item'}>\r\n            <SliderPreviewImage image={image}/>\r\n            <SlidePreviewContent {...this.props.values}/>\r\n          </div>\r\n        }\r\n        {\r\n          backgroundType === BG_SLIDER_TYPE_VIDEO && <div className={'slides_item'}>\r\n            <SliderPreviewVideo\r\n              video={image}\r\n            />\r\n            <SlidePreviewContent {...this.props.values}/>\r\n          </div>\r\n        }\r\n      </CardBody>\r\n    </Card>)\r\n  }\r\n}\r\n\r\nexport default SlidePreview;\r\n","import React from 'react'\r\nimport {Button, FormFeedback, FormGroup} from \"reactstrap\";\r\n\r\nexport const UploadFile = ({\r\n                             isLoading,\r\n                             uploadFile,\r\n                             accept,\r\n                             label,\r\n                             errorSubmit\r\n                           }) => (<FormGroup>\r\n  <Button\r\n    style={{\r\n      position: 'relative',\r\n    }}\r\n    type={'button'}\r\n    block\r\n    color=\"primary\"\r\n  >\r\n    <input\r\n      accept={accept}\r\n      type='file'\r\n      style={{\r\n        opacity: '0',\r\n        position: 'absolute',\r\n        top: '0',\r\n        right: '0',\r\n        bottom: '0',\r\n        left: '0',\r\n        width: '100%'\r\n      }}\r\n      onChange={uploadFile}\r\n      multiple\r\n    />\r\n    {\r\n      !isLoading &&\r\n      <i className=\"fa fa-upload\"/>\r\n    }\r\n    {\r\n      isLoading &&\r\n      <i className=\"fa fa-spin fa-circle-o-notch\"/>\r\n    }\r\n    &nbsp;{label}\r\n  </Button>\r\n  {\r\n    errorSubmit &&\r\n    <FormFeedback\r\n      className={errorSubmit ? 'btn-block' : ''}\r\n    >\r\n      {errorSubmit}\r\n    </FormFeedback>\r\n  }\r\n</FormGroup>);\r\n\r\n\r\nUploadFile.defaultProps = {\r\n  label: 'Загрузить',\r\n  isLoading: false,\r\n  errorSubmit: null,\r\n  accept: '',\r\n};\r\n\r\nexport default UploadFile;\r\n","import React, {Component} from 'react';\r\nimport UploadFile from \"../UploadFile/UploadFile\";\r\nimport config from \"../../../../../config\";\r\n\r\n\r\nconst fakeUploadFileServer = (formData) => {\r\n  return {\"status\": \"ok\", \"url\": `${formData.get('folder')}/${formData.get('file')}`}\r\n};\r\n\r\n\r\nexport class UploadVideo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n\r\n  get initialState() {\r\n    return {\r\n      isLoading: false,\r\n      errorSubmit: null,\r\n    }\r\n  }\r\n\r\n  setNewVideoInStore = (response, fileType, folder) => {\r\n    const {value, onChange} = this.props.input;\r\n    if (value.hasOwnProperty(fileType)) {\r\n      if (value[fileType] !== response.url) {\r\n        onChange({\r\n          [fileType]: {\r\n            type: fileType,\r\n            src: response.url,\r\n          }\r\n        })\r\n      }\r\n    } else {\r\n      for (let prop in value) {\r\n        if (value[prop].src.indexOf(folder) !== -1) {\r\n          onChange({\r\n            ...value,\r\n            [fileType]: {\r\n              type: fileType,\r\n              src: response.url,\r\n            }\r\n          });\r\n          return;\r\n        }\r\n      }\r\n      onChange({\r\n        [fileType]: {\r\n          type: fileType,\r\n          src: response.url,\r\n        }\r\n      })\r\n    }\r\n  };\r\n\r\n  uploadFile = e => {\r\n\r\n    const fileTypeRegexp = /[.mp4|.ogg|.webm]/g;\r\n    const fileType = e.target.files[0].type;\r\n    const folder = e.target.files[0].name.replace(fileTypeRegexp, '');\r\n\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    const formData = new FormData();\r\n\r\n    formData.append('file', e.target.files[0]);\r\n    formData.append('folder', folder);\r\n\r\n    // let response = fakeUploadFileServer(formData);\r\n\r\n\r\n    fetch(`${config.base}${config.api.fileupload}`,\r\n      {\r\n        credentials: 'include',\r\n        method: 'POST',\r\n        body: formData\r\n      })\r\n      .then(response => {\r\n        console.log('response: ', response);\r\n        if (response.status >= 400) {\r\n          this.setState({\r\n            isLoading: false,\r\n            errorSubmit: response.statusText,\r\n          })\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(response => {\r\n        console.log('response: ', response);\r\n        if (response.status === 'ok') {\r\n          this.setNewVideoInStore(response, fileType, folder);\r\n        } else {\r\n          this.setState({\r\n            isLoading: false,\r\n            errorSubmit: 'Неизвестная ошибка',\r\n          })\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n        this.setState({\r\n          isLoading: false,\r\n        })\r\n      })\r\n  };\r\n\r\n\r\n  render() {\r\n    const {isLoading, errorSubmit} = this.state;\r\n    console.log(this.state);\r\n    return (<UploadFile\r\n      label={'Загрузка видео'}\r\n      isLoading={isLoading}\r\n      errorSubmit={errorSubmit}\r\n      uploadFile={this.uploadFile}\r\n      accept={\"video/mp4,video/ogg,video/webm\"}\r\n    />)\r\n  }\r\n\r\n}\r\n\r\nexport default UploadVideo;\r\n","import React, {Component} from 'react';\r\nimport UploadFile from \"../UploadFile/UploadFile\";\r\nimport config from \"../../../../../config\";\r\n\r\n\r\nexport class UploadImage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n\r\n  get initialState() {\r\n    return {\r\n      isLoading: false,\r\n      errorSubmit: null,\r\n    }\r\n  }\r\n\r\n  uploadFile = e => {\r\n    const {onChange} = this.props.input;\r\n\r\n    const fileTypeRegexp = /[.mp4|.ogg|.webm]/g;\r\n    const folder = e.target.files[0].name.replace(fileTypeRegexp, '');\r\n\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    const formData = new FormData();\r\n\r\n    formData.append('file', e.target.files[0]);\r\n    formData.append('folder', folder);\r\n\r\n    fetch(`${config.base}${config.api.fileupload}`,\r\n      {\r\n        credentials: 'include',\r\n        method: 'POST',\r\n        body: formData\r\n      })\r\n      .then(response => {\r\n        console.log('response: ', response);\r\n        return response.text();\r\n      })\r\n      .then(response => {\r\n        console.log('response: ', response);\r\n        response = JSON.parse(response);\r\n        if (response.status === 'ok') {\r\n          onChange(response.url);\r\n          this.setState({\r\n            isLoading: false,\r\n            errorSubmit: true,\r\n          })\r\n        } else {\r\n          this.setState({\r\n            isLoading: false,\r\n            errorSubmit: true,\r\n          })\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n        this.setState({\r\n          isLoading: false,\r\n          errorSubmit: true,\r\n        })\r\n      })\r\n  };\r\n\r\n\r\n  render() {\r\n    const {isLoading, errorSubmit} = this.state;\r\n\r\n    return (<UploadFile\r\n      label={'Загрузка изображений'}\r\n      isLoading={isLoading}\r\n      errorSubmit={errorSubmit}\r\n      uploadFile={this.uploadFile}\r\n      accept={\"image/jpeg, image/pjpeg, image/png\"}\r\n    />)\r\n  }\r\n\r\n}\r\n\r\nexport default UploadImage;\r\n","import React from \"react\";\r\nimport {SlidePropTypes} from \"../../../PropTypes\";\r\nimport SliderPreviewVideo from \"../SlidePreviewVideo/SlidePreviewVideo\";\r\nimport SlidePreviewContent from \"../SlidePreviewContent/SlidePreviewContent\";\r\n\r\n\r\nexport const SlideBodyVideo = (props)=>(<div className={'slides_item'}>\r\n  <SliderPreviewVideo video={props.image}/>\r\n  <SlidePreviewContent {...props}/>\r\n</div>);\r\n\r\n\r\nSlideBodyVideo.propTypes = SlidePropTypes;\r\n\r\nexport default SlideBodyVideo;\r\n","import React from \"react\";\r\nimport SlidePreviewContent from \"../SlidePreviewContent/SlidePreviewContent\";\r\nimport {SlidePropTypes} from \"../../../PropTypes\";\r\nimport SliderPreviewImage from \"../SlidePreviewImage/SlidePreviewImage\";\r\n\r\n\r\nexport const SlideBodyImage = (props)=>(<div className={'slides_item'}>\r\n  <SliderPreviewImage image={props.image}/>\r\n  <SlidePreviewContent {...props}/>\r\n</div>);\r\n\r\n\r\nSlideBodyImage.propTypes = SlidePropTypes;\r\n\r\nexport default SlideBodyImage;\r\n","import React, {Component} from 'react';\r\nimport {Field, getFormValues, reduxForm, SubmissionError} from \"redux-form\";\r\nimport { renderToString } from 'react-dom/server'\r\nimport {connect} from \"react-redux\";\r\nimport {connect as connectRestEasy} from \"@brigad/redux-rest-easy\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {Alert, Button, Col, Row} from \"reactstrap\";\r\n\r\nimport FormCKEditor from \"../../../../../components/Form/form_ckeditor\";\r\nimport FormSelect from \"../../../../../components/Form/FormSelect\";\r\nimport Checkbox from \"../../../../../components/Checkbox/Checkbox\";\r\nimport {TextField} from \"../../../../../components/TextField/TextField\";\r\nimport {\r\n  CreateSlideAction,\r\n  isRetrievingCreateSlide, isRetrievingUpdateSlide,\r\n  UpdateSlideAction\r\n} from \"../../../../../store/reduxRestEasy/Slides/SlidesResource\";\r\nimport {normalizeSubmissionError} from \"../../../../../helpers/normalizeSubmissionError\";\r\nimport {SlidePreview} from \"../SlidePreview/SlidePreview\";\r\nimport UploadVideo from \"../UploadVideo/UploadVideo\";\r\nimport UploadImage from \"../UploadImage/UploadImage\";\r\nimport {BG_SLIDER_TYPE_IMAGE, BG_SLIDER_TYPE_VIDEO} from \"../../../../../shared/constants\";\r\nimport SlideBodyVideo from \"../SlideBodyVideo/SlideBodyVideo\";\r\nimport SlideBodyImage from \"../SlideBodyImage/SlideBodyImage\";\r\n\r\n\r\nexport class FormSlidesEditor extends Component {\r\n\r\n  getSlideBody = (values) => {\r\n    try {\r\n      if(values.backgroundType === BG_SLIDER_TYPE_IMAGE){\r\n        return renderToString(<SlideBodyImage {...values}/>);\r\n      }\r\n      if(values.backgroundType === BG_SLIDER_TYPE_VIDEO){\r\n        return renderToString(<SlideBodyVideo {...values}/>);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  onSubmit = (values) => {\r\n    const {history} = this.props;\r\n    const body = this.getSlideBody(values);\r\n    console.log(body);\r\n    if (values.hasOwnProperty('id')) {\r\n      return this.props.UpdateSlideAction({\r\n        body: {\r\n          body: body,\r\n        },\r\n        urlParams: {\r\n          id: values.id,\r\n        }\r\n      })\r\n        .then(({normalizedPayload}) => {\r\n          if (normalizedPayload && normalizedPayload.errors) {\r\n            throw normalizedPayload;\r\n          }\r\n          history.push('/slides');\r\n        })\r\n        .catch(error => {\r\n          throw new SubmissionError(normalizeSubmissionError(error));\r\n        })\r\n    } else {\r\n      return this.props.CreateSlideAction({\r\n        body: {\r\n          body: body,\r\n        },\r\n      })\r\n        .then(({normalizedPayload}) => {\r\n          if (normalizedPayload && normalizedPayload.errors) {\r\n            throw normalizedPayload;\r\n          }\r\n          history.push('/slides');\r\n        })\r\n        .catch(error => {\r\n          throw new SubmissionError(normalizeSubmissionError(error));\r\n        })\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {handleSubmit, pristine, submitting, error, values} = this.props;\r\n    return (\r\n      <form onSubmit={handleSubmit(this.onSubmit)}>\r\n          <SlidePreview\r\n            values={values}\r\n          />\r\n          <Row>\r\n            <Col xs=\"6\">\r\n              {\r\n                values && values.backgroundType === BG_SLIDER_TYPE_IMAGE &&\r\n                <Field\r\n                  name={\"image\"}\r\n                  component={UploadImage}\r\n                  type={\"file\"}\r\n                />\r\n              }\r\n\r\n              {\r\n                values && values.backgroundType === BG_SLIDER_TYPE_VIDEO &&\r\n                <Field\r\n                  name={\"image\"}\r\n                  component={UploadVideo}\r\n                  type={\"file\"}\r\n                />\r\n              }\r\n            </Col>\r\n\r\n            <Col xs=\"6\">\r\n            </Col>\r\n            <Col xs=\"6\">\r\n              <Field\r\n                name=\"backgroundType\"\r\n                component={FormSelect}\r\n                label={\"Тип фона\"}\r\n                type=\"select\"\r\n                data={[\r\n                  {\r\n                    name: 'Изображение',\r\n                    id: BG_SLIDER_TYPE_IMAGE,\r\n                  },\r\n                  {\r\n                    name: 'Видео',\r\n                    id: BG_SLIDER_TYPE_VIDEO,\r\n                  },\r\n                ]}\r\n              />\r\n            </Col>\r\n            <Col xs=\"6\">\r\n              <Field\r\n                name=\"position\"\r\n                component={FormSelect}\r\n                label={\"Позиционирование контента\"}\r\n                type=\"select\"\r\n                data={[\r\n                  {\r\n                    name: 'Свурху слева',\r\n                    id: 'top-left',\r\n                  },\r\n                  {\r\n                    name: 'Сверху по центру',\r\n                    id: 'top-middle',\r\n                  },\r\n                  {\r\n                    name: 'Сверху справа',\r\n                    id: 'top-right',\r\n                  },\r\n\r\n                  {\r\n                    name: 'Посередине слева',\r\n                    id: 'middle-left',\r\n                  },\r\n                  {\r\n                    name: 'Посередине',\r\n                    id: 'middle-center',\r\n                  },\r\n                  {\r\n                    name: 'Посередине справа',\r\n                    id: 'middle-right',\r\n                  },\r\n                  {\r\n                    name: 'Снизу слева',\r\n                    id: 'bottom-left',\r\n                  },\r\n                  {\r\n                    name: 'Снизу по середине',\r\n                    id: 'bottom-center',\r\n                  },\r\n                  {\r\n                    name: 'Снизу справа',\r\n                    id: 'bottom-right',\r\n                  },\r\n                ]}\r\n              />\r\n            </Col>\r\n            <Col xs=\"7\">\r\n              <Field\r\n                name=\"backDrop\"\r\n                component={Checkbox}\r\n                label={\"Включить фон для контента?\"}\r\n                type=\"checkbox\"\r\n                value={true}\r\n              />\r\n            </Col>\r\n            <Col xs=\"6\">\r\n              <Field\r\n                name=\"buttonLabel\"\r\n                component={TextField}\r\n                label={\"Текст кнопки\"}\r\n                type=\"text\"\r\n              />\r\n            </Col>\r\n            <Col xs=\"6\">\r\n              <Field\r\n                name=\"buttonLink\"\r\n                component={TextField}\r\n                label={\"Ссылка кнопки\"}\r\n                type=\"text\"\r\n              />\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Field\r\n                name={\"body\"}\r\n                component={FormCKEditor}\r\n                label={\"Контент\"}\r\n                type={\"text\"}\r\n                ref={\"CKEDITOR\"}\r\n\r\n                config={{\r\n                  toolbarGroups: [\r\n                    {name: 'basicstyles', groups: ['basicstyles']},\r\n                    '/',\r\n                    {name: 'styles'},\r\n                    {name: 'colors'},\r\n                    {name: 'tools'},\r\n                  ]\r\n                }}\r\n\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          {\r\n            error && <Alert className={'pb-3'} color=\"danger\">\r\n              {error}\r\n            </Alert>\r\n          }\r\n\r\n          <Row className={'pb-3'}>\r\n            <Col xs=\"12\" md=\"6\" lg=\"4\">\r\n              <Button\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                // disabled={pristine || submitting}\r\n              >\r\n                Сохранить\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n      </form>)\r\n  }\r\n}\r\n\r\nFormSlidesEditor = connect(state => ({\r\n  values: getFormValues('FormSlidesEditor')(state),\r\n}))(FormSlidesEditor);\r\n\r\nFormSlidesEditor = reduxForm({\r\n  form: 'FormSlidesEditor'\r\n})(FormSlidesEditor);\r\n\r\nFormSlidesEditor = connectRestEasy(\r\n  (state, ownProps) => ({\r\n    isRetrievingCreateSlide: isRetrievingCreateSlide(state, ownProps),\r\n    isRetrievingUpdateSlide: isRetrievingUpdateSlide(state, ownProps),\r\n  }),\r\n  dispatch => ({\r\n    CreateSlideAction: (options) => dispatch(CreateSlideAction(options)),\r\n    UpdateSlideAction: (options) => dispatch(UpdateSlideAction(options)),\r\n  })\r\n)(FormSlidesEditor);\r\n\r\nFormSlidesEditor = withRouter(FormSlidesEditor);\r\n\r\nexport default FormSlidesEditor;\r\n","import {contentPosition} from \"../SlidePreviewContent/SlidePreviewContent\";\r\nimport {BG_SLIDER_TYPE_IMAGE, BG_SLIDER_TYPE_VIDEO} from \"../../../../../shared/constants\";\r\n\r\nconst trim = function (string) {\r\n  return string ? string.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '') : string;\r\n}\r\n\r\n/**\r\n * @param {object} domBody - dom object\r\n * @return {'video'|'image'}\r\n * @desc check type background slide\r\n * */\r\nconst GetBGTypeSlideBody = (domBody) => {\r\n  let result = domBody.getElementsByTagName('video');\r\n  return result.length ? 'video' : 'image';\r\n};\r\n\r\n\r\n/**\r\n * @param {string} body\r\n * @return {boolean}\r\n * @desc check backdrop\r\n * */\r\nconst CheckBackDropSlideBody = (body) => body.indexOf('slides_item-caption--back-drop') !== -1;\r\n\r\n/**\r\n * @return {object} [format]\r\n * @return {object} [format].src\r\n * @return {object} [format].type\r\n * */\r\nconst GetVideoFromSlideBody = (domBody) => {\r\n  let video = domBody.getElementsByTagName('video');\r\n  if (video && video.length) {\r\n    const result = {};\r\n    for (let i = 0; i < video[0].children.length; i += 1) {\r\n      result[video[0].children[i].type] = {\r\n        src: video[0].children[i].src,\r\n        type: video[0].children[i].type,\r\n      };\r\n    }\r\n    return result;\r\n  }\r\n  return ''\r\n};\r\n/**\r\n * @return {string}\r\n * */\r\nconst GetImageFromSlideBody = (domBody) => {\r\n  let image = domBody.getElementsByClassName('slides_item-img');\r\n  if (image.length) {\r\n    return image[0].src;\r\n  }\r\n  return \"\";\r\n};\r\n/**\r\n * @return {string}\r\n * */\r\nconst GetContentSlideBody = (domBody) => {\r\n  const content = domBody.getElementsByClassName('slides_item-caption-content');\r\n  if (content && content.length) {\r\n    return trim(content[0].innerHTML);\r\n  }\r\n  return '';\r\n};\r\n\r\n/** */\r\nconst GetButtonSlideBody = (domBody) => {\r\n  const button = domBody.getElementsByClassName('button-base');\r\n  if (button && button.length) {\r\n    return {\r\n      buttonLabel: trim(button[0].textContent),\r\n      buttonLink: button[0].href,\r\n    }\r\n  }\r\n  return {\r\n    buttonLabel: null,\r\n    buttonLink: null,\r\n  }\r\n};\r\n\r\n/**\r\n * @return {string}\r\n * */\r\nconst GetPositionContentSlideBody = (body) => {\r\n  for (let prop in contentPosition) {\r\n    if (body.indexOf(prop) !== -1) {\r\n      return prop\r\n    }\r\n  }\r\n  return 'middle-middle';\r\n};\r\n\r\n/** */\r\nexport const SlideParseBody = (body) => {\r\n  let result = {\r\n    backgroundType: 'image', // GetBGTypeSlideBody\r\n    position: 'top-middle', // GetPositionContentSlideBody\r\n    backDrop: true, // CheckBackDropSlideBody\r\n    buttonLabel: null, // GetPositionContentSlideBody\r\n    buttonLink: null, // GetPositionContentSlideBody\r\n    body: null, // GetContentSlideBody\r\n    image: null, // GetImageFromSlideBody && GetVideoFromSlideBody\r\n  };\r\n  const domBody = new DOMParser().parseFromString(body, 'text/html').body;\r\n  switch (GetBGTypeSlideBody(domBody)) {\r\n    case(BG_SLIDER_TYPE_IMAGE): {\r\n      result.backgroundType = BG_SLIDER_TYPE_IMAGE;\r\n      result.image = GetImageFromSlideBody(domBody);\r\n      break;\r\n    }\r\n    case(BG_SLIDER_TYPE_VIDEO): {\r\n      result.backgroundType = BG_SLIDER_TYPE_VIDEO;\r\n      result.image = GetVideoFromSlideBody(domBody);\r\n      break;\r\n    }\r\n    default: {\r\n      break;\r\n    }\r\n  }\r\n  result.backDrop = CheckBackDropSlideBody(body);\r\n  result.body = GetContentSlideBody(domBody);\r\n  result.position = GetPositionContentSlideBody(body);\r\n  result = {\r\n    ...result,\r\n    ...GetButtonSlideBody(domBody),\r\n  };\r\n  return result;\r\n};\r\n","import React, {Component} from 'react';\r\nimport {connect as connectRestEasy} from \"@brigad/redux-rest-easy\";\r\nimport '../slides.css';\r\nimport FormSlidesEditor from \"./Components/FormSlidesEditor/FormSlidesEditor\";\r\nimport {\r\n  GetSlideAction, GetSlideById,\r\n  isRetrievingGetSlide\r\n} from \"../../../store/reduxRestEasy/Slides/SlidesResource\";\r\nimport {SlideParseBody} from \"./Components/SlideParseBody/SlideParseBody\";\r\nimport {BG_SLIDER_TYPE_IMAGE} from \"../../../shared/constants\";\r\nimport shallowequal from \"shallowequal\";\r\nimport PageContainer from \"../../../components/PageContainer/PageContainer\";\r\n\r\n\r\nexport class SlideEditor extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return !shallowequal(nextProps, this.props);\r\n  }\r\n\r\n  componentWillMount() {\r\n    const {match: {params}} = this.props;\r\n    if (params && params.id) {\r\n      this.props.GetSlideAction({\r\n        urlParams: {\r\n          id: params.id,\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  createInitialValues = () => {\r\n    const {GetSlideById, match: {params}} = this.props;\r\n    const slide = params && params.id && GetSlideById(params.id);\r\n    let initialValues = {\r\n      backgroundType: BG_SLIDER_TYPE_IMAGE,\r\n      position: 'middle-middle',\r\n      backDrop: false,\r\n      buttonLabel: null,\r\n      buttonLink: null,\r\n      body: \"\",\r\n      image: \"\",\r\n    };\r\n    if (slide) {\r\n      initialValues = {\r\n        ...slide,\r\n        ...SlideParseBody(slide.body),\r\n      };\r\n    }\r\n    return initialValues;\r\n  };\r\n\r\n  render() {\r\n    const {isRetrievingGetSlide} = this.props;\r\n    if (isRetrievingGetSlide) {\r\n      return <div>Loading....</div>\r\n    }\r\n\r\n    return (\r\n      <PageContainer\r\n        header={'Создать слайд'}\r\n      >\r\n        <FormSlidesEditor\r\n          initialValues={this.createInitialValues()}\r\n        />\r\n      </PageContainer>)\r\n  }\r\n}\r\n\r\nSlideEditor = connectRestEasy(\r\n  (state, ownProps) => ({\r\n    GetSlideById: (id) => {\r\n      const data = GetSlideById(state, 'slides', id);\r\n      if (data) {\r\n        return data[id];\r\n      }\r\n      return null;\r\n    },\r\n    isRetrievingGetSlide: isRetrievingGetSlide(state, ownProps),\r\n  }),\r\n  dispatch => ({\r\n    GetSlideAction: (options) => dispatch(GetSlideAction(options)),\r\n  })\r\n)(SlideEditor);\r\n\r\nexport default SlideEditor;\r\n"],"sourceRoot":""}