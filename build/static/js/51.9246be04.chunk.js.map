{"version":3,"sources":["config.js","store/reduxRestEasy/.helpers/networkHelpers.js","history.js","store/reduxRestEasy/.helpers/handleStatusCode.js","store/reduxRestEasy/.helpers/ResourceHelper.js","store/reduxRestEasy/.helpers/normalizerHelpers.js","components/RestPagination/RestPagination.js","store/reduxRestEasy/Blog/BlogCategoryResource.js","components/CategoryItem/CategoryItem.js","views/Blog/Categories/index.js"],"names":["__webpack_exports__","base","window","location","hostname","api","login","logout","posts","post","categories","category","slides","tiles","tile_types","tile","nomenclature","nomenclatures","nomenclatureCharacteristic","typesOfNomenclature","fileupload","requestPOST","body","Object","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","method","credentials","headers","Accept","Content-type","JSON","stringify","requestGET","requestDELETE","requestPUT","history__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","BrowserHistory","createBrowserHistory","d","handleStatusCode","_history__WEBPACK_IMPORTED_MODULE_0__","response","status","history","push","NormalizationPayload","resourceName","_this","this","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","mergeResourceAndPayload","resources","payload","forEach","item","id","metadata","data","concat","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","removePayloadFromResources","payloadID","console","log","filter","warn","payloadToResource","_this$resourceName","arguments","length","undefined","entities","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","result","updateResource","normalizeError","errors","message","DeleteNormalizer","Normalizer","urlParams","RestPagination","_Component","props","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","onMovePageHistory","count","_this$props","match","path","onMovePage","event","preventDefault","_this$props2","metaData","current_page","state","initialState","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","E_Dev_alex_taran_project_catalog_catalog_admin_new_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","_ref","_this2","last_page","array","_this$state","page_min","page_max","setState","_loop","i","pageNum","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_6__","active","reactstrap__WEBPACK_IMPORTED_MODULE_7__","href","onClick","_this3","reactstrap__WEBPACK_IMPORTED_MODULE_8__","xs","reactstrap__WEBPACK_IMPORTED_MODULE_9__","className","previous","onPagination","next","get","Component","withRouter","CreateCategoryAction","DeleteCategoryAction","GetCategoryAction","GetCategoriesAction","UpdateCategoryAction","GetCategories","GetCategoryById","isRetrievingCategories","isRetrievingGetCategory","isRetrievingCreateCategory","isRetrievingUpdateCategory","_brigad_redux_rest_easy__WEBPACK_IMPORTED_MODULE_0__","_config__WEBPACK_IMPORTED_MODULE_1__","_helpers_handleStatusCode__WEBPACK_IMPORTED_MODULE_2__","_helpers_networkHelpers__WEBPACK_IMPORTED_MODULE_3__","_helpers_ResourceHelper__WEBPACK_IMPORTED_MODULE_4__","_helpers_normalizerHelpers__WEBPACK_IMPORTED_MODULE_5__","BlogCategoryResource","createResource","createCategory","url","config","normalizer","error","hasOwnProperty","networkHelpers","deleteCategory","getCategory","getCategories","Array","isArray","updateCategory","actions","perform","selectors","resource","getResource","getResourceById","request","isPerforming","CategoryItem","name","created_at","updated_at","onDelete","react_default","Button","color","react_router_dom","to","CategoryList","classCallCheck","possibleConstructorReturn","getPrototypeOf","onGetCategory","query","page","bind","assertThisInitialized","onDeleteCategory","inherits","createClass","search","isRetrievingGetPosts","values","Row","Col","Card","CardHeader","CardBody","Table","hover","bordered","striped","responsive","size","map","index","components_CategoryItem_CategoryItem","assign","onGetSlides","connectRestEasy","ownProps","dispatch","options"],"mappings":"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","file":"static/js/51.9246be04.chunk.js","sourcesContent":["export default {\n  base: window.location.hostname === 'localhost' ? 'https://dev.strikepro.ru' : '',\n  api: {\n    login: '/dashboard/auth/login',\n    logout: '/dashboard/auth/logout',\n\n    posts: '/dashboard/blog/posts',\n    post: '/dashboard/blog/post',\n\n    categories: '/dashboard/blog/categories',\n    category: '/dashboard/blog/category',\n\n    slides: '/dashboard/slides',\n\n    tiles: '/dashboard/mainfeeds',\n\n    tile_types: '/dashboard/mainfeed/types',\n    tile: '/dashboard/mainfeed',\n\n    nomenclature: '/dashboard/nomenclature',\n    nomenclatures: '/dashboard/nomenclatures',\n\n    nomenclatureCharacteristic: '/dashboard/nomenclature/characteristic',\n    typesOfNomenclature: '/dashboard/nomenclature/characteristic',\n    fileupload: '/dashboard/fileupload',\n  }\n}\n","export const requestPOST = (body) => {\n  return {\n    method: 'POST',\n    credentials: 'include',\n    headers: {\n      Accept: 'application/json',\n      'Content-type': 'application/json',\n    },\n    ...(body? {body: JSON.stringify(body)} : {})\n\n  }\n};\n\nexport const requestGET = () => {\n  return {\n    method: 'GET',\n    credentials: 'include',\n    headers: {\n      Accept: 'application/json',\n      'Content-type': 'application/json',\n    }\n  }\n};\n\nexport const requestDELETE = () => {\n  return {\n    method: 'DELETE',\n    credentials: 'include',\n    headers: {\n      Accept: 'application/json',\n      'Content-type': 'application/json',\n    }\n  }\n};\n\nexport const requestPUT = (body) => {\n  return {\n    method: 'PUT',\n    credentials: 'include',\n    headers: {\n      Accept: 'application/json',\n      'Content-type': 'application/json',\n    },\n    body: JSON.stringify(body),\n  }\n};\n","import {createBrowserHistory} from 'history';\n\nexport const BrowserHistory = createBrowserHistory();\n\nexport default BrowserHistory;\n","import history from \"../../../history\";\n\n\nexport const handleStatusCode = (response) => {\n  const {status} = response;\n  if (status === 401) {\n    history.push('/login');\n    return response\n  }\n\n  if (status === 404) {\n    history.push('/404');\n    return response\n  }\n\n\n  return response\n};\n\nexport default handleStatusCode;\n","export class NormalizationPayload {\n\n  resourceName = null;\n\n  constructor(resourceName) {\n    this.resourceName = resourceName;\n  }\n\n  /**\n   * @param {object} resources - объект с исходными ресурсами\n   * @param {array} payload - массив с новыми ресурсами\n   * @desc метод для добавления в существующие ресурсы новых ресурсов\n   * */\n  mergeResourceAndPayload = (resources, payload) => {\n    payload.forEach((item) => {\n      resources[this.resourceName][this.resourceName][item.id] = item;\n      resources[this.resourceName].metadata = {\n        data: [...resources[this.resourceName].metadata.data, item.id],\n      };\n    });\n    return resources;\n  };\n\n  /**\n   * @param {array} resources\n   * @param {string} payloadID\n   * @desc\n   * */\n  removePayloadFromResources = (resources, payloadID) => {\n    if (!payloadID) {\n      console.warn('payloadID undefined');\n      return resources;\n    }\n    console.log('removePayloadFromResources: ', this, resources, payloadID);\n    delete resources[this.resourceName][this.resourceName][payloadID];\n    resources[this.resourceName].metadata.data = resources[this.resourceName]\n      .metadata.data.filter(item => item !== payloadID);\n    return resources;\n  };\n\n  /**\n   * @param {array} payload\n   * @param {object} metadata\n   * @desc\n   * */\n  payloadToResource = (payload, metadata = {}) => {\n    const data = {\n      entities: {\n        [this.resourceName]: {\n          [this.resourceName]: {},\n          metadata: {}\n        },\n      },\n      result: []\n    };\n    if (payload) {\n      payload.forEach((item) => {\n        data.result.push(item.id);\n        data.entities[this.resourceName][this.resourceName][item.id] = item;\n      });\n    }\n    data.entities[this.resourceName].metadata = {\n      ...metadata,\n      data: data.result,\n    };\n    return data;\n  };\n\n  /**\n   * @param {object} resources - объект с исходными ресурсами\n   * @param {object} payload - массив с новыми ресурсами\n   * @desc метод для добавления в существующие ресурсы новых ресурсов\n   * */\n  updateResource = (resources, payload) => {\n    resources[this.resourceName][this.resourceName][payload.id] = payload;\n    return resources;\n  };\n\n  /**\n   * @param {object} payload\n   * @param {object} payload.errors\n   * @param {array} payload.errors.propName\n   * @param {string} payload.message\n   * */\n  normalizeError = (payload) => {\n    if(!payload.errors){\n      payload.errors = {};\n    }\n    return {\n      entities: {\n        ...payload,\n        message: [payload.message]\n      },\n      result: {errors: payload}\n    };\n  }\n\n}\n","\n\nexport const DeleteNormalizer = (Normalizer)=> (payload, resources, urlParams,) => {\n  if (payload.errors) {\n    return Normalizer.normalizeError(payload);\n  }\n  if (payload) {\n    return Normalizer.removePayloadFromResources(resources, urlParams.id);\n  }\n  return resources;\n};\n\n\nexport const CreateNormalizer = (Normalizer) => (payload, resources, urlParams) => {\n  if (!payload ) {\n    return null\n  }\n  if (payload.errors || payload.message) {\n    return Normalizer.normalizeError(payload);\n  }\n\n  if (resources.hasOwnProperty(Normalizer.resourceName)) {\n    return Normalizer.mergeResourceAndPayload(resources, [payload])\n  } else {\n    return Normalizer.payloadToResource([payload]);\n  }\n};\n\nexport const UpdateNormalizer = (Normalizer) => (payload, resources) => {\n  if (payload.errors || payload.message) {\n    return Normalizer.normalizeError(payload);\n  }\n  if (payload) {\n    return Normalizer.updateResource(resources, payload);\n  }\n  return resources;\n};\n\nexport const GetListNormalizer = (Normalizer) => (payload) => {\n  if (!payload && payload.error) {\n    return null;\n  }\n  if (Array.isArray(payload)) {\n    return Normalizer.payloadToResource(payload);\n  } else {\n    return Normalizer.payloadToResource(payload.data, payload);\n  }\n};\n\nexport const GetByIdNormalizer = (Normalizer) => (payload) => Normalizer.payloadToResource([payload])\n","import React, {Component} from 'react';\nimport PropType from 'prop-types';\nimport {Col, Pagination, PaginationItem, PaginationLink} from \"reactstrap\";\nimport {withRouter} from \"react-router-dom\";\n\nexport class RestPagination extends Component {\n\n  static propTypes = {\n    onMovePage: PropType.func,\n    metaData: PropType.object,\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = this.initialState;\n  }\n\n  get initialState() {\n    return {\n      page_min: 0,\n      page_max: 5,\n    }\n  }\n\n  onPagination({last_page}) {\n    let array = [];\n\n    let {\n      page_min,\n      page_max,\n      current_page\n    } = this.state;\n\n\n    if (current_page === page_max) {\n      if (page_max < last_page) {\n        page_max += 1;\n        page_min += 1;\n      }\n    } else if (current_page === page_min + 1) {\n      if (page_min > 0) {\n        page_max -= 1;\n        page_min -= 1;\n      }\n    }\n    if (page_max !== this.state.page_max && page_min !== this.state.page_max) {\n      this.setState(page_max, page_min);\n    }\n    for (let i = page_min; i < last_page; i++) {\n      let pageNum = i + 1;\n      if (pageNum === current_page) {\n        array.push(\n          <PaginationItem key={i} active>\n            <PaginationLink href=\"#\">{pageNum}</PaginationLink>\n          </PaginationItem>\n        )\n      } else {\n        array.push(\n          <PaginationItem key={i}>\n            <PaginationLink\n              onClick={(event) => {\n                event.preventDefault();\n                const {onMovePage} = this.props;\n                this.onMovePageHistory(pageNum);\n                onMovePage(pageNum);\n              }}\n            >\n              {pageNum}\n            </PaginationLink>\n          </PaginationItem>\n        )\n      }\n    }\n    return array\n  }\n\n  onMovePageHistory = (count) => {\n    const {match, history} = this.props;\n    history.push(`${match.path}?page=${ count}`);\n    return count;\n  };\n\n\n  onMovePage = (event, count) => {\n    event.preventDefault();\n    const {metaData, onMovePage} = this.props;\n    onMovePage(metaData.current_page + count);\n    this.onMovePageHistory(metaData.current_page +count);\n    return count;\n  };\n\n  render() {\n    const {metaData} = this.props;\n    if (!metaData || !(metaData && metaData.last_page > 1)) {\n      return null;\n    }\n    return (<Col xs=\"12\">\n      <nav>\n        <Pagination className=\"justify-content-center\">\n          {\n            metaData.current_page > 1 &&\n            <PaginationItem>\n              <PaginationLink\n                onClick={(event) => this.onMovePage(event, -1)}\n                previous href=\"#\">Prev</PaginationLink>\n            </PaginationItem>\n          }\n\n          {\n            this.onPagination(metaData)\n          }\n\n          {\n            metaData.last_page > metaData.current_page &&\n            <PaginationItem>\n              <PaginationLink\n                onClick={(event) => this.onMovePage(event, 1)}\n                next href=\"#\">Next</PaginationLink>\n            </PaginationItem>\n          }\n        </Pagination>\n      </nav>\n    </Col>)\n  }\n}\n\nRestPagination = withRouter(RestPagination);\nexport default RestPagination;\n","import {createResource} from '@brigad/redux-rest-easy';\nimport config from '../../../config';\nimport {handleStatusCode} from \"../.helpers/handleStatusCode\";\nimport {requestDELETE, requestGET, requestPOST, requestPUT} from \"../.helpers/networkHelpers\";\nimport {\n  NormalizationPayload,\n} from \"../.helpers/ResourceHelper\";\nimport {DeleteNormalizer} from \"../.helpers/normalizerHelpers\";\n\nconst RESOURCE_NAME = 'categories';\n\nconst Normalizer = new NormalizationPayload(RESOURCE_NAME);\n\nexport const BlogCategoryResource = createResource(RESOURCE_NAME)({\n  createCategory: {\n    method: 'POST',\n    url: `${config.base}${config.api.category}`,\n    normalizer: (payload, resources) => {\n      if (!payload && payload.error) {\n        return null;\n      }\n      if (resources.hasOwnProperty(RESOURCE_NAME)) {\n        return Normalizer.mergeResourceAndPayload(resources, [payload])\n      } else {\n        return Normalizer.payloadToResource([payload]);\n      }\n    },\n    networkHelpers: {\n      handleStatusCode,\n      requestPOST: requestPOST\n    },\n  },\n  deleteCategory: {\n    method: 'DELETE',\n    url: `${config.base}${config.api.category}/::id`,\n    normalizer: DeleteNormalizer(Normalizer),\n    networkHelpers: {\n      handleStatusCode,\n      requestDELETE: requestDELETE,\n    },\n  },\n  getCategory: {\n    method: 'GET',\n    url: `${config.base}${config.api.category}/::id`,\n    normalizer: (payload) => Normalizer.payloadToResource([payload]),\n    networkHelpers: {\n      handleStatusCode,\n      requestGET: requestGET,\n    },\n  },\n  getCategories: {\n    method: 'GET',\n    url: `${config.base}${config.api.categories}`,\n    normalizer: (payload) => {\n      if (!payload && payload.error) {\n        return null;\n      }\n      if (Array.isArray(payload)) {\n        return Normalizer.payloadToResource(payload);\n      } else {\n        return Normalizer.payloadToResource(payload.data, payload);\n      }\n    },\n    networkHelpers: {\n      handleStatusCode,\n      requestGET: requestGET\n    },\n  },\n  updateCategory: {\n    method: 'PUT',\n    url: `${config.base}${config.api.category}/::id`,\n    normalizer: (payload, resources) => {\n      if (payload) {\n        return Normalizer.updateResource(resources, payload);\n      }\n      return resources;\n    },\n    networkHelpers: {\n      handleStatusCode,\n      requestPUT: requestPUT,\n    },\n  },\n});\n\nconst {\n  actions: {\n    createCategory: {\n      perform: CreateCategoryAction,\n    },\n    deleteCategory: {\n      perform: DeleteCategoryAction,\n    },\n    getCategory: {\n      perform: GetCategoryAction,\n    },\n    getCategories: {\n      perform: GetCategoriesAction,\n    },\n    updateCategory: {\n      perform: UpdateCategoryAction,\n    },\n  },\n  selectors: {\n    resource: {\n      getResource: GetCategories,\n      getResourceById: GetCategoryById,\n    },\n    createCategory: {\n      request: {\n        getResource: CreateCategoryGetResource,\n        isPerforming: isRetrievingCreateCategory,\n      }\n    },\n    deleteCategory: {\n      request: {\n        getResource: DeleteCategoryGetResource,\n      }\n    },\n    getCategory: {\n      request: {\n        getResource: GetCategoryGetResource,\n        isPerforming: isRetrievingGetCategory,\n\n      }\n    },\n    getCategories: {\n      request: {\n        getResource: GetCategoriesGetResource,\n        isPerforming: isRetrievingCategories,\n\n      }\n    },\n    updateCategory: {\n      request: {\n        getResource: UpdateCategoryGetResource,\n        isPerforming: isRetrievingUpdateCategory,\n\n      }\n    },\n  }\n} = BlogCategoryResource;\n\nexport {\n  CreateCategoryAction,\n  DeleteCategoryAction,\n  GetCategoryAction,\n  GetCategoriesAction,\n  UpdateCategoryAction,\n\n  CreateCategoryGetResource,\n  DeleteCategoryGetResource,\n  GetCategoryGetResource,\n  GetCategoriesGetResource,\n  UpdateCategoryGetResource,\n  GetCategories,\n  GetCategoryById,\n  isRetrievingCategories,\n\n  isRetrievingGetCategory,\n  isRetrievingCreateCategory,\n  isRetrievingUpdateCategory,\n}\n","import React from 'react';\nimport {Button} from \"reactstrap\";\nimport {Link} from \"react-router-dom\";\n\n\nexport const CategoryItem = ({\n                               id,\n                               name,\n                               created_at,\n                               updated_at,\n                               onDelete\n                             }) => (<tr>\n  <td>{id}</td>\n  <td>{name}</td>\n  <td>{created_at}</td>\n  <td>{updated_at}</td>\n  <td>\n    <Button color=\"warning\">\n      <Link\n        to={`/category-editor/${id}`\n        }>\n        Изменить\n      </Link>\n    </Button>\n    {' '}\n    <Button\n      color=\"danger\"\n      onClick={() => {\n        onDelete(id)\n      }}\n    >\n      Удалить\n    </Button>\n  </td>\n</tr>);\n\nexport default CategoryItem;\n","import React, {Component} from 'react';\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  Table\n} from \"reactstrap\";\nimport {connect as connectRestEasy} from \"@brigad/redux-rest-easy\";\nimport {\n  DeleteCategoryAction,\n  GetCategories,\n  GetCategoriesAction,\n  isRetrievingCategories\n} from \"../../../store/reduxRestEasy/Blog/BlogCategoryResource\";\nimport RestPagination from \"../../../components/RestPagination/RestPagination\";\nimport CategoryItem from \"../../../components/CategoryItem/CategoryItem\";\n\n\nexport class CategoryList extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.onGetCategory = this.onGetCategory.bind(this);\n    this.onDeleteCategory = this.onDeleteCategory.bind(this);\n  }\n\n\n\n  componentWillMount() {\n    const {location} = this.props;\n    const result = location.search.match(/[0-9]/g);\n    if(result && result.length){\n      this.onGetCategory(result[0]);\n    } else {\n      this.onGetCategory();\n    }\n  }\n\n  onGetCategory = (id = 1) => {\n    return this.props.GetCategoriesAction({\n      query: {page: id}\n    })\n  };\n\n  onDeleteCategory(id) {\n    return this.props.DeleteCategoryAction({\n      urlParams: {\n        id: id,\n      }\n    });\n  }\n\n\n  render() {\n    const {categories, isRetrievingGetPosts} = this.props;\n    if (isRetrievingGetPosts && !categories) {\n      return (<div>Loading...</div>);\n    }\n    if (!categories.length) {\n      return null;\n    }\n    const data = Object.values(categories[0]);\n    const metaData = categories[1];\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          <Col xs=\"12\">\n            <Card>\n              <CardHeader>\n                <strong>Categories</strong>\n              </CardHeader>\n              <CardBody className=\"card-body\">\n                <Table hover bordered striped responsive size=\"sm\">\n                  <thead>\n                  <tr>\n                    <th>id</th>\n                    <th>Имя</th>\n                    <th>Дата создания</th>\n                    <th>Дата обновления</th>\n                    <th/>\n                  </tr>\n                  </thead>\n                  <tbody>\n                  {\n                    data && data.map((item, index) => (\n                      <CategoryItem\n                        key={index}\n                        {...item}\n                        onDelete={this.onDeleteCategory}\n                      />\n                    ))\n                  }\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Col>\n\n\n          <RestPagination\n            metaData={metaData}\n            onMovePage={this.onGetSlides}\n          />\n\n        </Row>\n      </div>\n    )\n  }\n}\n\nCategoryList = connectRestEasy(\n  (state, ownProps) => ({\n    categories: GetCategories(state, ownProps),\n    isRetrievingCategories: isRetrievingCategories(state, ownProps),\n  }),\n  dispatch => ({\n    GetCategoriesAction: (options) => dispatch(GetCategoriesAction(options)),\n    DeleteCategoryAction: (options) => dispatch(DeleteCategoryAction(options)),\n  })\n)(CategoryList);\n\nexport default CategoryList;\n"],"sourceRoot":""}